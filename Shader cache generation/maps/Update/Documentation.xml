<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TagTool</name>
    </assembly>
    <members>
        <member name="T:TagTool.Ai.PatternFlags">
            <summary>
            Bitwise flags for <see cref="T:TagTool.Ai.VocalizationPattern"/>.
            </summary>
        </member>
        <member name="T:TagTool.Ai.DialogueTypeEnum">
            <summary>
            WARNING: Halo 5 Forge Definitions
            </summary>
        </member>
        <member name="T:TagTool.Ai.VocalizationFlags">
            <summary>
            Bitwise flags for <see cref="T:TagTool.Ai.VocalizationDefinition"/>.
            </summary>
        </member>
        <member name="T:TagTool.Ai.AiVocalizationResponseFlags">
            <summary>
            Bitwise flags for <see cref="T:TagTool.Ai.AiVocalizationResponse"/>.
            </summary>
        </member>
        <member name="T:TagTool.Ai.CharacterGeneralFlags">
            <summary>
            Bitwise flags for <see cref="T:TagTool.Ai.CharacterGeneralProperties"/>.
            </summary>
        </member>
        <member name="T:TagTool.Analysis.ITagElementGuess">
            <summary>
            Interface for a tag element guess.
            </summary>
        </member>
        <member name="P:TagTool.Analysis.ITagElementGuess.Size">
            <summary>
            Gets the size of the tag element in bytes.
            </summary>
        </member>
        <member name="M:TagTool.Analysis.ITagElementGuess.Merge(TagTool.Analysis.ITagElementGuess)">
            <summary>
            Merges this guess with another one.
            </summary>
            <param name="other">The guess to merge with.</param>
            <returns><c>true</c> if the merge was successful.</returns>
        </member>
        <member name="M:TagTool.Analysis.ITagElementGuess.Accept(System.UInt32,TagTool.Analysis.ITagElementGuessVisitor)">
            <summary>
            Dispatches this guess to a visitor object.
            </summary>
            <param name="offset">The element offset to pass to the visitor.</param>
            <param name="visitor">The visitor object.</param>
        </member>
        <member name="T:TagTool.Analysis.ITagElementGuessVisitor">
            <summary>
            Interface for a class which can visit tag element guesses.
            </summary>
        </member>
        <member name="T:TagTool.Analysis.LayoutGuessFinalizer">
            <summary>
            Converts tag layout guesses into final layouts.
            </summary>
        </member>
        <member name="M:TagTool.Analysis.LayoutGuessFinalizer.MakeLayout(TagTool.Analysis.TagLayoutGuess,System.String,TagTool.Common.Tag)">
            <summary>
            Makes a layout from a layout guess.
            </summary>
            <param name="layout">The layout guess.</param>
            <param name="name">The name of the final layout.</param>
            <param name="groupTag">The group tag of the final layout. Can be <c>null</c>.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Analysis.TagAnalyzer.BuildTagMap(TagTool.Cache.HaloOnline.CachedTagData)">
            <summary>
            Builds a memory map for a tag.
            </summary>
            <param name="data">The tag data to build a memory map for.</param>
            <returns>The built map.</returns>
        </member>
        <member name="P:TagTool.Analysis.TagBlockGuess.ElementLayout">
            <summary>
            Gets the layout of each element in the tag block.
            </summary>
        </member>
        <member name="T:TagTool.Analysis.TagLayoutGuess">
            <summary>
            A guess at the layout of a tag.
            </summary>
        </member>
        <member name="P:TagTool.Analysis.TagLayoutGuess.Size">
            <summary>
            Gets the size of the layout in bytes.
            </summary>
        </member>
        <member name="M:TagTool.Analysis.TagLayoutGuess.Add(System.UInt32,TagTool.Analysis.ITagElementGuess)">
            <summary>
            Adds a guess to the layout.
            </summary>
            <param name="offset">The offset of the guess from the beginning of the layout.</param>
            <param name="guess">The guess to add.</param>
        </member>
        <member name="M:TagTool.Analysis.TagLayoutGuess.Merge(TagTool.Analysis.TagLayoutGuess)">
            <summary>
            Merges another layout into this one.
            </summary>
            <param name="otherLayout">The layout to merge with.</param>
        </member>
        <member name="M:TagTool.Analysis.TagLayoutGuess.TryGet(System.UInt32)">
            <summary>
            Tries to get the guess at an offset.
            </summary>
            <param name="offset">The offset to get the guess at.</param>
            <returns>The guess if one exists, or <c>null</c> otherwise.</returns>
        </member>
        <member name="M:TagTool.Analysis.TagLayoutGuess.Accept(TagTool.Analysis.ITagElementGuessVisitor)">
            <summary>
            Dispatches each guess in the layout to a visitor object.
            </summary>
            <param name="visitor">The visitor object.</param>
        </member>
        <member name="M:TagTool.Audio.Converter.RIFFChunk.#ctor(System.Int32,System.Int32)">
            <summary>
            Create a RIFF chunk. headerSize EXCLUDING RIFF size
            </summary>
            <param name="dataSize"></param>
            <param name="headerSize"></param>
        </member>
        <member name="T:TagTool.Audio.Converter.SoundFile">
            <summary>
            Prototype of a sound file header. Add fields as needed.
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.FilterBlock.LeftFilterFrequency">
            <summary>
            in Hz [0,8000]
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.FilterBlock.LeftFilterGain">
            <summary>
            in dB
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.FilterBlock.RightFilterFrequency">
            <summary>
            in Hz [0,8000]
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.FilterBlock.RightFilterGain">
            <summary>
            in dB
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.PitchLfoBlock.Delay">
            <summary>
            seconds
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.PitchLfoBlock.Frequency">
            <summary>
            Hz[0,43.7]
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.PitchLfoBlock.PitchModulation">
            <summary>
            octaves[-1,1]
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.FilterLfoBlock.Delay">
            <summary>
            in seconds
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.FilterLfoBlock.Frequency">
            <summary>
            in Hz[0,43.7]
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.FilterLfoBlock.CutoffModulation">
            <summary>
            octaves[-8,8]
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.FilterLfoBlock.GainModulation">
            <summary>
            dB[-16,16]
            </summary>
        </member>
        <member name="F:TagTool.Audio.CustomPlayback.SoundEffectPlaybackBlock.SoundEffectComponentBlock.Gain">
            <summary>
            additional attenuation to sound
            </summary>
        </member>
        <member name="F:TagTool.Audio.PitchRange.RuntimePermutationFlags">
            <summary>
            keeps track of played permutations
            </summary>
        </member>
        <member name="F:TagTool.Audio.Permutation.PermutationFlagsHaloOnline.SequencedBit">
            <summary>
            Wait for the currently playing permutation to finish
            </summary>
        </member>
        <member name="F:TagTool.Audio.PermutationChunk.EncodedSize">
            <summary>
            Encoded size, to get the real size apply a mask of 0x3FFFFF. It should always have the bit 0x400000 activated.
            </summary>
        </member>
        <member name="F:TagTool.Audio.PermutationChunk.RuntimeIndex">
            <summary>
            Changes at runtime depending on the g_xbox_sound data array index
            </summary>
        </member>
        <member name="F:TagTool.Audio.Gen2PermutationChunk.EncodedSize">
            <summary>
            Encoded size, to get the real size apply a mask of 0x3FFFFF.
            </summary>
        </member>
        <member name="F:TagTool.Audio.Promotion.Rule.SuppressionTime">
            <summary>
            time from when first permutation plays to when another sound from an equal or lower promotion can play
            </summary>
        </member>
        <member name="T:TagTool.Audio.Compression">
            <summary>
            Only PCM little endian, MP3 and FSB4 are supported by Halo Online
            </summary>
        </member>
        <member name="F:TagTool.Audio.PitchRangeParameter.NaturalPitch">
            <summary>
            the apparent pitch when these samples are played at their recorded pitch.
            </summary>
        </member>
        <member name="F:TagTool.Audio.PitchRangeParameter.BendBounds">
            <summary>
            the range of pitches that will be represented using this sample.
            </summary>
        </member>
        <member name="F:TagTool.Audio.PitchRangeParameter.MaxGainPitchBounds">
            <summary>
            the range of pitches that map to full gain.
            </summary>
        </member>
        <member name="F:TagTool.Audio.PitchRangeParameter.PlaybackBendBounds">
            <summary>
            the actual pitch will be clamped to this
            </summary>
        </member>
        <member name="T:TagTool.Audio.Scale">
            <summary>
            as the sound's input scale changes from zero to one, these modifiers move between the two values specified here. the
            sound will play using the current scale modifier multiplied by the values specified above. (0 values are ignored.)
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlatformCodec.LoadMode">
            <summary>
            Should be 0 in most cases. Seems to be used to determine streaming or loading.
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlaybackParameter.MininumDistance">
            <summary>
            the distance below which this sound no longer gets louder
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlaybackParameter.MaximumDistance">
            <summary>
            the distance beyond which this sound is no longer audible
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlaybackParameter.SkipFraction">
            <summary>
            fraction of requests to play this sound that will be ignored (0 means always play.)
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlaybackParameter.GainBase">
            <summary>
            these settings control random variation of volume and pitch.
             the second parameter gets clipped to the first.
            </summary>
            <summary>
            sound's random gain will start here
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlaybackParameter.GainVariance">
            <summary>
            sound's gain will be randomly modulated within this range
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlaybackParameter.RandomPitchBounds">
            <summary>
            the sound's pitch will be modulated randomly within this range.
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlaybackParameter.InnerConeAngle">
            <summary>
            these settings allow sounds to be directional, fading as they turn away from the listener
            </summary>
            <summary>
            within the cone defined by this angle and the sound's direction, the sound plays with a gain of 1.0.
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlaybackParameter.OuterConeAngle">
            <summary>
            outside the cone defined by this angle and the sound's direction, the sound plays with a gain of OUTER CONE GAIN. (0
            means the sound does not attenuate with direction.)
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlaybackParameter.OuterConeGain">
            <summary>
            the gain to use when the sound is directed away from the listener
            </summary>
        </member>
        <member name="F:TagTool.Audio.PlaybackParameter.Flags">
            <summary>
            NOTE: this will only apply when the sound is started via script
            azimuth:
                0 => front
                90 => left
                180 => back
              
            270 => right
            
            </summary>
        </member>
        <member name="F:TagTool.Bitmaps.BitmapCurveMode.ChooseBest">
            <summary>
            Will choose FAST if your bitmap is bright
            </summary>
        </member>
        <member name="F:TagTool.Bitmaps.BitmapCurveMode.ForceFast">
            <summary>
            Forces FAST mode, but causes banding in dark areas
            </summary>
        </member>
        <member name="F:TagTool.Bitmaps.BitmapCurveMode.ForcePretty">
            <summary>
            Chooses the best looking curve, probably slower
            </summary>
        </member>
        <member name="M:TagTool.Bitmaps.Utils.BitmapSampler.GetColourBounded(System.Int32,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Returns colour but ensures sample is within array/row bounds (for bilinear sampling)
            </summary>
        </member>
        <member name="T:TagTool.Bitmaps.XboxGraphics">
            <summary>
            C# implementation of xgraphics
            </summary>
        </member>
        <member name="M:TagTool.Bitmaps.XboxGraphics.XGGetBlockDimensions(TagTool.Direct3D.D3D9x.D3D9xGPU.GPUTEXTUREFORMAT,System.UInt32@,System.UInt32@)">
            <summary>
            Get the dimension of the compression block, if the format is not compressed, return 1x1 blocks
            </summary>
            <param name="format"></param>
            <param name="pWidth"></param>
            <param name="pHeight"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Bitmaps.XboxGraphics.XGEndianSwapSurface(System.Int32,System.Byte[])">
            <summary>
            Endianswap entire byte[] according to D3DFormat
            </summary>
        </member>
        <member name="M:TagTool.Bitmaps.XboxGraphics.GetMipLevelRequiresOffset(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            This takes the current width and height and checks wether  the minimal dimension with border is &lt;= 16.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="hasBorder"></param>
            <returns>0 if min dimension less or equal to 16, else returns the mipmap level at which the min width would be less or equal to 16</returns>
        </member>
        <member name="M:TagTool.Bitmaps.XboxGraphics.XGAddress2DTiledOffset(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Translates the x and y offset of a pixel to the tiled memory offset in blocks
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="texelPitch"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Bitmaps.XboxGraphics.UntileSurface(System.UInt32,System.UInt32,System.UInt32,TagTool.Bitmaps.XboxGraphics.XGPOINT,System.Byte[],System.UInt32,TagTool.Direct3D.D3D9.D3DBOX)">
            <summary>
            Untile surface. The input dimensions must be in terms of blocks.
            </summary>
            <param name="width">Width of the surface in blocks</param>
            <param name="height">Height of the surface in blocks</param>
            <param name="rowPitch">Size in bytes of a row of pixels in the destination image</param>
            <param name="point">Offset in the surface</param>
            <param name="source">Source data</param>
            <param name="texelPitch">Size in bytes of a block</param>
            <param name="rect">Image rectangle to untile</param>
            <returns></returns>
        </member>
        <member name="T:TagTool.Bitmaps.BitmapFlags">
            <summary>
            Bitmap flags.
            </summary>
        </member>
        <member name="F:TagTool.Bitmaps.BitmapFlags.Compressed">
            <summary>
            The texture is in a "compressed" format (DXT, DXN, etc.).
            Its width and height must be rounded up to multiples of 4 on load.
            </summary>
        </member>
        <member name="T:TagTool.Bitmaps.BitmapFormat">
            <summary>
            Bitmap data formats.
            </summary>
        </member>
        <member name="M:TagTool.Bitmaps.BitmapFormatUtils.GetBitsPerPixel(TagTool.Bitmaps.BitmapFormat)">
            <summary>
            Get the number of bits per pixel of a bitmap format.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Bitmaps.BitmapFormatUtils.GetBlockSize(TagTool.Bitmaps.BitmapFormat)">
            <summary>
            Get the size in bytes of a block compressed format.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Bitmaps.BitmapFormatUtils.GetBlockDimension(TagTool.Bitmaps.BitmapFormat)">
            <summary>
            Get the dimension of a block in block compressed formats.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Bitmaps.BitmapFormatUtils.GetCompressionFactor(TagTool.Bitmaps.BitmapFormat)">
            <summary>
            Get the compression factor of a bitmap format.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Bitmaps.BitmapFormatUtils.GetMinimalVirtualSize(TagTool.Bitmaps.BitmapFormat)">
            <summary>
            Get the minimal virtual size of an Xbox 360 Bitmap
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:TagTool.Bitmaps.BitmapType">
            <summary>
            Bitmap types.
            </summary>
        </member>
        <member name="M:TagTool.Bitmaps.BitmapUtils.GetVirtualSize(System.Int32,System.Int32)">
            <summary>
            Get the virtual size of an Xbox 360 bitmap.
            </summary>
            <param name="size"></param>
            <param name="minimalSize"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Bitmaps.BitmapUtils.GetEquivalentBitmapFormat(TagTool.Bitmaps.BitmapFormat)">
            <summary>
            When converting xbox bitmap formats (and other rare formats), get the standard format that it can be converted it without loss
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:TagTool.Bitmaps.DDS.DDSFormatType">
            <summary>
            DDS format types.
            </summary>
        </member>
        <member name="F:TagTool.Bitmaps.DDS.DDSFormatType.RGB">
            <summary>
            The texture contains RGB data.
            </summary>
        </member>
        <member name="F:TagTool.Bitmaps.DDS.DDSFormatType.YUV">
            <summary>
            The texture contains YUV data.
            </summary>
        </member>
        <member name="F:TagTool.Bitmaps.DDS.DDSFormatType.Luminance">
            <summary>
            The texture contains luminance data.
            </summary>
        </member>
        <member name="F:TagTool.Bitmaps.DDS.DDSFormatType.Alpha">
            <summary>
            The texture only contains an alpha channel.
            </summary>
        </member>
        <member name="F:TagTool.Bitmaps.DDS.DDSFormatType.Other">
            <summary>
            The format should be determined by the texture's FourCC code or the D3D10 format.
            </summary>
        </member>
        <member name="M:TagTool.Bitmaps.DDS.DDSFourCC.FromString(System.String)">
            <summary>
            Creates a FourCC value from a string.
            </summary>
            <param name="str">The string.</param>
            <returns>The FourCC value.</returns>
        </member>
        <member name="T:TagTool.Bitmaps.DDS.DXGIFormat">
            <summary>
            DXGI texture formats.
            </summary>
        </member>
        <member name="M:TagTool.Bitmaps.DDS.DDSHeader.Write(TagTool.IO.EndianWriter)">
            <summary>
            Write a DDS header
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:TagTool.Bitmaps.DDS.DDSHeader.Read(TagTool.IO.EndianReader)">
            <summary>
            Read the content of the DDS header.
            </summary>
            <param name="reader"></param>
            <returns>File is valid</returns>
        </member>
        <member name="M:TagTool.Bitmaps.DDS.PixelFormat.Write(TagTool.IO.EndianWriter)">
            <summary>
            Write the DDS Pixel Format Header
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:TagTool.Bitmaps.DDS.PixelFormat.Read(TagTool.IO.EndianReader)">
            <summary>
            Read the DDS Pixel Format Header
            </summary>
            <param name="reader"></param>
            <returns>Valid header</returns>
        </member>
        <member name="M:TagTool.Bitmaps.BitmapDecoder.FixCTX1Indices(System.Byte[],System.Byte,System.Byte)">
            <summary>
            Converts from 2 bit index from CTX1 to the 3 bit index from DXN
            </summary>
            <param name="indices"></param>
            <param name="c0"></param>
            <param name="c1"></param>
            <returns></returns>
        </member>
        <member name="P:TagTool.BlamFile.MapFileBuilder.MapName">
            <summary>
            Optional map Display Name (overrides MapInfo)
            </summary>
        </member>
        <member name="P:TagTool.BlamFile.MapFileBuilder.MapDescription">
            <summary>
            Optional map description (overrides MapInfo)
            </summary>
        </member>
        <member name="P:TagTool.BlamFile.MapFileBuilder.MapInfo">
            <summary>
            Optional map info (if not provided, one will be generated)
            </summary>
        </member>
        <member name="P:TagTool.BlamFile.MapFileBuilder.MapVariant">
            <summary>
            Optional map variant
            </summary>
        </member>
        <member name="T:TagTool.BlamFile.MapVariantGenerator">
            <summary>
            Generates a map variant blf given a scenario and metadata
            </summary>
        </member>
        <member name="T:TagTool.BlamFile.Blf">
            <summary>
            Main class for blf format. Reads, parse and writes blf.
            </summary>
        </member>
        <member name="M:TagTool.BlamFile.Blf.IsValid(TagTool.IO.EndianReader)">
            <summary>
            Verifies if the stream points to a valid blf start chunk and set the endian format.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.BlamFile.Blf.FindChunkEndianFormat(TagTool.IO.EndianReader)">
            <summary>
            Find the endian format of the file. Assumes that the reader points to the beginning of the blf file stream.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.BlamFile.Blf.ConvertBlf(TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform)">
            <summary>
            Convert to specified Cache Version.
            </summary>
            <param name="targetVersion"></param>
            <param name="platform"></param>
        </member>
        <member name="M:TagTool.BlamFile.Blf.ConvertHalo3ToODSTScenarioChunk">
            <summary>
            Converts a Halo 3 Scenario chunk (levl) to ODST format (HO)
            </summary>
        </member>
        <member name="F:TagTool.Cache.CachedTag.AddressToOffsetOverride">
            <summary>
            A function to map cache addresses to file offsets
            </summary>
        </member>
        <member name="T:TagTool.Cache.PlatformUnsignedValue">
            <summary>
            Platform dependent unsigned integer, uint32 when 32 bit, uint64 when 64 bit. 
            Serializer is responsible for properly reading/writing to file.
            </summary>
        </member>
        <member name="T:TagTool.Cache.PlatformSignedValue">
            <summary>
            Platform dependent signed integer, int32 when 32 bit, int64 when 64 bit. 
            Serializer is responsible for properly reading/writing to file.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Gen2.TagCacheGen2.VirtualAddress">
            <summary>
            Address in memory (xbox) of the tag data. For Halo 2 Vista, this values turns out to be 0. Every address in the tag data is converted to an offset using this value.
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverHalo2">
            <summary>
            StringID resolver for Halo 3.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Gen4.TagCacheGen4.GlobalInstances">
            <summary>
            Globals tag instances in the cache file.
            </summary>
        </member>
        <member name="F:TagTool.Cache.GameCacheGen4.SectionAlign">
            <summary>
            Alignment of sections in the cache
            </summary>
        </member>
        <member name="F:TagTool.Cache.GameCacheGen4.PageAlign">
            <summary>
            Alignment of resource pages in the resource section.
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverHalo4">
            <summary>
            StringID resolver for Halo 4. 
            Halo 4 StringId are 5-8-19 (length-set-index) format instead of (8-8-16)
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverHalo3MCC">
            <summary>
            StringID resolver for Halo 3.
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverHalo3Beta">
            <summary>
            StringID resolver for Halo 3 Beta.
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverHalo3ODSTMCC">
            <summary>
            StringID resolver for Halo 3 ODST.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Gen3.TagCacheGen3.GlobalInstances">
            <summary>
            Globals tag instances in the cache file.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.ResourcePage.OldFlags">
            <summary>
            Gets or sets flags containing information about where the resource is located.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.ResourcePage.NewFlags">
            <summary>
            Gets or sets flags containing information about where the resource is located.
            </summary>
        </member>
        <member name="T:TagTool.Cache.Resources.OldRawPageFlags">
            <summary>
            Flags related to the location and storage of the resource data.
            Only for 1.106708.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.OldRawPageFlags.UseChecksum">
            <summary>
            Indicates that the resource's checksum should be validated.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.OldRawPageFlags.InResources">
            <summary>
            Indicates that the resource is in resources.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.OldRawPageFlags.InTextures">
            <summary>
            Indicates that the resource is in textures.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.OldRawPageFlags.InTexturesB">
            <summary>
            Indicates that the resource is in textures_b.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.OldRawPageFlags.InAudio">
            <summary>
            Indicates that the resource is in audio.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.OldRawPageFlags.InResourcesB">
            <summary>
            Indicates that the resource is in resources_b.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.OldRawPageFlags.InMods">
            <summary>
            Indicates that the resource is in mods.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.OldRawPageFlags.UseChecksum2">
            <summary>
            Indicates that the resource's checksum should be validated.
            Alternate flag for <see cref="F:TagTool.Cache.Resources.OldRawPageFlags.UseChecksum"/>.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.OldRawPageFlags.LocationMask">
            <summary>
            Mask for the location part of the flags.
            </summary>
        </member>
        <member name="T:TagTool.Cache.Resources.NewRawPageFlags">
            <summary>
            Flags related to the location and storage of the resource data.
            Only for versions 1.235640 and newer.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.NewRawPageFlags.UseChecksum">
            <summary>
            Indicates that the resource's checksum should be validated.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.NewRawPageFlags.InResources">
            <summary>
            Indicates that the resource is in resources.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.NewRawPageFlags.InTextures">
            <summary>
            Indicates that the resource is in textures.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.NewRawPageFlags.InTexturesB">
            <summary>
            Indicates that the resource is in textures_b.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.NewRawPageFlags.InAudio">
            <summary>
            Indicates that the resource is in audio.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.NewRawPageFlags.InResourcesB">
            <summary>
            Indicates that the resource is in resources_b.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.NewRawPageFlags.InRenderModels">
            <summary>
            Indicates that the resource is in render_models.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.NewRawPageFlags.InLightmaps">
            <summary>
            Indicates that the resource is in lightmaps.dat.
            </summary>
        </member>
        <member name="F:TagTool.Cache.Resources.NewRawPageFlags.LocationMask">
            <summary>
            Mask for the location part of the flags.
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverHaloReachMCC">
            <summary>
            StringID resolver for Halo Reach. Halo Reach StringId are 7-8-17 (length-set-index) format instead of (8-8-16)
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagHaloOnline.HeaderOffset">
            <summary>
            Gets the offset of the tag's header, or -1 if the tag is not in a file.
            </summary>
        </member>
        <member name="F:TagTool.Cache.HaloOnline.CachedTagHaloOnline.Offset">
            <summary>
            Gets the offset of the tag's main structure from the start of its header.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagHaloOnline.TotalSize">
            <summary>
            Gets the total size of the tag (including both its header and data), or 0 if the tag is not in a file.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagHaloOnline.Checksum">
            <summary>
            Gets the checksum (adler32?) of the tag's data. Ignored if checksum verification is patched out.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagHaloOnline.Dependencies">
            <summary>
            Gets the indices of tags that this tag depends on.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagHaloOnline.PointerOffsets">
            <summary>
            Gets a list of offsets to each pointer in the tag, relative to the beginning of the tag's header.
            </summary>
            <remarks>
            This previously used offsets relative to the beginning of the tag's data.
            This was changed in order to speed up loading and be more closer to the engine.
            </remarks>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagHaloOnline.ResourcePointerOffsets">
            <summary>
            Gets a list of offsets to each resource pointer in the tag, relative to the beginning of the tag's header.
            </summary>
            <remarks>
            See the remarks for <see cref="P:TagTool.Cache.HaloOnline.CachedTagHaloOnline.PointerOffsets"/>.
            </remarks>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagHaloOnline.TagReferenceOffsets">
            <summary>
            Gets a list of offsets to each tag reference in the tag, relative to the beginning of the tag's header.
            </summary>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.CachedTagHaloOnline.PointerToOffset(System.UInt32)">
            <summary>
            Converts a pointer to an offset relative to the tag's header.
            </summary>
            <param name="pointer">The pointer to convert.</param>
            <returns>The offset.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.CachedTagHaloOnline.OffsetToPointer(System.UInt32)">
            <summary>
            Converts an offset relative to the tag's header to a pointer.
            </summary>
            <param name="offset">The offset to convert.</param>
            <returns>The pointer.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.CachedTagHaloOnline.ReadHeader(System.IO.BinaryReader,TagTool.Cache.StringTable)">
            <summary>
            Reads the header for the tag instance from a stream.
            </summary>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.CachedTagHaloOnline.WriteHeader(System.IO.BinaryWriter,TagTool.Cache.StringTable)">
            <summary>
            Writes the header for the tag instance to a stream.
            </summary>
            <param name="writer">The stream to write to.</param>
            <param name="stringTable">Reference to the Halo Online String Table</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.CachedTagHaloOnline.CalculateHeaderSize(TagTool.Cache.HaloOnline.CachedTagData)">
            <summary>
            Calculates the header size that would be needed for a given block of tag data.
            </summary>
            <param name="data">The descriptor to use.</param>
            <returns>The size of the tag's header.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.CachedTagHaloOnline.Update(TagTool.Cache.HaloOnline.CachedTagData,System.UInt32)">
            <summary>
            Updates the tag instance's state from a block of tag data.
            </summary>
            <param name="data">The tag data.</param>
            <param name="dataOffset">The offset of the tag data relative to the tag instance's header.</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCacheHaloOnline.Add(System.IO.Stream,System.Byte[],System.UInt32@)">
            <summary>
            Adds a resource to the cache.
            </summary>
            <param name="resourceCacheStream">The stream open on the resource cache.</param>
            <param name="tagResourceData">The data to compress.</param>
            <param name="compressedSize">On return, the size of the compressed data.</param>
            <returns>The index of the resource that was added.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCacheHaloOnline.AddRaw(System.IO.Stream,System.Byte[])">
            <summary>
            Adds a raw, pre-compressed resource to the cache.
            </summary>
            <param name="resourceCacheStream">The stream open on the resource cache.</param>
            <param name="rawData">The raw data to add.</param>
            <returns>The index of the resource that was added.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCacheHaloOnline.ExtractRaw(System.IO.Stream,System.Int32,System.UInt32)">
            <summary>
            Extracts raw, compressed resource data.
            </summary>
            <param name="resourceCacheStream">The stream open on the resource cache.</param>
            <param name="resourceIndex">The index of the resource to decompress.</param>
            <param name="compressedSize">Total size of the compressed data, including chunk headers.</param>
            <returns>The raw, compressed resource data.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCacheHaloOnline.ImportRaw(System.IO.Stream,System.Int32,System.Byte[])">
            <summary>
            Overwrites a resource with raw, pre-compressed data.
            </summary>
            <param name="resourceCacheStream">The stream open on the resource cache.</param>
            <param name="resourceIndex">The index of the resource to overwrite.</param>
            <param name="data">The raw, pre-compressed data to overwrite it with.</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCacheHaloOnline.Decompress(System.IO.Stream,System.Int32,System.UInt32,System.IO.Stream)">
            <summary>
            Decompresses a resource.
            </summary>
            <param name="resourceStream">The stream open on the resource cache.</param>
            <param name="resourceIndex">The index of the resource to decompress.</param>
            <param name="compressedSize">Total size of the compressed data, including chunk headers.</param>
            <param name="outStream">The stream to write the decompressed resource data to.</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCacheHaloOnline.Compress(System.IO.Stream,System.Int32,System.Byte[])">
            <summary>
            Compresses and saves data for a resource.
            </summary>
            <param name="resourceStream">The stream open on the resource data. It must have read/write access.</param>
            <param name="resourceIndex">The index of the resource to edit.</param>
            <param name="data">The data to compress.</param>
            <returns>The total size of the compressed resource in bytes.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCachesHaloOnlineBase.AddResource(TagTool.Common.PageableResource,System.IO.Stream)">
            <summary>
            Adds a new pageable_resource to the current cache.
            </summary>
            <param name="resource">The pageable_resource to add.</param>
            <param name="dataStream">The stream to read the resource data from.</param>
            <exception cref="T:System.ArgumentNullException">resource</exception>
            <exception cref="T:System.ArgumentException">The input stream is not open for reading;dataStream</exception>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCachesHaloOnlineBase.AddRawResource(TagTool.Common.PageableResource,System.Byte[])">
            <summary>
            Adds raw, pre-compressed resource data to a cache.
            </summary>
            <param name="resource">The resource reference to initialize.</param>
            <param name="data">The pre-compressed data to store.</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCachesHaloOnlineBase.ExtractResource(TagTool.Common.PageableResource,System.IO.Stream)">
            <summary>
            Extracts and decompresses the data for a resource from the current cache.
            </summary>
            <param name="pageable">The resource.</param>
            <param name="outStream">The stream to write the extracted data to.</param>
            <exception cref="T:System.ArgumentException">Thrown if the output stream is not open for writing.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the file containing the resource has not been loaded.</exception>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCachesHaloOnlineBase.ExtractResource(System.IO.Stream,TagTool.Common.PageableResource,System.IO.Stream)">
            <summary>
            Extracts and decompresses the data for a resource from the current cache.
            </summary>
            <param name="inStream"></param>
            <param name="pageable">The resource.</param>
            <param name="outStream">The stream to write the extracted data to.</param>
            <exception cref="T:System.ArgumentException">Thrown if the output stream is not open for writing.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the file containing the resource has not been loaded.</exception>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCachesHaloOnlineBase.ExtractRawResource(TagTool.Common.PageableResource)">
            <summary>
            Extracts raw, compressed resource data.
            </summary>
            <param name="resource">The resource.</param>
            <returns>The raw, compressed resource data.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCachesHaloOnlineBase.ReplaceResource(TagTool.Common.PageableResource,System.IO.Stream)">
            <summary>
            Compresses and replaces the data for a resource.
            </summary>
            <param name="resource">The resource whose data should be replaced. On success, the reference will be adjusted to account for the new data.</param>
            <param name="dataStream">The stream to read the new data from.</param>
            <exception cref="T:System.ArgumentException">Thrown if the input stream is not open for reading.</exception>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.ResourceCachesHaloOnlineBase.ReplaceRawResource(TagTool.Common.PageableResource,System.Byte[])">
            <summary>
            Replaces a resource with raw, pre-compressed data.
            </summary>
            <param name="resource">The resource whose data should be replaced. On success, the reference will be adjusted to account for the new data.</param>
            <param name="data">The raw, pre-compressed data to use.</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.StringTableHaloOnline.AddStringBlocking(System.String)">
            <summary>
            AddString() but blocks other threads
            </summary>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.StringTableHaloOnline.CreateFromStrings">
            <summary>
            Creates a string table exactly like the ms23 one up to the last hardcoded stringid in the engine. Do not modify this.
            </summary>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.AllocateTag(TagTool.Tags.TagGroup,System.String)">
            <summary>
            Allocates a new tag at the end of the tag list without updating the file.
            You can give the tag data by using one of the overwrite functions.
            </summary>
            <param name="type">The tag's type information.</param>
            <param name="name">The name of the tag instance.</param>
            <returns>The allocated tag.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.CreateCachedTag(System.Int32,TagTool.Tags.TagGroup,System.String)">
            <summary>
            Returns a new CachedTag instance without updating the tag cache.
            </summary>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.ExtractTagRaw(System.IO.Stream,TagTool.Cache.HaloOnline.CachedTagHaloOnline)">
            <summary>
            Reads a tag's raw data from the file, including its header.
            </summary>
            <param name="stream">The stream to read from.</param>
            <param name="tag">The tag to read.</param>
            <returns>The data that was read.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.ExtractTag(System.IO.Stream,TagTool.Cache.HaloOnline.CachedTagHaloOnline)">
            <summary>
            Reads a tag's data from the file.
            </summary>
            <param name="stream">The stream to read from.</param>
            <param name="tag">The tag to read.</param>
            <returns>The data that was read.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.SetTagDataRaw(System.IO.Stream,TagTool.Cache.HaloOnline.CachedTagHaloOnline,System.Byte[])">
            <summary>
            Overwrites a tag's raw data, including its header.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="tag">The tag to overwrite.</param>
            <param name="data">The data to overwrite the tag with.</param>
            <exception cref="T:System.ArgumentNullException">tag</exception>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.SetTagData(System.IO.Stream,TagTool.Cache.HaloOnline.CachedTagHaloOnline,TagTool.Cache.HaloOnline.CachedTagData)">
            <summary>
            Overwrites a tag's data.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="tag">The tag to overwrite.</param>
            <param name="data">The data to store.</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.BuildTagData(System.IO.Stream,TagTool.Cache.HaloOnline.CachedTagHaloOnline,System.UInt32@)">
            <summary>
            Builds a description for a tag's data without extracting anything.
            </summary>
            <param name="stream">The stream to read from.</param>
            <param name="tag">The tag to read.</param>
            <param name="dataOffset">On return, this will contain the offset of the tag's data relative to its header.</param>
            <returns>The description that was built. </returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.ResizeBlock(System.IO.Stream,TagTool.Cache.HaloOnline.CachedTagHaloOnline,System.Int64,System.Int64,System.Int64)">
            <summary>
            Resizes a block of data in the file.
            </summary>
            <param name="stream">The stream.</param>
            <param name="tag">The tag that the block belongs to, if any.</param>
            <param name="startOffset">The offset where the block to resize begins at.</param>
            <param name="oldSize">The current size of the block to resize.</param>
            <param name="newSize">The new size of the block.</param>
            <exception cref="T:System.ArgumentException">Cannot resize a block to a negative size</exception>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.FixTagOffsets(System.Int64,System.Int64,TagTool.Cache.HaloOnline.CachedTagHaloOnline)">
            <summary>
            Fixes tag offsets after a resize operation.
            </summary>
            <param name="startOffset">The offset where the resize operation took place.</param>
            <param name="sizeDelta">The amount to add to each tag offset after the start offset.</param>
            <param name="ignore">A tag to ignore.</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.GetNewTagOffset(System.Int32)">
            <summary>
            Gets the offset that a new tag should be inserted at so that the tags are stored in order by index.
            </summary>
            <param name="index">The index of the new tag.</param>
            <returns>The offset that the tag data should be written to.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.GetTagDataEndOffset">
            <summary>
            Gets the tag data end offset.
            </summary>
            <returns>The offset of the first byte past the last tag in the file.</returns>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.UpdateTagOffsets(TagTool.IO.EndianWriter)">
            <summary>
            Updates the tag offset table in the file.
            </summary>
            <param name="writer">The stream to write to.</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.UpdateFileHeader(TagTool.IO.EndianWriter,System.UInt32)">
            <summary>
            Updates the file header.
            </summary>
            <param name="writer">The stream to write to.</param>
            <param name="offsetTableOffset">The offset table offset.</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.LoadTagNames(System.String)">
            <summary>
            Loads tag file names from the appropriate tag_list.csv file.
            </summary>
            <param name="path">The path to the tag_list.csv file.</param>
        </member>
        <member name="M:TagTool.Cache.HaloOnline.TagCacheHaloOnline.SaveTagNames(System.String)">
            <summary>
            Saves tag file names to the appropriate tag_list.csv file.
            </summary>
            <param name="path">The path to the tag_list.csv file.</param>
        </member>
        <member name="T:TagTool.Cache.HaloOnline.CachedTagData">
            <summary>
            Contains tag data and a description of it.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagData.Group">
            <summary>
            The tag data's group.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagData.MainStructOffset">
            <summary>
            The offset of the main structure in the tag data.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagData.Dependencies">
            <summary>
            Gets the indices of tags that the tag data depends on.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagData.PointerFixups">
            <summary>
            Gets a list of fixups for pointers in the tag data.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagData.ResourcePointerOffsets">
            <summary>
            Gets a list of offsets to each resource pointer in the tag data.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagData.TagReferenceOffsets">
            <summary>
            Gets a list of offsets to each tag reference in the tag data.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagData.Data">
            <summary>
            The serialized tag data.
            </summary>
        </member>
        <member name="T:TagTool.Cache.HaloOnline.CachedTagData.PointerFixup">
            <summary>
            Contains information about a pointer in tag data that needs to be adjusted.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagData.PointerFixup.WriteOffset">
            <summary>
            The offset (from the start of the tag's data) of the pointer.
            </summary>
        </member>
        <member name="P:TagTool.Cache.HaloOnline.CachedTagData.PointerFixup.TargetOffset">
            <summary>
            The offset (from the start of the tag's data) that the pointer should point to.
            </summary>
        </member>
        <member name="M:TagTool.Cache.TagCache.TryParseGroupTag(System.String,TagTool.Common.Tag@)">
            <summary>
            Returns a matching group Tag if found. Tag result resolves to the 4 letter representation of the group or ???? if null as a string.
            </summary>
            <param name="name">Group name in long or short representation.</param>
            <param name="result">Will be set to a matching group Tag if found else Tag.Null</param>
            <returns>True if group was found or (input name is "none" or "null" and tag is null) else false.</returns>
        </member>
        <member name="M:TagTool.Cache.TagCache.IsTagPathValid(System.String)">
            <summary>
            Checks that tag path contains valid characters only and that tag group is valid.
            </summary>
            <param name="path">Tag path including long or short tag group name.</param>
            <returns>True if valid else false</returns>
        </member>
        <member name="M:TagTool.Cache.TagCache.TagExists(System.String)">
            <summary>
            Checks if tag path exists in TagTable.
            </summary>
            <param name="path">Tag path including long or short tag group name.</param>
            <returns>True if exists else false</returns>
        </member>
        <member name="M:TagTool.Cache.TagCache.IsTagPathValidAndAvailable(System.String)">
            <summary>
            Checks that tag path/group are not malformed and that tag does not already exist.
            </summary>
            <param name="path">Tag path including long or short tag group name.</param>
            <returns>True if valid and available else false</returns>
        </member>
        <member name="T:TagTool.Cache.CacheAddressType">
            <summary>
            Resource address types.
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheAddressType.Memory">
            <summary>
            The address is a memory address.
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheAddressType.Definition">
            <summary>
            The address points to a location in the resource definition data.
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheAddressType.Data">
            <summary>
            The address points to a location in the data (tag or resource data)
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheAddressType.SecondaryData">
            <summary>
            The address points to a location in the raw secondary resource data. Gen 3 only
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheAddressType.TertiaryData">
            <summary>
            The address points to a location in the raw territary resource data. Gen 4 only
            </summary>
        </member>
        <member name="T:TagTool.Cache.CacheFilePartition">
            <summary>
            Partitions within the tag section of a map file.
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheFilePartition.VirtualAddress">
            <summary>
            The address of the partition in memory. Use MapHeader.BaseAddress to get the relative address in the tag section.
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheFilePartition.Size">
            <summary>
            The size of the partition. The sum of all partitions should be equal to the size of the tag section.
            </summary>
        </member>
        <member name="T:TagTool.Cache.CacheFileSectionTable">
            <summary>
            Section table in gen3 cache files.
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheFileSectionTable.SectionAddressToOffsets">
            <summary>
            Add this value to the section virtual address to get the file offset
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheFileSectionTable.Sections">
            <summary>
            Sections in a map file, ordered and offset is determined by the sizes after the map header.
            </summary>
        </member>
        <member name="M:TagTool.Cache.CacheFileSectionTable.GetSectionOffset(TagTool.Cache.CacheFileSectionType)">
            <summary>
            Get the section's file offset given the type
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Cache.CacheFileSectionTable.GetOffset(TagTool.Cache.CacheFileSectionType,System.UInt32)">
            <summary>
            Get the offset of the specified address in the section.
            </summary>
            <param name="type"></param>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="T:TagTool.Cache.CacheFileSection">
            <summary>
            A virtual section of a cache file.
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheFileSection.Offset">
            <summary>
            The virtual address of the cache file interop section.
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheFileSection.Size">
            <summary>
            The size of the cache file interop section.
            </summary>
        </member>
        <member name="T:TagTool.Cache.CacheFileSectionType">
            <summary>
            Enum to be used as index in CacheFileInterop in Gen3 map files.
            </summary>
        </member>
        <member name="M:TagTool.Cache.CacheVersionDetection.DetectFromTimestamp(System.Int64,TagTool.Cache.CacheVersion@)">
            <summary>
            Detects the engine that a tags.dat was built for based on its timestamp.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="closestGuess">On return, the closest guess for the engine's version.</param>
            <returns>The engine version if the timestamp matched directly, otherwise <see cref="F:TagTool.Cache.CacheVersion.Unknown"/>.</returns>
        </member>
        <member name="M:TagTool.Cache.CacheVersionDetection.GetTimestamp(TagTool.Cache.CacheVersion)">
            <summary>
            Gets the timestamp for a version.
            </summary>
            <param name="version">The version.</param>
            <returns>The timestamp, or -1 for <see cref="F:TagTool.Cache.CacheVersion.Unknown"/>.</returns>
        </member>
        <member name="M:TagTool.Cache.CacheVersionDetection.GetFromBuildName(System.String,TagTool.Cache.CacheVersion@,TagTool.Cache.CachePlatform@)">
            <summary>
            Gets the <see cref="T:TagTool.Cache.CacheVersion"/> associated with the specified build name.
            </summary>
            <param name="buildName">The build name.</param>
            <param name="version"></param>
            <param name="cachePlatform"></param>
            <returns>The version, or <see cref="F:TagTool.Cache.CacheVersion.Unknown"/> if not found.</returns>
        </member>
        <member name="M:TagTool.Cache.CacheVersionDetection.GetBuildName(TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform)">
            <summary>
            Gets the version string corresponding to an <see cref="T:TagTool.Cache.CacheVersion"/> value.
            </summary>
            <param name="version">The version.</param>
            <param name="platform"></param>
            <returns>The version string.</returns>
        </member>
        <member name="M:TagTool.Cache.CacheVersionDetection.IsLittleEndian(TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform)">
            <summary>
            Checks if a <see cref="T:TagTool.Cache.CacheVersion"/> is in Little-Endian or Big-Endian.
            </summary>
            <param name="version">The <see cref="T:TagTool.Cache.CacheVersion"/> to check the endianness of.</param>
            <param name="cachePlatform"></param>
            <returns>True if the <see cref="T:TagTool.Cache.CacheVersion"/> is Little-Endian, false otherwise.</returns>
        </member>
        <member name="M:TagTool.Cache.CacheVersionDetection.AttributeInCacheVersion(TagTool.Tags.TagFieldAttribute,TagTool.Cache.CacheVersion)">
            <summary>
            Determines whether a field exists in the given CacheVersion. Defines a priority : Versions, Gen, Min/Max.
            </summary>
            <param name="attr"></param>
            <param name="compare"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Cache.CacheVersionDetection.Compare(TagTool.Cache.CacheVersion,TagTool.Cache.CacheVersion)">
            <summary>
            Compares two version numbers.
            </summary>
            <param name="lhs">The left-hand version number.</param>
            <param name="rhs">The right-hand version number.</param>
            <returns>A positive value if the left version is newer, a negative value if the right version is newer, and 0 if the versions are equivalent.</returns>
        </member>
        <member name="M:TagTool.Cache.CacheVersionDetection.IsBetween(TagTool.Cache.CacheVersion,TagTool.Cache.CacheVersion,TagTool.Cache.CacheVersion)">
            <summary>
            Determines whether a version number is between two other version numbers (inclusive).
            </summary>
            <param name="compare">The version number to compare. If this is <see cref="F:TagTool.Cache.CacheVersion.Unknown"/>, this function will always return <c>true</c>.</param>
            <param name="min">The minimum version number. If this is <see cref="F:TagTool.Cache.CacheVersion.Unknown"/>, then the lower bound will be ignored.</param>
            <param name="max">The maximum version number. If this is <see cref="F:TagTool.Cache.CacheVersion.Unknown"/>, then the upper bound will be ignored.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Cache.CacheVersionDetection.IsInGen(TagTool.Cache.CacheGeneration,TagTool.Cache.CacheVersion)">
            <summary>
            Determine whether a CacheVersion belongs to a CacheGeneration
            </summary>
            <param name="gen"></param>
            <param name="compare"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Cache.CacheVersionDetection.GetGeneration(TagTool.Cache.CacheVersion)">
            <summary>
            Get CacheGeneration from CacheVersion
            </summary>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="F:TagTool.Cache.CacheVersionDetection.HaloOnlineTimestampMapping">
            <summary>
            tags.dat timestamps for each halo online game version.
            Timestamps in here map directly to a <see cref="T:TagTool.Cache.CacheVersion"/> value.
            </summary>
        </member>
        <member name="F:TagTool.Cache.CacheVersionDetection.VersionTimestamps">
            <summary>
            tags.dat timestamps for each game version.
            Timestamps in here should correspond directly to <see cref="T:TagTool.Cache.CacheVersion"/> enum values (excluding <see cref="F:TagTool.Cache.CacheVersion.Unknown"/>).
            </summary>
        </member>
        <member name="F:TagTool.Cache.CachePlatform.All">
            <summary>
            Belongs to both the original version and the MCC version
            </summary>
        </member>
        <member name="F:TagTool.Cache.CachePlatform.Original">
            <summary>
            Belongs only to the original version (xbox, xbox 360, PC (not MCC))
            </summary>
        </member>
        <member name="F:TagTool.Cache.CachePlatform.MCC">
            <summary>
            Belongs only to the MCC version
            </summary>
        </member>
        <member name="F:TagTool.Cache.GameCacheGen3.SectionAlign">
            <summary>
            Alignment of sections in the cache
            </summary>
        </member>
        <member name="F:TagTool.Cache.GameCacheGen3.PageAlign">
            <summary>
            Alignment of resource pages in the resource section.
            </summary>
        </member>
        <member name="F:TagTool.Cache.ModPackageSectionTable.Count">
            <summary>
            Number of sections in the table
            </summary>
        </member>
        <member name="F:TagTool.Cache.ModPackageSectionTable.Offset">
            <summary>
            Offset of the section table in the file
            </summary>
        </member>
        <member name="F:TagTool.Cache.ModPackageSectionHeader.Size">
            <summary>
            Size of the section
            </summary>
        </member>
        <member name="F:TagTool.Cache.ModPackageSectionHeader.Offset">
            <summary>
            Offset of the section in the file
            </summary>
        </member>
        <member name="F:TagTool.Cache.GenericSectionEntry.Count">
            <summary>
            Number of item in the table
            </summary>
        </member>
        <member name="F:TagTool.Cache.GenericSectionEntry.TableOffset">
            <summary>
            Offset to the table
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolver">
            <summary>
            Base class for an object which converts stringID values to and from string list indices.
            </summary>
        </member>
        <member name="M:TagTool.Cache.StringIdResolver.GetMinSetStringIndex">
            <summary>
            Gets the index of the first string which belongs to a set.
            </summary>
        </member>
        <member name="M:TagTool.Cache.StringIdResolver.GetMaxSetStringIndex">
            <summary>
            Gets the index of the last string which belongs to a set.
            </summary>
        </member>
        <member name="M:TagTool.Cache.StringIdResolver.GetSetOffsets">
            <summary>
            Gets the beginning offset for each set.
            </summary>
        </member>
        <member name="M:TagTool.Cache.StringIdResolver.StringIDToIndex(TagTool.Common.StringId)">
            <summary>
            Converts a stringID value to a string list index.
            </summary>
            <param name="stringId">The stringID.</param>
            <returns>The string list index, or -1 if none.</returns>
        </member>
        <member name="M:TagTool.Cache.StringIdResolver.IndexToStringID(System.Int32,TagTool.Cache.CacheVersion)">
            <summary>
            Converts a string list index to a stringID value.
            </summary>
            <param name="index">The index.</param>
            <param name="version">The version of the stringID. Halo 3 By default.</param>
            <returns>The stringID value, or <see cref="F:TagTool.Common.StringId.Invalid"/> if none.</returns>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverHalo3">
            <summary>
            StringID resolver for Halo 3.
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverHaloReach">
            <summary>
            StringID resolver for Halo Reach. Halo Reach StringId are 7-8-17 (length-set-index) format instead of (8-8-16)
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverHalo3ODST">
            <summary>
            StringID resolver for Halo 3 ODST.
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverMS23">
            <summary>
            StringID resolver for 1.106708.
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverMS28">
            <summary>
            StringID resolver for 11.1.498295.
            </summary>
        </member>
        <member name="T:TagTool.Cache.StringIdResolverMS30">
            <summary>
            StringID resolver for 12.1.700123.
            </summary>
        </member>
        <member name="T:TagTool.Commands.Porting.Gen2.PortTagGen2Command.PortingFlags">
            <summary>
            Flags which can be used to affect the behavior of <see cref="T:TagTool.Commands.Porting.PortTagCommand"/>.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.Gen2.PortTagGen2Command.PortingFlags.Replace">
            <summary>
            Replace tags of the same name when porting.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.Gen2.PortTagGen2Command.PortingFlags.Recursive">
            <summary>
            Recursively port all tag references available.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.GetEquivalentFlags``2(``0,``1)">
            <summary>
            Adds shared values from flags2 to flags1.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.GetEquivalentValue``2(``0,``1)">
            <summary>
            If the value of enum1 has a value with the same name as the value of enum2, return it.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.MultiplayerPrematchCamera(TagTool.Common.RealPoint3d,TagTool.Common.RealEulerAngles3d)">
            <summary>
            Given the position and the yaw/pitch given by the camera coordinates, create a CutsceneCameraPoint block. Note that roll is always 0 in the coordinates.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.ConvertXYZtoZYX(TagTool.Common.RealEulerAngles3d)">
            <summary>
            Convert from the Tait-Bryan XYZ to ZYX coordinate, assuming input Z = 0.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.RebuildRenderMethodAnimationsFromRmt2(TagTool.Tags.Definitions.RenderMethod,TagTool.Tags.Definitions.RenderMethod,TagTool.Tags.Definitions.RenderMethodTemplate,TagTool.Tags.Definitions.RenderMethodTemplate)">
            <summary>
            Same as RebuildRenderMethodAnimations(), however matches parameters via rmt2 instead of register info.
            </summary>
        </member>
        <member name="P:TagTool.Commands.Porting.PortTagCommand.Flags">
            <summary>
            Current set of <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/> which will affect the behavior of <see cref="T:TagTool.Commands.Porting.PortTagCommand"/>.
            </summary>
        </member>
        <member name="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags">
            <summary>
            Flags which can be used to affect the behavior of <see cref="T:TagTool.Commands.Porting.PortTagCommand"/>.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Replace">
            <summary>
            Replace tags of the same name when porting.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Recursive">
            <summary>
            Recursively port all tag references available.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.New">
            <summary>
            Create a new tag after the last index.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.UseNull">
            <summary>
            Port a tag using nulled tag indices where available.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Audio">
            <summary>
            Include Sound 'snd!' tags.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Elites">
            <summary>
            Include elite <see cref="T:TagTool.Tags.Definitions.Biped"/> tags.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.ForgePalette">
            <summary>
            Include <see cref="T:TagTool.Tags.Definitions.Scenario.SandboxObject"/> tag-blocks.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Squads">
            <summary>
            Include <see cref="T:TagTool.Tags.Definitions.Scenario.Squad"/> tag-blocks.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Scripts">
            <summary>
            Include <see cref="T:TagTool.Scripting.HsScript"/> tag-blocks.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Dialogue">
            <summary>
            Include udlg tags and their referenced audio.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.MatchShaders">
            <summary>
            Attempt to match shaders to existing tags.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.PefectShaderMatchOnly">
            <summary>
            Only use templates that have the exact same render method options
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Memory">
            <summary>
            Keep cache in memory during porting.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Ms30">
            <summary>
            Allow using existing tags from Ms30.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Print">
            <summary>
            Allow writing output to the console.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Merge">
            <summary>
            Merges new data if tags exist.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.Regex">
            <summary>
            Use a regular expression to determine target tags.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.GenerateShaders">
            <summary>
            Attempt to generate shaders.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Porting.PortTagCommand.PortingFlags.MPobject">
            <summary>
            Add a multiplayerobject block for spawnable tag types.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.FlagsAllSet(TagTool.Commands.Porting.PortTagCommand.PortingFlags)">
            <summary>
            True if ALL of the supplied <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/> are set, false if any aren't:
            (<see cref="P:TagTool.Commands.Porting.PortTagCommand.Flags"/> &amp; flags) == flags
            </summary>
            <param name="flags">The <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/> to check.</param>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.FlagIsSet(TagTool.Commands.Porting.PortTagCommand.PortingFlags)">
            <summary>
            True if the flag is set (this is 100% the same as <see cref="M:TagTool.Commands.Porting.PortTagCommand.FlagsAnySet(TagTool.Commands.Porting.PortTagCommand.PortingFlags)"/>,
            other than the name.
            </summary>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.FlagsAnySet(TagTool.Commands.Porting.PortTagCommand.PortingFlags)">
            <summary>
            True if ANY of the supplied <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/> are set, false if none are:
            (<see cref="P:TagTool.Commands.Porting.PortTagCommand.Flags"/> &amp; flags) != 0
            </summary>
            <param name="flags">The <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/> to check.</param>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.SetFlags(TagTool.Commands.Porting.PortTagCommand.PortingFlags)">
            <summary>
            Sets flags explicitly (<see cref="P:TagTool.Commands.Porting.PortTagCommand.Flags"/> |= <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/>).
            </summary>
            <param name="flags">The <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/> to set.</param>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.RemoveFlags(TagTool.Commands.Porting.PortTagCommand.PortingFlags)">
            <summary>
            Removes flags explicitly (<see cref="P:TagTool.Commands.Porting.PortTagCommand.Flags"/> &amp;= ~<see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/>).
            </summary>
            <param name="flags">The <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/> to remove.</param>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.ToggleFlags(TagTool.Commands.Porting.PortTagCommand.PortingFlags)">
            <summary>
            Toggles flags on or off (<see cref="P:TagTool.Commands.Porting.PortTagCommand.Flags"/> ^= <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/>).
            </summary>
            <param name="flags">The <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/> to toggle.</param>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.ParsePortingOptions(System.Collections.Generic.List{System.String})">
            <summary>
            Parses porting flag options from a <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.String"/>.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:TagTool.Commands.Porting.PortTagCommand.GetPortingFlagsDescription">
            <summary>
            Generates a <see cref="P:TagTool.Commands.Command.Description"/> based on the <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/> <see cref="T:System.Enum"/>.
            </summary>
            <returns>A <see cref="P:TagTool.Commands.Command.Description"/> based on <see cref="T:TagTool.Commands.Porting.PortTagCommand.PortingFlags"/>.</returns>
        </member>
        <member name="T:TagTool.Commands.Porting.PortTagCommand.PortingFlagDescriptionAttribute">
            <summary>
            Generic description attribute
            </summary>
        </member>
        <member name="M:TagTool.Commands.Shaders.GenerateShaderCommand.GetDependantsAsync(TagTool.Cache.GameCache,System.IO.Stream,System.String,System.Byte[])">
            <summary>
            For async recompile
            </summary>
        </member>
        <member name="M:TagTool.Commands.Shaders.GenerateShaderCommand.ReserializeDependantsAsync(TagTool.Cache.GameCache,System.IO.Stream,TagTool.Tags.Definitions.RenderMethodTemplate,System.Collections.Generic.List{TagTool.Commands.Shaders.GenerateShaderCommand.SDependentRenderMethodData})">
            <summary>
            For async recompile
            </summary>
        </member>
        <member name="M:TagTool.Commands.Shaders.GenerateShaderCommand.GenerateRenderMethodTemplateAsync(TagTool.Cache.GameCache,TagTool.Commands.Shaders.GenerateShaderCommand.STemplateRecompileInfo,TagTool.Tags.Definitions.RenderMethodDefinition,TagTool.Tags.Definitions.GlobalVertexShader,TagTool.Tags.Definitions.GlobalPixelShader)">
            <summary>
            For async recompile.
            
            Usage:
                -> Collect all dependants for all targetted templates
                -> Perform recompile on all templates and store results (this is the critical part that utilizes as much cpu as possible)
                -> Serialization
                -> Apply fixups for dependants
            </summary>
        </member>
        <member name="T:TagTool.Commands.Tags.TagDependencyCommand">
            <summary>
            Command for managing tag dependencies.
            </summary>
        </member>
        <member name="T:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField">
            <summary>
            Stores data for a field in an assembly plugin and contains various functions to convert fields from BlamCore tag definitions.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.type">
            <summary>
            The field type.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.attributes">
            <summary>
            The field attributes. Eg, color format, string length.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.children">
            <summary>
            The field children. Eg enum options, reflexive contents.
            </summary>
        </member>
        <member name="P:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.Size">
            <summary>
            Returns the size of the field in bytes.
            </summary>
        </member>
        <member name="P:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.Name">
            <summary>
            Returns the field's name attribute.
            </summary>
        </member>
        <member name="T:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.AssemblyPluginFieldTypes">
            <summary>
            Field types recognized in Assembly.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.assemblyPluginTypeEquivalent">
            <summary>
            Contains AssemblyPluginType values for equevelant structure types available in BlamCore.
            Some assembly types are more complicated, such as bitfields which are enums with flags attribute or reflexives.
            </summary>
        </member>
        <member name="F:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.assemblyPluginFieldTypeSizes">
            <summary>
            Sizes of types recognized in assembly. Some types don't have simple sizes, like strings which use their length attribute instead.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.#ctor(TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.AssemblyPluginFieldTypes,System.String)">
            <summary>
            Creates an AssemblyPluginField of the given type, with the given name.
            </summary>
            <param name="type">The type of plugin field.</param>
            <param name="name">The name attrubute of the field.</param>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.#ctor(TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.AssemblyPluginFieldTypes,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates an AssemblyPluginField of the given type, with the given name, and adds the given attributes.
            </summary>
            <param name="type">The type of plugin field.</param>
            <param name="name">The name attrubute of the field.</param>
            <param name="attributes">Plugin field attributes such as string length or color format to add to the field.</param>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.#ctor(TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.AssemblyPluginFieldTypes,System.String,System.Int32@)">
            <summary>
            Creates an AssemblyPluginField of the given type, with the given name, and adds the offset attribute.
            The size of the field is added to the offset, so that the converter can move to the next field offset.
            </summary>
            <param name="type">The type of plugin field.</param>
            <param name="name">The name attrubute of the field.</param>
            <param name="offset">The offset of the field. The size of the field is added, moving on to the next field.</param>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.#ctor(TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.AssemblyPluginFieldTypes,System.String,System.Int32@,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates an AssemblyPluginField of the given type, with the given name, adds the offset attribute and the other attributes provided.
            The size of the field is added to the offset, so that the converter can move to the next field offset.
            </summary>
            <param name="type">The type of plugin field.</param>
            <param name="name">The name attrubute of the field.</param>
            <param name="offset">The offset of the field. The size of the field is added, moving on to the next field.</param>
            <param name="attributes">Plugin field attributes such as string length or color format to add to the field.</param>
        </member>
        <member name="T:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes">
            <summary>
            Common field types which can be converted to assembly plugin fields.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.RealMatrix4x3(System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a RealMatrix4x4
            </summary>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent RealMatrix4x3.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.Rectangle2d(System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a Rectangle2d
            </summary>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent Rectangle2d, top left bottom right.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.Bounds(TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.AssemblyPluginFieldTypes,System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent Bounds.
            </summary>
            <param name="type">The boundry value type.</param>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent Bounds, min and max.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.RealBoundingBox(System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a RealBoundingBox
            </summary>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent RealBoundingBox, bounds x y z.</returns>
            <seealso cref="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.Bounds(TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.AssemblyPluginFieldTypes,System.String,System.Int32@)"/>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.Point2(System.String[],System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a Vector2.
            </summary>
            <param name="format">The names of the two fields. Eg x and y, i and j.</param>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent Vector2, two floats.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.Vector2(System.String[],System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a Vector2.
            </summary>
            <param name="format">The names of the two fields. Eg x and y, i and j.</param>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent Vector2, two floats.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.Angle2(System.String[],System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a Vector2.
            </summary>
            <param name="format">The names of the two fields. Eg x and y, i and j.</param>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent Vector2, two floats.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.Vector3(System.String[],System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a Vector3.
            </summary>
            <param name="format">The names of the three fields. Eg x, y and z, i j and k.</param>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent Vector3, three floats.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.Angle3(System.String[],System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a Vector3.
            </summary>
            <param name="format">The names of the three fields. Eg x, y and z, i j and k.</param>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent Vector3, three floats.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.RealPlane3d(System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a RealPlane3d.
            </summary>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent RealPlane3d, I J K and Distance floats.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.RealQuaternion(System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a Quaternion.
            </summary>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent Quaternion, four floats, I J K and W.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.RgbaColor(System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a RgbaColor.
            </summary>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent RgbaColor, an rgb format color24 and a uint representing Alpha.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.ArgbColor(System.String,System.Int32@)">
            <summary>
            Returns the assembly plugin fields that represent a Argb Color.
            </summary>
            <param name="fieldName">The name of the field in BlamCore.</param>
            <param name="offset">The tag field offset.</param>
            <returns>A list of AssemblyPluginFields that represent RgbaColor, an uint representing alpha and a rgb format color24</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.ReferencedStructure(System.Type,TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform,System.String,System.Int32@)">
            <summary>
            Returns a list of assembly plugin fields representing fields in the given type.
            </summary>
            <param name="type">The structure to return fields for.</param>
            <param name="cacheVersion">The cache version to return fields for.</param>
            <param name="cachePlatform"></param>
            <param name="fieldName">The name of the structure reference. If no name can be given provide null rather than an empty string.</param>
            <param name="offset">The offset of the reference if applicable, or 0.</param>
            <returns>A list of AssemblyPluginFields</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.CommonFieldTypes.Enum(System.Type,TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.AssemblyPluginFieldTypes,System.String,System.Int32@)">
            <summary>
            Returns a plugin field representing an enum type.
            </summary>
            <param name="enumType">The type of enum to return as an assembly field.</param>
            <param name="pluginType">The assembly enum type.</param>
            <param name="fieldName">The name of the field.</param>
            <param name="offset">The tag field offset.</param>
            <returns>An assembly plugin field with children detailing the enum values.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.GetAssemblyPluginFields(System.Type,TagTool.Tags.TagFieldAttribute,System.Int32@,TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform,System.String)">
            <summary>
            Returns a list of assemblt plugin fields representing the BlamCore tag definition field type provided.
            </summary>
            <param name="fieldType">The type of field to convert to assembly fields.</param>
            <param name="tagFieldAttribute">The tag field attribute attached to the field, or null.</param>
            <param name="offset">The offset of the tag field.</param>
            <param name="cacheVersion">The cache version to return fields for.</param>
            <param name="cachePlatform"></param>
            <param name="fieldName">The name of the field in the BlamCore tag definition.</param>
            <returns>A list of AssemblyPluginFields representing the given field type.</returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.GetAssemblyPluginFieldType(System.Type)">
            <summary>
            Returns the assembly field type equivalent of a given type, or undefined if there isn't one.
            If the BlamCore field converts to multiple assembly fields this will return undefined.
            If the type cannot be resolved this will return undefined.
            </summary>
            <param name="fieldType">The field type in BlamCore.</param>
            <returns>The field type in Assembly.</returns>
        </member>
        <member name="F:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.indent">
            <summary>
            Indent of the fields. This grows as the ToString method recurses through children.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.ToString">
            <summary>
            Converts the assembly plugin field to an XML Node suitable for a plugin.
            </summary>
            <returns><![CDATA[Returns the XML node of the field in the format <type name="{name}" offset="{offset}" {attributes}>{children}</type>]]></returns>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.ToSpaced(System.String)">
            <summary>
            Adds spaces to a camel case string.
            </summary>
            <param name="string">The string to space.</param>
            <returns>Returns the string with spaces.</returns>
            <remarks>
            This method should really be moved. I wasn't sure where to put it. 
            It could use some tweaking to support symbols and acronyms too. 
            See CHGD for an example of the problem. -A
            </remarks>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.ConvertTagStructure(System.Type,TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform,System.Collections.Generic.List{TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField}@,System.Int32@)">
            <summary>
            Converts a structure into assembly plugin fields.
            </summary>
            <param name="structureType">The structure type to find fields from.</param>
            <param name="cacheVersion">The cache version to return fields for.</param>
            <param name="platform"></param>
            <param name="pluginFields">The output fields.</param>
            <param name="size">The size of the structure.</param>
        </member>
        <member name="F:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.DeclaredOnlyLookup">
            <summary>
            BindingFlags to return only fields that aren't inherited. 
            </summary>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField.ConvertTagStructure(System.Type,TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform,System.Collections.Generic.List{TagTool.Commands.Files.GenerateAssemblyPluginsCommand.AssemblyPluginField}@,System.Int32@,System.Int32@)">
            <summary>
            Converts a structure into assembly plugin fields.
            </summary>
            <param name="structureType">The structure type to find fields from.</param>
            <param name="cacheVersion">The cache version to return fields for.</param>
            <param name="cachePlatform"></param>
            <param name="pluginFields">The output fields.</param>
            <param name="size">The size of the structure.</param>
            <param name="offset">The offset of the structure within the tag. Useful for structure references within structures.</param>
        </member>
        <member name="F:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.assemblyCacheVersions">
            <summary>
            A list of assembly plugin game names for cache versions in BlamCore.
            If it's not here, it's not supported.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.ConvertTagDefinition(TagTool.Common.Tag,System.Type,TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform)">
            <summary>
            Converts a tag definition to an assembly plugin.
            </summary>
            <remarks>
            The plugin is saved at <![CDATA[Plugins\{gameName}\{tagGroup}.xml]]>
            </remarks>
            <param name="tagGroup">The tag group, this is how assembly plugin files are named.</param>
            <param name="tagType">The type of tag to convert.</param>
            <param name="cacheVersion">The game to convert tag fields for.</param>
            <param name="cachePlatform"></param>
        </member>
        <member name="M:TagTool.Commands.Files.GenerateAssemblyPluginsCommand.ConvertTagDefinition(TagTool.Common.Tag,System.Type,TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform,System.String)">
            <summary>
            Converts a tag definition to an assembly plugin.
            </summary>
            <remarks>
            The plugin is saved at <![CDATA[{pluginsDirectory}\{gameName}\{tagGroup}.xml]]>
            </remarks>
            <param name="tagGroup">The tag group, this is how assembly plugin files are named.</param>
            <param name="tagType">The type of tag to convert.</param>
            <param name="cacheVersion">The game to convert tag fields for.</param>
            <param name="cachePlatform"></param>
            <param name="pluginsDirectory">The path to save the plugin files to.</param>
        </member>
        <member name="M:TagTool.Commands.Common.TagToolChoicePrompt.Single.#ctor(System.Collections.Generic.List{System.String},System.String,System.Int32)">
            <summary>
            Prompts user to pick from list of up to 36 choices
            </summary>
            <param name="choiceList">String List/Array of choices</param>
            <param name="spaceKeyOption">e.g. "Select all" or "More options"</param>
            <param name="indent">The amount of spaces to indent output text by</param>
            <returns>Prompt method returns index of chosen item or -1 for Enter Key option</returns>
        </member>
        <member name="M:TagTool.Commands.Common.TagToolChoicePrompt.Single.#ctor(System.String[],System.String,System.Int32)">
            <summary>
            Prompts user to pick from list of up to 36 choices
            </summary>
            <param name="choiceList">String List/Array of choices</param>
            <param name="spaceKeyOption">e.g. "Select all" or "More options"</param>
            <param name="indent">The amount of spaces to indent output text by</param>
            <returns>Prompt method returns index of chosen item or -1 for Enter Key option</returns>
        </member>
        <member name="M:TagTool.Commands.Common.TagToolChoicePrompt.Single.Prompt">
            <summary>
            Prompts user for selection.
            </summary>
            <returns>Index of chosen item or -1 for Enter Key option</returns>
        </member>
        <member name="M:TagTool.Commands.Common.TagToolChoicePrompt.Multiple.#ctor(System.Collections.Generic.Dictionary{System.String,System.Boolean},System.String,System.Int32)">
            <summary>
            Prompts user to pick from list of up to 36 choices
            </summary>
            <param name="choiceList">String List/Array/Dictionary/Enum of choices</param>
            <param name="spaceKeyOption">e.g. "Select all" or "More options"</param>
            <param name="indent">The amount of spaces to indent output text by</param>
            <returns>Prompt method returns dictionary of items and their selected staus (true/false) or null for space key option</returns>
        </member>
        <member name="M:TagTool.Commands.Common.TagToolChoicePrompt.Multiple.#ctor(System.String[],System.String,System.Int32)">
            <summary>
            Prompts user to pick from list of up to 36 choices
            </summary>
            <param name="choiceList">String List/Array/Dictionary/Enum of choices</param>
            <param name="spaceKeyOption">e.g. "Select all" or "More options"</param>
            <param name="indent">The amount of spaces to indent output text by</param>
            <returns>Prompt method returns either a dictionary of items and their selected staus (true/false) or null for space key option or fills an enum</returns>
        </member>
        <member name="M:TagTool.Commands.Common.TagToolChoicePrompt.Multiple.#ctor(System.Collections.Generic.List{System.String},System.String,System.Int32)">
            <summary>
            Prompts user to pick from list of up to 36 choices
            </summary>
            <param name="choiceList">String List/Array/Dictionary/Enum of choices</param>
            <param name="spaceKeyOption">e.g. "Select all" or "More options"</param>
            <param name="indent">The amount of spaces to indent output text by</param>
            <returns>Prompt method returns either a dictionary of items and their selected staus (true/false) or null for space key option or fills an enum</returns>
        </member>
        <member name="M:TagTool.Commands.Common.TagToolChoicePrompt.Multiple.#ctor(System.Enum,System.String,System.Int32)">
            <summary>
            Prompts user to pick from list of up to 36 choices
            </summary>
            <param name="choiceList">String List/Array/Dictionary/Enum of choices</param>
            <param name="spaceKeyOption">e.g. "Select all" or "More options"</param>
            <param name="indent">The amount of spaces to indent output text by</param>
            <returns>Prompt method returns either a dictionary of items and their selected staus (true/false) or null for space key option or fills an enum</returns>
        </member>
        <member name="M:TagTool.Commands.Common.TagToolChoicePrompt.Multiple.Prompt">
            <summary>
            Prompts user for selection
            </summary>
            <returns>Dictionary&lt;string, bool&gt; representing the selection of the user</returns>
        </member>
        <member name="M:TagTool.Commands.Common.TagToolChoicePrompt.Multiple.Prompt(System.Enum@)">
            <summary>
            Prompts user for selection
            </summary>
            <returns>Returns a flag enum set as the user selected</returns>
        </member>
        <member name="M:TagTool.Commands.Common.TagToolChoicePrompt.YN.#ctor(System.String,System.Int32)">
            <summary>
            Prompts user for yes or no response
            </summary>
            <param name="question">Question to ask</param>
            <param name="indent">The amount of spaces to indent output text by</param>
        </member>
        <member name="M:TagTool.Commands.Common.LocalizedStringPrinter.PrepareForDisplay(TagTool.Tags.Definitions.MultilingualUnicodeStringList,TagTool.Cache.StringTable,System.Collections.Generic.IEnumerable{TagTool.Tags.Definitions.LocalizedString},TagTool.Common.GameLanguage,System.String)">
            <summary>
            Filters a set of localized strings and prepares them for display.
            </summary>
            <param name="unic">The string list.</param>
            <param name="stringTable">The string ID cache to use.</param>
            <param name="strings">The strings to display.</param>
            <param name="language">The language to display strings from.</param>
            <param name="filter">The filter to match strings and stringIDs against. Can be <c>null</c> to display everything.</param>
            <returns>The strings to print.</returns>
        </member>
        <member name="T:TagTool.Commands.Command">
            <summary>
            Base class for a tag manipulation command.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Command.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TagTool.Commands.Command"/> class.
            </summary>
            <param name="inherit">Command flags.</param>
            <param name="name">The command's name.</param>
            <param name="description">The command's description.</param>
            <param name="usage">The command's usage string.</param>
            <param name="helpMessage">The command's help message.</param>
            <param name="ignoreVars">The command's argument variable policy.</param>
            <param name="examples">Examples of the command's usage.</param>
        </member>
        <member name="P:TagTool.Commands.Command.Name">
            <summary>
            Gets the command's name.
            </summary>
        </member>
        <member name="P:TagTool.Commands.Command.Description">
            <summary>
            Gets the command's description.
            </summary>
        </member>
        <member name="P:TagTool.Commands.Command.Usage">
            <summary>
            Gets the command's usage string.
            </summary>
        </member>
        <member name="P:TagTool.Commands.Command.HelpMessage">
            <summary>
            Gets the command's help message.
            </summary>
        </member>
        <member name="P:TagTool.Commands.Command.Examples">
            <summary>
            Gets the command's examples.
            </summary>
        </member>
        <member name="P:TagTool.Commands.Command.Inherit">
            <summary>
            Gets the command's flags.
            </summary>
        </member>
        <member name="P:TagTool.Commands.Command.IgnoreArgumentVariables">
            <summary>
            Gets the command's argument variable policy.
            </summary>
        </member>
        <member name="M:TagTool.Commands.Command.Execute(System.Collections.Generic.List{System.String})">
            <summary>
            Executes the command.
            </summary>
            <param name="args">The command arguments.</param>
            <returns><c>true</c> if the command's arguments were valid.</returns>
        </member>
        <member name="T:TagTool.Commands.CommandContext">
            <summary>
            A context which contains commands that can be executed on an object.
            </summary>
        </member>
        <member name="P:TagTool.Commands.CommandContext.Parent">
            <summary>
            Gets the parent context. Can be <c>null</c> if this is the initial context.
            </summary>
        </member>
        <member name="P:TagTool.Commands.CommandContext.Name">
            <summary>
            Gets the name of the context.
            </summary>
        </member>
        <member name="P:TagTool.Commands.CommandContext.CommandsByName">
            <summary>
            Gets the context's command dictionary.
            </summary>
        </member>
        <member name="P:TagTool.Commands.CommandContext.Commands">
            <summary>
            Gets the context's available commands.
            </summary>
        </member>
        <member name="P:TagTool.Commands.CommandContext.ScriptGlobals">
            <summary>
            Gets or sets the context's global variables for scripting
            </summary>
        </member>
        <member name="M:TagTool.Commands.CommandContext.#ctor(TagTool.Commands.CommandContext,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TagTool.Commands.CommandContext"/> class.
            </summary>
            <param name="parent">The parent context. Can be <c>null</c> if none.</param>
            <param name="name">The context's name.</param>
        </member>
        <member name="M:TagTool.Commands.CommandContext.AddCommand(TagTool.Commands.Command)">
            <summary>
            Adds a command to the context.
            </summary>
            <param name="command">The command to add.</param>
        </member>
        <member name="M:TagTool.Commands.CommandContext.GetCommand(System.String)">
            <summary>
            Looks up a command in the context by name.
            Commands inherited from parent contexts will be included.
            </summary>
            <param name="name">The name of the command to retrieve.</param>
            <returns>The command with the given name if found, or <c>null</c> otherwise.</returns>
        </member>
        <member name="T:TagTool.Commands.CommandContextStack">
            <summary>
            A stack of command contexts.
            </summary>
        </member>
        <member name="F:TagTool.Commands.CommandContextStack.ArgumentVariables">
            <summary>
            Stores argument variables and their values that are used when running commands.
            </summary>
        </member>
        <member name="E:TagTool.Commands.CommandContextStack.ContextPopped">
            <summary>
            An event that is fired when a context is popped from the stack
            </summary>
        </member>
        <member name="P:TagTool.Commands.CommandContextStack.Context">
            <summary>
            Gets the currently-active context, or <c>null</c> if there is none.
            </summary>
        </member>
        <member name="M:TagTool.Commands.CommandContextStack.GetPath">
            <summary>
            Gets the current path.
            </summary>
            <returns>The current path.</returns>
        </member>
        <member name="M:TagTool.Commands.CommandContextStack.Push(TagTool.Commands.CommandContext)">
            <summary>
            Pushes a context onto the stack, making it active.
            </summary>
            <param name="context">The context to push.</param>
        </member>
        <member name="M:TagTool.Commands.CommandContextStack.Pop">
            <summary>
            Pops the current context off the stack, making the previous one active.
            </summary>
        </member>
        <member name="T:TagTool.Common.SphericalHarmonics">
            <summary>
            SH coefficients are defined using float arrays. The length depends on the order
            </summary>
        </member>
        <member name="T:TagTool.Common.PrtSHType">
            <summary>
            Precomputed radiance transfer (PRT) types using spherical harmonics as basis function.
            </summary>
        </member>
        <member name="F:TagTool.Common.PrtSHType.Ambient">
            <summary>
            SH order 0, 1 coefficent per vertex
            </summary>
        </member>
        <member name="F:TagTool.Common.PrtSHType.Linear">
            <summary>
            SH order 1, 4 coefficients per vertex
            </summary>
        </member>
        <member name="F:TagTool.Common.PrtSHType.Quadratic">
            <summary>
            SH order 2, 9 coefficients per vertex
            </summary>
        </member>
        <member name="M:TagTool.Common.RSAUtil.DecodeRSAPrivateKey(System.Byte[])">
            <summary>
            Decodes an RSA private key from ASN.1/DER format
            </summary>
            <param name="privateKey">The private key</param>
            <returns>An <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider"/> initialized with the given <paramref name="privateKey"/></returns>
        </member>
        <member name="T:TagTool.Common.Crc32">
            <summary>
            Implements a 32-bit CRC hash algorithm compatible with Zip etc.
            </summary>
            <remarks>
            Crc32 should only be used for backward compatibility with older file formats
            and algorithms. It is not secure enough for new applications.
            If you need to call multiple times for the same data either use the HashAlgorithm
            interface or remember that the result of one Compute call needs to be ~ (XOR) before
            being passed in as the seed for the next Compute call.
            </remarks>
        </member>
        <member name="T:TagTool.Common.Angle">
            <summary>
            An angle value.
            </summary>
        </member>
        <member name="F:TagTool.Common.Angle.UnitConversion">
            <summary>
            The value used to convert between degrees and radians.
            </summary>
        </member>
        <member name="P:TagTool.Common.Angle.Radians">
            <summary>
            Gets the angle's value in radians.
            THERE BE DRAGONS HERE: Do not set this manually outside of serialization.
            </summary>
        </member>
        <member name="P:TagTool.Common.Angle.Degrees">
            <summary>
            Gets the angle's value in degrees.
            </summary>
        </member>
        <member name="M:TagTool.Common.Angle.FromRadians(System.Single)">
            <summary>
            Creates a new angle from radians.
            </summary>
            <param name="radians">The radians of the angle.</param>
            <returns>The angle that was created.</returns>
        </member>
        <member name="M:TagTool.Common.Angle.FromDegrees(System.Single)">
            <summary>
            Creates a new angle from degrees.
            </summary>
            <param name="degrees">The degrees of the angle.</param>
            <returns>The angle that was created.</returns>
        </member>
        <member name="M:TagTool.Common.ArrayUtil.Replace(System.Byte[],System.Int32,System.Int32,System.Byte[])">
            <summary>
            Reallocates an array, replacing a block of data in it.
            </summary>
            <param name="oldData">The array of data to replace a block in.</param>
            <param name="index">The starting index of the block to replace.</param>
            <param name="length">The length of the block to replace.</param>
            <param name="newData">The data to replace the block with.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Common.ArrayUtil.CopyTo``1(System.Span{``0},System.Int32,``0[],System.Int32,System.Int32)">
            <summary>
            Copy <paramref name="length"/> elements from <paramref name="sourceSpan"/> beginning at <paramref name="sourceIndex"/> 
            into <paramref name="destinationArray"/> beginning at <paramref name="destinationIndex"/>
            </summary>
            <param name="sourceSpan">The source span to copy from</param>
            <param name="sourceIndex">The offset in the source span to begin copying from</param>
            <param name="destinationArray">The destination array</param>
            <param name="destinationIndex">The offset in the destination array</param>
            <param name="length">The number of elements to copy</param>
        </member>
        <member name="M:TagTool.Common.ArrayUtil.CopyTo``1(System.Memory{``0},System.Int32,``0[],System.Int32,System.Int32)">
            <summary>
            Copy <paramref name="length"/> elements from <paramref name="sourceMemory"/> beginning at <paramref name="sourceIndex"/> 
            into <paramref name="destinationArray"/> beginning at <paramref name="destinationIndex"/>
            </summary>
            <param name="sourceMemory">The source memory to copy from</param>
            <param name="sourceIndex">The index in the source memory to begin copying from</param>
            <param name="destinationArray">The destination array</param>
            <param name="destinationIndex">The offset in the destination array</param>
            <param name="length">The number of elements to copy</param>
        </member>
        <member name="P:TagTool.Common.Bounds`1.Lower">
            <summary>
            Gets the lowerimum value within the range.
            </summary>
        </member>
        <member name="P:TagTool.Common.Bounds`1.Upper">
            <summary>
            Gets the upperimum value within the range.
            </summary>
        </member>
        <member name="P:TagTool.Common.Bounds`1.Length">
            <summary>
            Gets the length of the bounds.
            </summary>
        </member>
        <member name="M:TagTool.Common.Bounds`1.#ctor(`0,`0)">
            <summary>
            Creates a new range from a lowerimum and a upperimum value.
            </summary>
            <param name="lower">The lowerimum value of the range.</param>
            <param name="upper">The upperimum value of the range.</param>
        </member>
        <member name="M:TagTool.Common.Bounds`1.Contains(`0)">
            <summary>
            Deterloweres whether the range contains a value.
            </summary>
            <param name="value">The value to check.</param>
            <returns><c>true</c> if the value is inside the range.</returns>
        </member>
        <member name="T:TagTool.Common.GameLanguage">
            <summary>
            Game language indices.
            </summary>
        </member>
        <member name="T:TagTool.Common.PageableResource">
            <summary>
            A reference to a resource used by a tag.
            This is treated by the serialization system as a special type of tag element.
            </summary>
        </member>
        <member name="F:TagTool.Common.PageableResource.Page">
            <summary>
            The <see cref="T:TagTool.Cache.Resources.ResourcePage"/> of the <see cref="T:TagTool.Common.PageableResource"/>.
            </summary>
        </member>
        <member name="F:TagTool.Common.PageableResource.Resource">
            <summary>
            The <see cref="T:TagTool.Cache.Resources.ResourceData"/> of the <see cref="T:TagTool.Common.PageableResource"/>.
            </summary>
        </member>
        <member name="M:TagTool.Common.PageableResource.GetDefinitionType">
            <summary>
            Gets the definition type of the pageable_resource.
            </summary>
            <returns>The definition type of the pageable_resource, if it is of a valid type.</returns>
        </member>
        <member name="M:TagTool.Common.PageableResource.GetLocation(TagTool.Common.ResourceLocation@)">
            <summary>
            Gets the location of the resource by checking its location flags.
            </summary>
            <returns>The resource's location.</returns>
            <exception cref="T:System.InvalidOperationException">The resource does not have a location flag set</exception>
        </member>
        <member name="M:TagTool.Common.PageableResource.ChangeLocation(TagTool.Common.ResourceLocation)">
            <summary>
            Changes the location of the resource by changing its location flags.
            </summary>
            <param name="newLocation">The new location.</param>
            <exception cref="T:System.ArgumentException">Unsupported resource location</exception>
        </member>
        <member name="M:TagTool.Common.PageableResource.DisableChecksum">
            <summary>
            Disables the resource's checksum by changing its location flags.
            </summary>
        </member>
        <member name="T:TagTool.Common.ResourceLocation">
            <summary>
            Resource location constants used by <see cref="M:TagTool.Common.PageableResource.GetLocation"/>.
            </summary>
        </member>
        <member name="F:TagTool.Common.ResourceLocation.None">
            <summary>
            The resource is not cached.
            </summary>
        </member>
        <member name="F:TagTool.Common.ResourceLocation.Resources">
            <summary>
            The resource is in resources.dat.
            </summary>
        </member>
        <member name="F:TagTool.Common.ResourceLocation.Textures">
            <summary>
            The resource is in textures.dat.
            </summary>
        </member>
        <member name="F:TagTool.Common.ResourceLocation.TexturesB">
            <summary>
            The resource is in textures_b.dat.
            </summary>
        </member>
        <member name="F:TagTool.Common.ResourceLocation.Audio">
            <summary>
            The resource is in audio.dat.
            </summary>
        </member>
        <member name="F:TagTool.Common.ResourceLocation.ResourcesB">
            <summary>
            The resource is in resources_b.dat.
            </summary>
        </member>
        <member name="F:TagTool.Common.ResourceLocation.RenderModels">
            <summary>
            The resource is in render_models.dat.
            </summary>
        </member>
        <member name="F:TagTool.Common.ResourceLocation.Lightmaps">
            <summary>
            The resource is in lightmaps.dat.
            </summary>
        </member>
        <member name="F:TagTool.Common.ResourceLocation.Mods">
            <summary>
            The resource is in mods.dat.
            </summary>
        </member>
        <member name="T:TagTool.Common.ReadOnlySet`1">
            <summary>
            Implements a read-only wrapper for a set.
            </summary>
            <remarks>
            Starting in .NET 4.6, HashSet implements IReadOnlyCollection.
            This is a quick workaround for earlier versions of .NET.
            </remarks>
            <typeparam name="T">The type of elements in the set.</typeparam>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.#ctor(System.Collections.Generic.ISet{`0})">
            <summary>
            Constructs a read-only wrapper around a set.
            </summary>
            <param name="baseSet">The base set.</param>
        </member>
        <member name="P:TagTool.Common.ReadOnlySet`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="P:TagTool.Common.ReadOnlySet`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.Add(`0)">
            <summary>
            Adds an element to the current set and returns a value to indicate if the element was successfully added.
            </summary>
            <param name="item">The element to add to the set.</param>
            <returns>
            true if the element is added to the set; false if the element is already in the set.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes all elements in the specified collection from the current set.
            </summary>
            <param name="other">The collection of items to remove from the set.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Modifies the current set so that it contains only elements that are also in a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the current set is a proper (strict) subset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set is a proper subset of <paramref name="other" />; otherwise, false.
            </returns>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the current set is a proper (strict) superset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set is a proper superset of <paramref name="other" />; otherwise, false.
            </returns>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether a set is a subset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set is a subset of <paramref name="other" />; otherwise, false.
            </returns>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the current set is a superset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set is a superset of <paramref name="other" />; otherwise, false.
            </returns>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the current set overlaps with the specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set and <paramref name="other" /> share at least one common element; otherwise, false.
            </returns>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Determines whether the current set and the specified collection contain the same elements.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set is equal to <paramref name="other" />; otherwise, false.
            </returns>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Modifies the current set so that it contains all elements that are present in the current set, in the specified collection, or in both.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:TagTool.Common.ReadOnlySet`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:TagTool.Common.RealPlane2d">
            <summary>
            A 2-dimensional plane in real space.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane2d.Normal">
            <summary>
            The direction normal vector of the plane.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane2d.Distance">
            <summary>
            The distance along the plane's normal vector from the origin.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane2d.I">
            <summary>
            The I component of the normal vector of the plane.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane2d.J">
            <summary>
            The J component of the normal vector of the plane.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane2d.D">
            <summary>
            The distance along the plane's normal vector from the origin.
            </summary>
        </member>
        <member name="M:TagTool.Common.RealPlane2d.#ctor(TagTool.Common.RealVector2d,System.Single)">
            <summary>
            Creates a new <see cref="T:TagTool.Common.RealPlane2d"/>.
            </summary>
            <param name="normal">The normal vector of the plane.</param>
            <param name="distance">The distance of the plane.</param>
        </member>
        <member name="M:TagTool.Common.RealPlane2d.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:TagTool.Common.RealPlane2d"/>.
            </summary>
            <param name="i">The I component of the normal vector of the plane.</param>
            <param name="j">The J component of the normal vector of the plane.</param>
            <param name="d">The distance of the plane.</param>
        </member>
        <member name="M:TagTool.Common.RealPlane2d.Equals(TagTool.Common.RealPlane2d)">
            <summary>
            Determines if the current instance is equal to another <see cref="T:TagTool.Common.RealPlane2d"/>.
            </summary>
            <param name="other">The other plane.</param>
            <returns></returns>
        </member>
        <member name="T:TagTool.Common.RealPlane3d">
            <summary>
            A 2-dimensional plane in real space.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane3d.Normal">
            <summary>
            The direction normal vector of the plane.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane3d.Distance">
            <summary>
            The distance along the plane's normal vector from the origin.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane3d.I">
            <summary>
            The I component of the normal vector of the plane.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane3d.J">
            <summary>
            The J component of the normal vector of the plane.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane3d.K">
            <summary>
            The K component of the normal vector of the plane.
            </summary>
        </member>
        <member name="P:TagTool.Common.RealPlane3d.D">
            <summary>
            The distance along the plane's normal vector from the origin.
            </summary>
        </member>
        <member name="M:TagTool.Common.RealPlane3d.#ctor(TagTool.Common.RealVector3d,System.Single)">
            <summary>
            Creates a new <see cref="T:TagTool.Common.RealPlane3d"/>.
            </summary>
            <param name="normal">The normal vector of the plane.</param>
            <param name="distance">The distance of the plane.</param>
        </member>
        <member name="M:TagTool.Common.RealPlane3d.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:TagTool.Common.RealPlane3d"/>.
            </summary>
            <param name="i">The I component of the normal vector of the plane.</param>
            <param name="j">The J component of the normal vector of the plane.</param>
            <param name="k">The K component of the normal vector of the plane.</param>
            <param name="d">The distance of the plane.</param>
        </member>
        <member name="M:TagTool.Common.RealPlane3d.Equals(TagTool.Common.RealPlane3d)">
            <summary>
            Determines if the current instance is equal to another <see cref="T:TagTool.Common.RealPlane3d"/>.
            </summary>
            <param name="other">The other plane.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Common.RealRgbColor.GetLuminance(TagTool.Common.RealRgbColor)">
            <summary>
            Returns the luminance of the color
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Common.RealRgbColor.GetBrightness(TagTool.Common.RealRgbColor)">
            <summary>
            Returns the perceived brightness of the color
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:TagTool.Common.StringId">
            <summary>
            A constant ID representing a debug string.
            </summary>
        </member>
        <member name="F:TagTool.Common.StringId.Invalid">
            <summary>
            A null stringID.
            </summary>
        </member>
        <member name="P:TagTool.Common.StringId.Value">
            <summary>
            Gets the value of the stringID as a 32-bit integer.
            </summary>
        </member>
        <member name="M:TagTool.Common.StringId.#ctor(System.UInt32)">
            <summary>
            Constructs a new StringID from a 32-bit value.
            </summary>
            <param name="value">The 32-bit value of the stringID.</param>
        </member>
        <member name="T:TagTool.Common.Tag">
            <summary>
            Represents a magic number which looks like a string.
            </summary>
        </member>
        <member name="P:TagTool.Common.Tag.Null">
            <summary>
            The null tag representation.
            </summary>
        </member>
        <member name="M:TagTool.Common.Tag.#ctor(System.Int32)">
            <summary>
            Constructs a magic number from an integer.
            </summary>
            <param name="val">The integer.</param>
        </member>
        <member name="M:TagTool.Common.Tag.#ctor(System.String)">
            <summary>
            Constructs a magic number from a string.
            </summary>
            <param name="str">The string.</param>
        </member>
        <member name="M:TagTool.Common.Tag.#ctor(System.Char[])">
            <summary>
            Constructs a magic number from a character array.
            </summary>
            <param name="input">The character array.</param>
        </member>
        <member name="P:TagTool.Common.Tag.Value">
            <summary>
            Gets the value of the magic number as an integer. 
            THERE BE DRAGONS HERE: Do not set this manually outside of serialization.
            </summary>
        </member>
        <member name="M:TagTool.Common.Tag.ToString">
            <summary>
            Converts the magic number into its string representation.
            </summary>
            <returns>The string that the magic number looks like.</returns>
        </member>
        <member name="T:TagTool.Common.TagCacheMap">
            <summary>
            A lookup table which can be used to find a tag's equivalents in different game versions.
            </summary>
        </member>
        <member name="M:TagTool.Common.TagCacheMap.Add(System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Connects a tag index to a tag in another version.
            </summary>
            <param name="version1">The first version.</param>
            <param name="index1">The tag index in the first version.</param>
            <param name="version2">The second version.</param>
            <param name="index2">The tag index in the second version.</param>
        </member>
        <member name="M:TagTool.Common.TagCacheMap.Translate(System.String,System.Int32,System.String)">
            <summary>
            Translates a tag index between two versions.
            </summary>
            <param name="version1">The version of the index to translate.</param>
            <param name="index1">The tag index.</param>
            <param name="version2">The version to get the equivalent tag index in.</param>
            <returns>The equivalent tag index if found, or -1 otherwise.</returns>
        </member>
        <member name="M:TagTool.Common.TagCacheMap.WriteCsv(System.IO.TextWriter)">
            <summary>
            Writes the map out to a CSV.
            </summary>
            <param name="writer">The writer to write to.</param>
        </member>
        <member name="M:TagTool.Common.TagCacheMap.ParseCsv(System.IO.TextReader)">
            <summary>
            Parses a map from a CSV.
            </summary>
            <param name="reader">The reader to read from.</param>
            <returns>The map that was read.</returns>
        </member>
        <member name="M:TagTool.Common.TagCacheMap.VersionMap.GetGlobalTagIndex(System.Int32)">
            <summary>
            Converts a tag to a global tag index which can be used to look up the tag in another version.
            </summary>
            <param name="tag">The index of the tag for this version.</param>
            <returns>An index which can be passed to <see cref="M:TagTool.Common.TagCacheMap.VersionMap.GetVersionedTagIndex(System.Int32)"/> for any version, or -1 if the tag was not found.</returns>
        </member>
        <member name="M:TagTool.Common.TagCacheMap.VersionMap.GetVersionedTagIndex(System.Int32)">
            <summary>
            Converts a global tag index to a tag index for this version.
            </summary>
            <param name="globalIndex">The global tag index returned by <see cref="M:TagTool.Common.TagCacheMap.VersionMap.GetGlobalTagIndex(System.Int32)"/> for this version.</param>
            <returns>The tag's index in this version, or -1 if not found.</returns>
        </member>
        <member name="M:TagTool.Common.TagCacheMap.VersionMap.Add(System.Int32,System.Int32)">
            <summary>
            Adds a mapping between a global tag index and a versioned tag index.
            </summary>
            <param name="globalIndex">The global tag index.</param>
            <param name="versionedIndex">The tag's index in this version.</param>
        </member>
        <member name="T:TagTool.Common.TagVersionMap">
            <summary>
            A lookup table which can be used to find a tag's equivalents in different game versions.
            </summary>
        </member>
        <member name="M:TagTool.Common.TagVersionMap.Add(TagTool.Cache.CacheVersion,System.Int32,TagTool.Cache.CacheVersion,System.Int32)">
            <summary>
            Connects a tag index to a tag in another version.
            </summary>
            <param name="version1">The first version.</param>
            <param name="index1">The tag index in the first version.</param>
            <param name="version2">The second version.</param>
            <param name="index2">The tag index in the second version.</param>
        </member>
        <member name="M:TagTool.Common.TagVersionMap.Translate(TagTool.Cache.CacheVersion,System.Int32,TagTool.Cache.CacheVersion)">
            <summary>
            Translates a tag index between two versions.
            </summary>
            <param name="version1">The version of the index to translate.</param>
            <param name="index1">The tag index.</param>
            <param name="version2">The version to get the equivalent tag index in.</param>
            <returns>The equivalent tag index if found, or -1 otherwise.</returns>
        </member>
        <member name="M:TagTool.Common.TagVersionMap.WriteCsv(System.IO.TextWriter)">
            <summary>
            Writes the map out to a CSV.
            </summary>
            <param name="writer">The writer to write to.</param>
        </member>
        <member name="M:TagTool.Common.TagVersionMap.ParseTagVersionMap(System.IO.TextReader)">
            <summary>
            Parses a map from a CSV.
            </summary>
            <param name="reader">The reader to read from.</param>
            <returns>The map that was read.</returns>
        </member>
        <member name="M:TagTool.Common.TagVersionMap.VersionMap.GetGlobalTagIndex(System.Int32)">
            <summary>
            Converts a tag to a global tag index which can be used to look up the tag in another version.
            </summary>
            <param name="tag">The index of the tag for this version.</param>
            <returns>An index which can be passed to <see cref="M:TagTool.Common.TagVersionMap.VersionMap.GetVersionedTagIndex(System.Int32)"/> for any version, or -1 if the tag was not found.</returns>
        </member>
        <member name="M:TagTool.Common.TagVersionMap.VersionMap.GetVersionedTagIndex(System.Int32)">
            <summary>
            Converts a global tag index to a tag index for this version.
            </summary>
            <param name="globalIndex">The global tag index returned by <see cref="M:TagTool.Common.TagVersionMap.VersionMap.GetGlobalTagIndex(System.Int32)"/> for this version.</param>
            <returns>The tag's index in this version, or -1 if not found.</returns>
        </member>
        <member name="M:TagTool.Common.TagVersionMap.VersionMap.Add(System.Int32,System.Int32)">
            <summary>
            Adds a mapping between a global tag index and a versioned tag index.
            </summary>
            <param name="globalIndex">The global tag index.</param>
            <param name="versionedIndex">The tag's index in this version.</param>
        </member>
        <member name="T:TagTool.Geometry.BspCollisionGeometry.BreakableSurfaceBits">
            <summary>
            bit-vector of length 1024, convert as int/uint
            </summary>
        </member>
        <member name="T:TagTool.Geometry.MeshReader">
            <summary>
            Provides functions for reading mesh data.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.MeshReader.#ctor(TagTool.Cache.GameCache,TagTool.Geometry.Mesh)">
            <summary>
            Initializes a new instance of the <see cref="T:TagTool.Geometry.MeshReader"/> class.
            </summary>
            <param name="cache">The cache to target.</param>
            <param name="mesh">The mesh.</param>
        </member>
        <member name="P:TagTool.Geometry.MeshReader.Mesh">
            <summary>
            Gets the mesh.
            </summary>
        </member>
        <member name="P:TagTool.Geometry.MeshReader.Definition">
            <summary>
            Gets the mesh's definition data.
            </summary>
        </member>
        <member name="P:TagTool.Geometry.MeshReader.VertexStreams">
            <summary>
            Gets the vertex streams for the mesh. Note that elements can be <c>null</c>.
            </summary>
        </member>
        <member name="P:TagTool.Geometry.MeshReader.IndexBuffers">
            <summary>
            Gets the index streams for the mesh. Note that elements can be <c>null</c>.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.MeshReader.OpenVertexStream(TagTool.Geometry.VertexBufferDefinition)">
            <summary>
            Opens a vertex stream on one of the mesh's vertex buffers.
            </summary>
            <param name="definition">The vertex buffer definition.</param>
            <returns>The vertex stream if successful, or <c>null</c> otherwise.</returns>
        </member>
        <member name="M:TagTool.Geometry.MeshReader.OpenVertexStream(System.Int32)">
            <summary>
            Opens a vertex stream on one of the mesh's vertex streams.
            </summary>
            <param name="streamIndex">Index of the vertex stream to open.</param>
            <returns>The vertex stream if successful, or <c>null</c> otherwise.</returns>
        </member>
        <member name="M:TagTool.Geometry.MeshReader.OpenIndexBufferStream(TagTool.Geometry.IndexBufferDefinition)">
            <summary>
            Opens an index buffer stream on one of the mesh's index buffers.
            </summary>
            <param name="definition">The index buffer definition.</param>
            <returns>The index buffer stream if successful, or <c>null</c> otherwise.</returns>
        </member>
        <member name="M:TagTool.Geometry.MeshReader.OpenIndexBufferStream(System.Int32)">
            <summary>
            Opens an index buffer stream on one of the mesh's index buffers.
            </summary>
            <param name="bufferIndex">Index of the index buffer to open.</param>
            <returns>The index buffer stream if successful, or <c>null</c> otherwise.</returns>
        </member>
        <member name="M:TagTool.Geometry.MeshReader.BindVertexStreams">
            <summary>
            Binds each vertex buffer in the mesh to a stream.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.MeshReader.BindIndexBuffers">
            <summary>
            Binds each index buffer in the mesh.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.Export(System.String,System.String,System.String,System.String[])">
            <summary>
            Export geometry to 3D model file.
            </summary>
            <param name="exportFileFormat">AMF, DAE or OBJ</param>
            <param name="exportFilePath">File to write 3D model to.</param>
            <param name="exportBitmapsFolder">If set, used diffuse bitmaps will be exported as DDS to this folder.</param>
            <param name="filterVariant">If set, only this variant will be exported.</param>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.PopulateAssimpScene(System.String[])">
            <summary>
            Build a node structure and mesh from the render model.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.ExtractMeshPart(System.Int32,System.Int32)">
            <summary>
            Create a mesh and return index in scene mesh list
            </summary>
            <param name="meshIndex"></param>
            <param name="subMeshIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.GetAbsoluteIndexSubMesh(System.Int32)">
            <summary>
            Get the absolute sub_mesh index from the flattened part list list.
            </summary>
            <param name="meshIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.ReadRigidVertices(TagTool.Geometry.IVertexStream,System.Int32)">
            <summary>
            Reads rigid vertices.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.ReadRigidCompressedVertices(TagTool.Geometry.VertexStreamReach,System.Int32)">
            <summary>
            Reads rigid compressed vertices.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.ReadRigidBonedVertices(TagTool.Geometry.VertexStreamReach,System.Int32)">
            <summary>
            Reads rigid boned vertices.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.ReadSkinnedVertices(TagTool.Geometry.IVertexStream,System.Int32)">
            <summary>
            Reads skinned vertices.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.ReadSkinnedCompressedVertices(TagTool.Geometry.VertexStreamReach,System.Int32)">
            <summary>
            Reads skinned compressed vertices.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.ReadDualQuatVertices(TagTool.Geometry.IVertexStream,System.Int32)">
            <summary>
            Reads dualquat vertices.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.ReadWorldVertices(TagTool.Geometry.IVertexStream,System.Int32)">
            <summary>
            Reads world vertices.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.ReadDecoratorVertices(TagTool.Geometry.IVertexStream,System.Int32)">
            <summary>
            Reads Decorator vertices.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.DecompressVertices(System.Collections.Generic.IEnumerable{TagTool.Geometry.ModelExtractor.GenericVertex},TagTool.Geometry.VertexCompressor)">
            <summary>
            Decompresses vertex data in-place.
            </summary>
            <param name="vertices">The vertices to decompress in-place.</param>
            <param name="compressor">The compressor to use.</param>
        </member>
        <member name="M:TagTool.Geometry.ModelExtractor.ReadIndices(TagTool.Geometry.MeshReader,TagTool.Geometry.Part)">
            <summary>
            Reads the index buffer data and converts it into a triangle list if necessary.
            </summary>
            <param name="reader">The mesh reader to use.</param>
            <param name="part">The mesh part to read.</param>
            <returns>The index buffer converted into a triangle list.</returns>
        </member>
        <member name="T:TagTool.Geometry.ModelExtractor.GenericVertex">
            <summary>
            Generic vertex class that contains all the possible information to generate meshes
            </summary>
        </member>
        <member name="T:TagTool.Geometry.ObjExtractor">
            <summary>
            Extracts render model data to Wavefront .obj files.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.#ctor(TagTool.Cache.GameCache,System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:TagTool.Geometry.ObjExtractor"/> class.
            </summary>
            <param name="cache">The cache to target</param>
            <param name="writer">The stream to write the output file to.</param>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.ExtractMesh(TagTool.Geometry.MeshReader,TagTool.Geometry.VertexCompressor,System.Collections.Generic.List{TagTool.Geometry.RenderMaterial},System.String,System.Nullable{System.Numerics.Matrix4x4})">
            <summary>
            Writes mesh data to the .obj.
            </summary>
            <param name="reader">The mesh reader to use.</param>
            <param name="compressor">The vertex compressor to use.</param>
            <param name="name">The name of the mesh.</param>
            <param name="transform">An optional transform to apply to the vertices</param>
            <param name="materials">An optional list of materials for naming materials properly</param>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.Finish">
            <summary>
            Finishes writing meshes out to the file.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.ReadVertices(TagTool.Geometry.MeshReader)">
            <summary>
            Reads the vertex data for a mesh into a format-independent list.
            </summary>
            <param name="reader">The mesh reader to use.</param>
            <returns>The list of vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.ReadRigidVertices(TagTool.Geometry.IVertexStream,System.Int32)">
            <summary>
            Reads rigid vertices into a format-independent list.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.ReadRigidCompressedVertices(TagTool.Geometry.VertexStreamReach,System.Int32)">
            <summary>
            Reads rigid vertices into a format-independent list.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.ReadRigidBonedVertices(TagTool.Geometry.VertexStreamReach,System.Int32)">
            <summary>
            Reads rigid boned vertices.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.ReadSkinnedVertices(TagTool.Geometry.IVertexStream,System.Int32)">
            <summary>
            Reads skinned vertices into a format-independent list.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.ReadDualQuatVertices(TagTool.Geometry.IVertexStream,System.Int32)">
            <summary>
            Reads dualquat vertices into a format-independent list.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.ReadWorldVertices(TagTool.Geometry.IVertexStream,System.Int32)">
            <summary>
            Reads world vertices into a format-independent list.
            </summary>
            <param name="reader">The vertex reader to read from.</param>
            <param name="count">The number of vertices to read.</param>
            <returns>The vertices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.DecompressVertices(System.Collections.Generic.IEnumerable{TagTool.Geometry.ObjExtractor.ObjVertex},TagTool.Geometry.VertexCompressor)">
            <summary>
            Decompresses vertex data in-place.
            </summary>
            <param name="vertices">The vertices to decompress in-place.</param>
            <param name="compressor">The compressor to use.</param>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.ReadIndices(TagTool.Geometry.MeshReader,TagTool.Geometry.Part)">
            <summary>
            Reads the index buffer data and converts it into a triangle list if necessary.
            </summary>
            <param name="reader">The mesh reader to use.</param>
            <param name="part">The mesh part to read.</param>
            <returns>The index buffer converted into a triangle list.</returns>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.WriteHeader">
            <summary>
            Writes a header to the file.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.WriteVertices(System.Collections.Generic.IEnumerable{TagTool.Geometry.ObjExtractor.ObjVertex})">
            <summary>
            Writes vertex data out to the file.
            </summary>
            <param name="vertices">The vertices to write.</param>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.WriteVertex(TagTool.Geometry.ObjExtractor.ObjVertex)">
            <summary>
            Writes a vertex out to the file.
            </summary>
            <param name="vertex">The vertex to write.</param>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.GenerateTriangles(System.Collections.Generic.IReadOnlyList{System.UInt16})">
            <summary>
            Queues triangle list data to be written out to the file.
            </summary>
            <param name="indices">The indices for the triangle list. Each set of 3 indices forms one triangle.</param>
        </member>
        <member name="M:TagTool.Geometry.ObjExtractor.TransformVertices(System.Collections.Generic.List{TagTool.Geometry.ObjExtractor.ObjVertex},System.Numerics.Matrix4x4)">
            <summary>
            Applys a transformation to a list of vertices
            </summary>
            <param name="vertices">The list of vertices</param>
            <param name="transform">The transform to apply</param>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometry.RuntimeFlags">
            <summary>
            The runtime flags of the render geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometry.Meshes">
            <summary>
            The meshes of the render geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometry.Compression">
            <summary>
            The compression information of the render geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometry.BoundingSpheres">
            <summary>
            The bounding spheres of the render geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometry.PerMeshNodeMaps">
            <summary>
            The per-mesh node mappings of the render geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometry.PerMeshSubpartVisibility">
            <summary>
            The per-mesh subpart visibility of the render geometry.
            </summary>
        </member>
        <member name="T:TagTool.Geometry.RenderGeometry.PerMeshRawDataBlock">
            <summary>
            Unused tag mesh data
            </summary>
        </member>
        <member name="M:TagTool.Geometry.RenderGeometry.SetResourceBuffers(TagTool.Tags.Resources.RenderGeometryApiResourceDefinition,System.Boolean)">
            <summary>
            Set the runtime VertexBufferResources and IndexBufferResources fields given the resource definition
            </summary>
            <param name="resourceDefinition"></param>
        </member>
        <member name="M:TagTool.Geometry.RenderGeometry.GetResourceDefinition">
            <summary>
            Generate a valid RenderGeometryApiResourceDefinition from the mesh blocks and sets the values in IndexBufferIndices, VertexBufferIndices
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.Geometry.RenderGeometryConverter.Convert(TagTool.Geometry.RenderGeometry,TagTool.Tags.Resources.RenderGeometryApiResourceDefinition)">
            <summary>
            Converts RenderGeometry class in place and returns a new RenderGeometryApiResourceDefinition
            </summary>
        </member>
        <member name="T:TagTool.Geometry.RenderModelBuilder">
            <summary>
            Utility class for creating render models from scratch.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.#ctor(TagTool.Cache.GameCache)">
            <summary>
            Initializes a new instance of the <see cref="T:TagTool.Geometry.RenderModelBuilder"/> class for a particular engine version.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.AddNode(TagTool.Tags.Definitions.RenderModel.Node)">
            <summary>
            Adds a node to the model.
            </summary>
            <param name="node">The node to add.</param>
            <returns>The node index.</returns>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.AddMaterial(TagTool.Geometry.RenderMaterial)">
            <summary>
            Adds a material to the model.
            </summary>
            <param name="material">The material.</param>
            <returns>The material index.</returns>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.BeginRegion(TagTool.Common.StringId)">
            <summary>
            Begins building a new model region.
            </summary>
            <param name="name">The name stringID.</param>
            <exception cref="T:System.InvalidOperationException">Cannot begin a new region while another is active</exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.EndRegion">
            <summary>
            Finishes building the current region.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Cannot end a region if nothing is active
            or
            Cannot end a region while a permutation is still active
            </exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.BeginPermutation(TagTool.Common.StringId)">
            <summary>
            Begins building a new model permutation in the current region.
            </summary>
            <param name="name">The name stringID.</param>
            <exception cref="T:System.InvalidOperationException">
            Cannot begin a new permutation if a region is not active
            or
            Cannot begin a new permutation while another is active
            </exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.EndPermutation">
            <summary>
            Finishes building the current permutation.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Cannot end a permutation if nothing is active
            or
            Cannot end a permutation while a mesh is still active
            or
            Cannot end a permutation if no region is active
            </exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.BeginMesh">
            <summary>
            Begins building a new mesh in the current permutation.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Cannot begin a new mesh if a permutation is not active
            or
            Cannot begin a new mesh while another is active
            </exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.EndMesh">
            <summary>
            Finishes building the current mesh.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Cannot end a mesh if nothing is active
            or
            Cannot end a mesh if no permutation is active
            </exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.MapNodes(System.Byte[])">
            <summary>
            Maps the given node indices to the current mesh.
            </summary>
            <param name="nodeIndices">List of node indices to map.</param>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.BindRigidVertexBuffer(System.Collections.Generic.IEnumerable{TagTool.Geometry.RigidVertex},System.SByte)">
            <summary>
            Binds a rigid vertex buffer to the current mesh.
            </summary>
            <param name="vertices">The vertices to bind.</param>
            <param name="nodeIndex">The node to attach the vertices to.</param>
            <exception cref="T:System.InvalidOperationException">Cannot bind a rigid vertex buffer if no mesh is active</exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.BindWorldVertexBuffer(System.Collections.Generic.IEnumerable{TagTool.Geometry.WorldVertex})">
            <summary>
            Binds a world vertex to the current mesh.
            </summary>
            <param name="vertices"></param>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.BindSkinnedVertexBuffer(System.Collections.Generic.IEnumerable{TagTool.Geometry.SkinnedVertex})">
            <summary>
            Binds a skinned vertex buffer to the current mesh.
            </summary>
            <param name="vertices">The vertices to bind.</param>
            <exception cref="T:System.InvalidOperationException">Cannot bind a skinned vertex buffer if no mesh is active</exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.BindIndexBuffer(System.Collections.Generic.IEnumerable{System.UInt16},TagTool.Geometry.IndexBufferFormat)">
            <summary>
            Binds an index buffer to the current mesh.
            </summary>
            <param name="indices">The indices to bind.</param>
            <param name="format">The primitive type to use.</param>
            <exception cref="T:System.InvalidOperationException">Cannot bind an index buffer if no mesh is active</exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.BeginPart(System.Int16,System.Int32,System.Int32,System.UInt16)">
            <summary>
            Begins a new part in the current mesh.
            </summary>
            <param name="materialIndex">Index of the material.</param>
            <param name="firstIndex">The first index.</param>
            <param name="indexCount">The index count.</param>
            <param name="vertexCount">The vertex count.</param>
            <exception cref="T:System.InvalidOperationException">Cannot define a part if no mesh is active</exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.DefineSubPart(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Defines a subpart in the current mesh part.
            </summary>
            <param name="firstIndex">The part's first index.</param>
            <param name="indexCount">The part's index count.</param>
            <param name="vertexCount">The part's vertex count.</param>
            <exception cref="T:System.InvalidOperationException">Cannot define a mesh subpart if no mesh part is active</exception>
        </member>
        <member name="M:TagTool.Geometry.RenderModelBuilder.Build(TagTool.Serialization.TagSerializer)">
            <summary>
            Builds a model tag and resource data.
            </summary>
            <param name="serializer">The tag serializer to use to serialize the model definition data.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Cannot build a model if a region is active</exception>
        </member>
        <member name="T:TagTool.Geometry.IndexBufferDefinition">
            <summary>
            Defines an index buffer in model data.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.IndexBufferDefinition.Format">
            <summary>
            The primitive type to use for the index buffer.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.IndexBufferDefinition.Data">
            <summary>
            The reference to the data for the index buffer.
            </summary>
        </member>
        <member name="T:TagTool.Geometry.VertexBufferDefinition">
            <summary>
            Defines a vertex buffer in model data.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.VertexBufferDefinition.Count">
            <summary>
            The number of vertices in the buffer.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.VertexBufferDefinition.Format">
            <summary>
            The format of each vertex.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.VertexBufferDefinition.VertexSize">
            <summary>
            The size of each vertex in bytes.
            </summary>
            <remarks>
            This multiplied by <see cref="F:TagTool.Geometry.VertexBufferDefinition.Count"/> should equal the total buffer size.
            </remarks>
        </member>
        <member name="F:TagTool.Geometry.VertexBufferDefinition.Data">
            <summary>
            The reference to the the data for the vertex buffer.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexBufferConverter.DebugFill(System.IO.Stream,System.Int32)">
            <summary>
            Writes the specificed amount of debug data 0xCD
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexBufferConverter.Fill(System.IO.Stream,System.Int32)">
            <summary>
            Writes the specificed amount of bytes to fill
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexBufferConverter.ConvertFromNormalBasis(System.Single)">
            <summary> 
            Change basis [0,1] to [-1,1] uniformly
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexBufferConverter.ConvertToNormalBasis(System.Single)">
            <summary> 
            Change basis [-1,1] to [0,1] uniformly
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexBufferConverter.FixRoundingShort(System.Single)">
            <summary>
            Modify value to account for some rounding error in gen3 conversion
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexBufferConverter.ConvertNormal(TagTool.Common.RealQuaternion)">
            <summary>
            Convert H3 normal to HO normal for tinyposition vertex
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexBufferConverter.ConvertPositionShort(TagTool.Common.RealVector3d)">
            <summary>
            Convert H3 position to HO position including rounding error for tinyposition vertex
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexBufferConverter.UShort2Short(System.UInt16)">
            <summary>
            Convert ushort [0,65535] to short [-32767,32767]
            </summary>
        </member>
        <member name="T:TagTool.Geometry.VertexStreamInterop">
            <summary>
            Vertex stream for using in and out of tagtool, uncompressed
            </summary>
        </member>
        <member name="T:TagTool.Geometry.BlenderPhmoMoppUtil">
            <summary>
            Utilities for generating moppcode from jsonPhmoExporter json data.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.BlenderPhmoMoppUtil.GenerateForBlenderPhmoJsonFile(System.String)">
            <summary>
            GenerateForBlenderPhmoJsonFile
            </summary>
            <param name="jsonFPath">Path to the JSON file containing blender exported using the jsonPhmoExporter plugin.</param>
            <returns>A memory stream with Havok 6.5.0 moppcode block</returns>
        </member>
        <member name="M:TagTool.Geometry.BlenderPhmoMoppUtil.GenerateForBlenderPhmoJson(System.String)">
            <summary>
            GenerateForBlenderPhmoJson
            </summary>
            <param name="jsonString">String containing blender exported JSON using the jsonPhmoExporter plugin.</param>
            <returns>A memory stream with Havok 6.5.0 moppcode block</returns>
        </member>
        <member name="M:TagTool.Geometry.BlenderPhmoMoppUtil.SynthesizeMoppBlock(System.IO.MemoryStream)">
            <summary>
            Creates a CollisionMoppCode instance using data from the moppstream
            </summary>
            <param name="moppStream">A havok 6.5.0 moppcode block</param>
            <returns></returns>
        </member>
        <member name="T:TagTool.Geometry.BlenderPhmoReader">
            <summary>
            This class loads, reads, tokenises, and parses a simple file format
            designed to store data exported from the Blender modeling program. 
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.MAIN_STRUCT_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.MAIN_STRUCT_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.MAIN_MATERIAL_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.MAIN_REGION_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.MAIN_PATHF_SPHERES_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.MAIN_NODES_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.MATERIAL_TAGBLOCK_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.REGION_TAGBLOCK_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.REGION_PERMUTATION_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.PERMUTATION_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.PATHF_SPHERE_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.NODE_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP_BSP3DNODES_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP_PLANES_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP_LEAVES_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP_BSP2DREFERENCES_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP_BSP2DNODES_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP_SURFACES_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP_EDGES_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP_VERTICES_OFFSET">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP3DNODE_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.PLANE_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.LEAF_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP2DREFERENCE_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.BSP2DNODE_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.SURFACE_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.EDGE_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="F:TagTool.Geometry.LegacyCollisionGeometryConverter.VERTEX_SIZE">
            <summary>
            Offset and Size values for H1CE tagblock structs
            </summary>
        </member>
        <member name="M:TagTool.Geometry.LegacyCollisionGeometryConverter.ParseMaterials(TagTool.Tags.Definitions.CollisionModel,System.IO.BinaryReader,System.Int32)">
            <summary>
            Stub for now, creates n materials, which are named 0 to (n-1)
            </summary>
        </member>
        <member name="M:TagTool.Geometry.LegacyCollisionGeometryConverter.ParseRegions(TagTool.Tags.Definitions.CollisionModel,System.IO.BinaryReader,System.Int32)">
            <summary>
            Parses regions into Halo Online collision 'Region' tagblocks.
            Names are not preserved.
            </summary>
            <param name="coll"></param>
            <param name="reader"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Geometry.LegacyCollisionGeometryConverter.ParseNodes(TagTool.Tags.Definitions.CollisionModel,System.IO.BinaryReader,System.Int32)">
            <summary>
            Parses all H1CE Collision Node tagblocks stored sequentially.
            The purpose of 'Node' is similar to 'Region' in Halo Online.
            </summary>
            <param name="coll"></param>
            <param name="reader"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Geometry.LegacyCollisionGeometryConverter.ParseFromFile(System.String)">
             <summary>
             This file parser will parse Halo 1 CE 'model_collision_geometry' tags.
             The addresses of the tagblocks inside the tag are likely to be garbage
             values. The Halo 1 CE development tool 'guerilla' does not use the 
             reflexive address value and expects chunks to occur in the order that
             the reflexives occur in the parent struct.
             
             The Halo1 CE collision tag is used due to high compatibility and 
             availability of 'Tool' - a program which can compile collision tags.
             
             The parser expects the following format:
             h1ce coll tag format:
            main struct
            all materials sequential
            all regions sequential
            all permutations sequential
            all path finding spheres sequential
            all nodes sequential
            bsp 0
            	   bsp0 3dnodes sequential
            	   ...
            	   bsp0 vertices sequential
            bsp 1
            	   ...
            ...
             </summary>
             <param name="fpath"></param>
             <returns></returns>
        </member>
        <member name="T:TagTool.Geometry.IndexBufferFormat">
            <summary>
            Index buffer formats.
            </summary>
        </member>
        <member name="T:TagTool.Geometry.IndexBufferStream">
            <summary>
            Reads and writes index buffer data.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.IndexBufferStream.#ctor(System.IO.Stream,TagTool.IO.EndianFormat)">
            <summary>
            Creates an index buffer stream.
            </summary>
            <param name="stream">The base stream to use. It must point to the beginning of the index buffer.</param>
            <param name="endianFormat">The endian format of the index buffer.</param>
        </member>
        <member name="P:TagTool.Geometry.IndexBufferStream.Position">
            <summary>
            The position of the stream in units of indices.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.IndexBufferStream.ReadIndex">
            <summary>
            Reads an index and advances the stream.
            </summary>
            <returns>The index that was read.</returns>
        </member>
        <member name="M:TagTool.Geometry.IndexBufferStream.WriteIndex(System.UInt16)">
            <summary>
            Writes an index and advances the stream.
            </summary>
            <param name="index">The index to write.</param>
        </member>
        <member name="M:TagTool.Geometry.IndexBufferStream.ReadIndices(System.UInt16[],System.UInt32,System.UInt32)">
            <summary>
            Reads indices into an array and advances the stream.
            </summary>
            <param name="buffer">The buffer to read into.</param>
            <param name="offset">The offset into the buffer to start storing at.</param>
            <param name="count">The number of indices to read.</param>
        </member>
        <member name="M:TagTool.Geometry.IndexBufferStream.ReadIndices(System.UInt32)">
            <summary>
            Reads an array of indices.
            </summary>
            <param name="count">The number of indices to read.</param>
            <returns>The indices that were read.</returns>
        </member>
        <member name="M:TagTool.Geometry.IndexBufferStream.WriteIndices(System.UInt16[],System.UInt32,System.UInt32)">
            <summary>
            Writes indices from an array and advances the stream.
            </summary>
            <param name="buffer">The buffer of indices to write.</param>
            <param name="offset">The offset into the buffer to start writing at.</param>
            <param name="count">The number of indices to write.</param>
        </member>
        <member name="M:TagTool.Geometry.IndexBufferStream.WriteIndices(System.UInt16[])">
            <summary>
            Writes indices from an array and advances the stream.
            </summary>
            <param name="buffer">The indices to write.</param>
        </member>
        <member name="M:TagTool.Geometry.IndexBufferStream.ReadTriangleStrip(System.UInt32)">
            <summary>
            Reads a triangle strip and converts it into a triangle list.
            </summary>
            <param name="indexCount">The number of indices in the strip. Cannot be 1 or 2.</param>
            <returns>The triangle strip converted into a triangle list.</returns>
        </member>
        <member name="T:TagTool.Geometry.Mesh">
            <summary>
            A 3D mesh which can be rendered.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Mesh.ResourceVertexBuffers">
            <summary>
            These should match the values in VertexBufferIndices, taken from the resource. Each time modification to render geometry is made these should be set.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Mesh.ResourceIndexBuffers">
            <summary>
            These should match the values in IndexBufferIndices, taken from the resource. Each time modification to render geometry is made these should be set.
            </summary>
        </member>
        <member name="T:TagTool.Geometry.Part">
            <summary>
            Associates geometry with a specific material.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Part.MaterialIndex">
            <summary>
            The block index of the material of the mesh part.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Part.TransparentSortingIndex">
            <summary>
            The transparent sorting index of the mesh part.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Part.FirstIndex">
            <summary>
            The index of the first vertex in the index buffer.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Part.IndexCount">
            <summary>
            The number of indices in the part.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Part.FirstSubPartIndex">
            <summary>
            The index of the first subpart that makes up this part.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Part.SubPartCount">
            <summary>
            The number of subparts that make up this part.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Part.TypeNew">
            <summary>
            The type of the mesh part.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Part.FlagsNew">
            <summary>
            The flags of the mesh part.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.Part.VertexCount">
            <summary>
            The number of vertices that the mesh part uses.
            </summary>
        </member>
        <member name="T:TagTool.Geometry.SubPart">
            <summary>
            A subpart of a mesh which can be rendered selectively.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.SubPart.FirstIndex">
            <summary>
            The index of the first vertex in the subpart.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.SubPart.IndexCount">
            <summary>
            The number of indices in the subpart.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.SubPart.VisibilityBoundsIndex">
            <summary>
            The index of the subpart visibility bounds.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.SubPart.PartIndex">
            <summary>
            The index of the part which this subpart belongs to.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.SubPart.VertexCount">
            <summary>
            The number of vertices that the part uses.
            </summary>
            <remarks>
            Note that this actually seems to be unused. The value is pulled from
            the vertex buffer definition instead.
            </remarks>
        </member>
        <member name="T:TagTool.Geometry.MeshFlags">
            <summary>
            Mesh flags.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.MeshFlags.MeshHasVertexColor">
            <summary>
            Indicates that the mesh has vertex colors instead of PRT data.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.PhysicsModelBuilder.#ctor">
            <summary>
            Initialise the physics model to be built
            </summary>
        </member>
        <member name="M:TagTool.Geometry.PhysicsModelBuilder.AddShape(TagTool.Tags.Definitions.PhysicsModel,SimpleJSON.JSONNode)">
            <summary>
            Finds the type of the shape and adds it. Currently, only 'Polyhedron' is supported.
            </summary>
            <param name="phmo">the tag to add the shape to</param> 
            <param name="n">the json node from which to parse the shape description.</param>
            <returns>shape type added, 'Unused0' is used to represent failure.</returns>
        </member>
        <member name="M:TagTool.Geometry.PhysicsModelBuilder.GetNumberOfShapes(TagTool.Tags.Definitions.PhysicsModel,TagTool.Havok.BlamShapeType)">
            <summary>
            Gets the number of shapes in the list for the particular shape
            </summary>
            <param name="phmo">the serialized phmo from which to get the counts</param>
            <param name="type">the shape for which to get the count</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Geometry.PhysicsModelBuilder.AddManyPlanes(TagTool.Tags.Definitions.PhysicsModel,SimpleJSON.JSONNode)">
            <summary>
            Adds planes to the physics model as described by the JSON node
            </summary>
            <param name="phmo"></param>
            <param name="n">a node that is a list of plane equations</param>
            <returns>The number of plane-equation tag-blocks added</returns>
        </member>
        <member name="M:TagTool.Geometry.PhysicsModelBuilder.AddManyFVS(TagTool.Tags.Definitions.PhysicsModel,SimpleJSON.JSONNode)">
            <summary>
            Adds Four-vertex tag-blocks to the physics model. For lists
            of vertices that are not multiples of four, the last vertex
            is copied. 
            </summary>
            <param name="phmo"></param>
            <param name="n">a node that is a list of vertex equations</param>
            <returns>the number of four-vertex tag-blocks added.</returns>
        </member>
        <member name="T:TagTool.Geometry.PrimitiveType">
            <summary>
            Model primitive types.
            </summary>
        </member>
        <member name="T:TagTool.Geometry.RenderGeometryCompression">
            <summary>
            Contains information about how geometry is compressed.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometryCompression.Flags">
            <summary>
            The flags of the geometry compression.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometryCompression.X">
            <summary>
            The minimum X value in the uncompressed geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometryCompression.Y">
            <summary>
            The minimum Y value in the uncompressed geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometryCompression.Z">
            <summary>
            The minimum Z value in the uncompressed geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometryCompression.U">
            <summary>
            The minimum U value in the uncompressed geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometryCompression.V">
            <summary>
            The minimum V value in the uncompressed geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometryCompression.U2">
            <summary>
            The minimum U value in the uncompressed geometry.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderGeometryCompression.V2">
            <summary>
            The minimum V value in the uncompressed geometry.
            </summary>
        </member>
        <member name="T:TagTool.Geometry.RenderMaterial">
            <summary>
            A material describing how a mesh part should be rendered.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderMaterial.OldRenderMethod">
            <summary>
            The OLD render method tag to use to render the material.
            </summary>
        </member>
        <member name="F:TagTool.Geometry.RenderMaterial.RenderMethod">
            <summary>
            The render method tag to use to render the material.
            </summary>
        </member>
        <member name="T:TagTool.Geometry.VertexBufferFormat">
            <summary>
            Vertex buffer formats.
            </summary>
        </member>
        <member name="T:TagTool.Geometry.VertexCompressor">
            <summary>
            Compresses and decompresses vertex data.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexCompressor.#ctor(TagTool.Geometry.RenderGeometryCompression)">
            <summary>
            Initializes a new instance of the <see cref="T:TagTool.Geometry.VertexCompressor"/> class.
            </summary>
            <param name="info">The compression info to use.</param>
        </member>
        <member name="M:TagTool.Geometry.VertexCompressor.CompressPosition(TagTool.Common.RealQuaternion)">
            <summary>
            Compresses a position so that its components are between 0 and 1.
            </summary>
            <param name="pos">The position to compress.</param>
            <returns>The compressed position.</returns>
        </member>
        <member name="M:TagTool.Geometry.VertexCompressor.DecompressPosition(TagTool.Common.RealQuaternion)">
            <summary>
            Decompresses a position so that its components are in model space.
            </summary>
            <param name="pos">The position to decompress.</param>
            <returns>The decompressed position.</returns>
        </member>
        <member name="M:TagTool.Geometry.VertexCompressor.CompressUv(TagTool.Common.RealVector2d)">
            <summary>
            Compresses texture coordinates so that the components are between 0 and 1.
            </summary>
            <param name="uv">The texture coordinates to compress.</param>
            <returns>The compressed coordinates.</returns>
        </member>
        <member name="M:TagTool.Geometry.VertexCompressor.DecompressUv(TagTool.Common.RealVector2d)">
            <summary>
            Decompresses texture coordinates.
            </summary>
            <param name="uv">The texture coordinates to decompress.</param>
            <returns>The decompressed coordinates.</returns>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.Clamp(System.Single)">
            <summary> 
            Force range [-1,1] on input float
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.Clamp(System.Single,System.Single,System.Single)">
            <summary> 
            Force range [a,b] on input float
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.DenormalizeUnsigned(System.UInt32)">
            <summary> 
            Denormalize an unsigned integer by dividing by 0xFFFF FFFF
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.DenormalizeUnsigned(System.UInt16)">
            <summary> 
            Denormalize an unsigned short integer by dividing by 0xFFFF
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.DenormalizeUnsigned(System.Byte)">
            <summary> 
            Denormalize an unsigned byte integer by dividing by 0xFF
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.DenormalizeSigned(System.Int32)">
            <summary> 
            Denormalize an signed integer by dividing by 0x7FFF FFFF.
            0x8000 0000 is mapped to -1.0f by convention (double -1.0 mapping)
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.DenormalizeSigned(System.Int16)">
            <summary> 
            Denormalize an signed short integer by dividing by 0x7FFF.
            0x8000 is mapped to -1.0f by convention (double -1.0 mapping)
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.DenormalizeSigned(System.SByte)">
            <summary> 
            Denormalize an signed byte integer by dividing by 0x7F.
            0x80 is mapped to -1.0f by convention (double -1.0 mapping)
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.NormalizeUInt(System.Single)">
            <summary> 
            Normalize a floating point number in [0,1] to an unsigned integer by multiplication with 0xFFFF FFFF.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.NormalizeUShort(System.Single)">
            <summary> 
            Normalize a floating point number in [0,1] to an unsigned short by multiplication with 0xFFFF.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.NormalizeByte(System.Single)">
            <summary> 
            Normalize a floating point number in [0,1] to an unsigned byte by multiplication with 0xFF.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.NormalizeInt(System.Single)">
            <summary> 
            Normalize a floating point number in [-1,1] to a signed int by multiplication with 0x7FFF FFFF.
            Note that 0x8000 0000 is never returned by convention.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.NormalizeShort(System.Single)">
            <summary> 
            Normalize a floating point number in [-1,1] to a signed short by multiplication with 0x7FFF.
            Note that 0x8000 is never returned by convention.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.NormalizeSByte(System.Single)">
            <summary> 
            Normalize a floating point number in [-1,1] to a signed byte by multiplication with 0x7F.
            Note that 0x80 is never returned by convention.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.DenormalizeSigned10BitInt(System.UInt16)">
            <summary> 
            Convert a 10 byte signed integer to float.
            Expected format: bits are contained in 0x3FF.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.DenormalizeUnsigned10BitInt(System.UInt16)">
            <summary> 
            Convert a 10 byte unsigned integer to float.
            Expected format: bits are contained in 0x3FF.
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.DenormalizeUnsigned3BitInt(System.Byte)">
            <summary>
            Convert a 3 bit int into an unsigned floating point number
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.NormalizeSigned10BitInt(System.Single)">
            <summary> 
            Convert a float to a 10 bit unsigned integer
            0x200 is never returned by convention
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.NormalizeUnsigned10BitInt(System.Single)">
            <summary> 
            Convert a float to a 10 bit signed integer
            </summary>
        </member>
        <member name="M:TagTool.Geometry.VertexElementStream.NormalizeUnsigned3BitInt(System.Single)">
            <summary>
            Convert a float to a 3 bit unsigned integer
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Geometry.VertexStreamFactory.Create(TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform,System.IO.Stream)">
            <summary>
            Creates a vertex stream for a given engine version.
            </summary>
            <param name="version">The engine version.</param>
            <param name="cachePlatform">the engine platform</param>
            <param name="stream">The base stream.</param>
            <returns>The created vertex stream.</returns>
        </member>
        <member name="T:TagTool.Geometry.VertexType">
            <summary>
            Vertex types.
            </summary>
        </member>
        <member name="T:TagTool.Geometry.StaticPerVertexData">
            <summary>
            Each color is some form of RGBE, engine converts it to rgb. Color 4,5 seem unused
            </summary>
        </member>
        <member name="T:TagTool.Havok.TagHkpMoppCode">
            <summary>
            Tag variant of HkpMoppCode with the actual codes in a tag block
            </summary>
        </member>
        <member name="T:TagTool.Havok.HkpMoppCode">
            <summary>
            Mopp code structure used in byte[]'s
            </summary>
        </member>
        <member name="T:TagTool.Havok.HkpSingleShapeContainer">
            <summary>
            At runtime this is a pointer
            </summary>
        </member>
        <member name="T:TagTool.IO.ExtantStream">
            <summary>
             A wrapper for a Stream which prevents it from being closed or disposed by code unless explicitely required by the user.
            </summary>
        </member>
        <member name="T:TagTool.IO.ModPackageStream">
            <summary>
            Manages the lifetime of the base cache stream to ensure it gets disposed with the mod package
            </summary>
        </member>
        <member name="T:TagTool.IO.OffsetStream">
            <summary>
             A wrapper for a Stream which shifts its seek offsets by a specified amount.
            </summary>
        </member>
        <member name="M:TagTool.IO.OffsetStream.#ctor(System.IO.Stream,System.Int64)">
            <summary>
            Constructs a new OffsetStream based off of another stream.
            </summary>
            <param name="baseStream">The underlying stream.</param>
            <param name="offset">The offset that should correspond to position 0 in the base stream.</param>
        </member>
        <member name="M:TagTool.IO.EndianReader.#ctor(System.IO.Stream,TagTool.IO.EndianFormat)">
            <summary>
            Creates a new instance of the EndianReader class.
            </summary>
            <param name="Stream">The Stream to read from.</param>
            <param name="Type">The default EndianFormat the EndianReader will use.</param>
        </member>
        <member name="M:TagTool.IO.EndianReader.#ctor(System.IO.Stream,System.Boolean,TagTool.IO.EndianFormat)">
            <summary>
            Creates a new instance of the EndianReader class.
            </summary>
            <param name="Stream">The Stream to read from.</param>
            <param name="leaveOpen">Whether to leave the underlying stream open.</param>
            <param name="Type">The default EndianFormat the EndianReader will use.</param>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadDouble">
            <summary>
            Reads a Double value in the EndianReader's default EndianFormat.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadInt16">
            <summary>
            Reads an Int16 value in the EndianReader's default EndianFormat.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadInt32">
            <summary>
            Reads an Int32 value in the EndianReader's default EndianFormat.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadInt64">
            <summary>
            Reads an Int64 value in the EndianReader's default EndianFormat.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadSingle">
            <summary>
            Reads a Single value in the EndianReader's default EndianFormat.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadUInt16">
            <summary>
            Reads a UInt16 value in the EndianReader's default EndianFormat.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadUInt32">
            <summary>
            Reads a UInt32 value in the EndianReader's default EndianFormat.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadUInt64">
            <summary>
            Reads a UInt64 value in the EndianReader's default EndianFormat.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadDouble(TagTool.IO.EndianFormat)">
            <summary>
            Reads a Double value in the specified EndianFormat.
            </summary>
            <param name="Type">The EndianFormat of the value.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadInt16(TagTool.IO.EndianFormat)">
            <summary>
            Reads an Int16 value in the specified EndianFormat.
            </summary>
            <param name="Type">The EndianFormat of the value.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadInt32(TagTool.IO.EndianFormat)">
            <summary>
            Reads an Int32 value in the specified EndianFormat.
            </summary>
            <param name="Type">The EndianFormat of the value.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadInt64(TagTool.IO.EndianFormat)">
            <summary>
            Reads an Int64 value in the specified EndianFormat.
            </summary>
            <param name="Type">The EndianFormat of the value.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadSingle(TagTool.IO.EndianFormat)">
            <summary>
            Reads a Single value in the specified EndianFormat.
            </summary>
            <param name="Type">The EndianFormat of the value.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadUInt16(TagTool.IO.EndianFormat)">
            <summary>
            Reads a UInt16 value in the specified EndianFormat.
            </summary>
            <param name="Type">The EndianFormat of the value.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadUInt32(TagTool.IO.EndianFormat)">
            <summary>
            Reads a UInt32 value in the specified EndianFormat.
            </summary>
            <param name="Type">The EndianFormat of the value.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadUInt64(TagTool.IO.EndianFormat)">
            <summary>
            Reads a UInt64 value in the specified EndianFormat.
            </summary>
            <param name="Type">The EndianFormat of the value.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadString(System.Int32,System.Boolean)">
            <summary>
            Reads a UTF8 string of specified length.
            </summary>
            <param name="Length">The number of characters to read into the string.</param>
            <param name="Trim">Weather to trim white-space from the string. Defaults to true.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadNullTerminatedString">
            <summary>
            Reads a null-terminated UTF8 string of indefinite length.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.ReadNullTerminatedString(System.Int32,System.Runtime.InteropServices.CharSet)">
            <summary>
            Reads a null-terminated UTF8 string of length up to MaxLength and advances the stream position by MaxLength bytes.
            </summary>
            <param name="MaxLength">The maximum number of characters to read.</param>
            <param name="charSet"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.PeekUInt16">
            <summary>
            Returns the next BigEndian UInt16 and does not advance the stream position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.PeekUInt16(TagTool.IO.EndianFormat)">
            <summary>
            Returns the next UInt16 and does not advance the stream position.
            </summary>
            <param name="Type">The EndianFormat of the value.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.IO.EndianReader.DecryptAesSegment(System.Int32,System.String)">
            <summary>
            Decrypts a segment of an EndianReader stream.
            </summary>
            <param name="length">The number of bytes to decrypt.</param>
            <param name="key">The decryption key as a string.</param>
            <returns>A new <see cref="T:System.IO.MemoryStream"/> containing the decrypted segment.</returns>
        </member>
        <member name="T:TagTool.IO.ProcessMemoryStream">
            <summary>
            A stream which reads/writes another process's memory.
            </summary>
        </member>
        <member name="M:TagTool.IO.ProcessMemoryStream.#ctor(System.Diagnostics.Process)">
            <summary>
            Constructs a new ProcessMemoryStream that accesses the memory of a specified process.
            </summary>
            <param name="process">The process to access the memory of.</param>
        </member>
        <member name="P:TagTool.IO.ProcessMemoryStream.BaseProcess">
            <summary>
                Gets the process that the stream operates on.
            </summary>
        </member>
        <member name="M:TagTool.IO.StreamUtil.Copy(System.IO.Stream,System.IO.Stream,System.Int64)">
            <summary>
            Copies data between two different streams.
            </summary>
            <param name="input">The stream to read from.</param>
            <param name="output">The stream to copy the read data to.</param>
            <param name="size">The size of the data to copy.</param>
        </member>
        <member name="M:TagTool.IO.StreamUtil.Copy(System.IO.Stream,System.Int64,System.Int64,System.Int64)">
            <summary>
            Copies data between two locations in the same stream.
            The source and destination areas may overlap.
            </summary>
            <param name="stream">The stream to copy data in.</param>
            <param name="originalPos">The position of the block of data to copy.</param>
            <param name="targetPos">The position to copy the block to.</param>
            <param name="size">The number of bytes to copy.</param>
        </member>
        <member name="M:TagTool.IO.StreamUtil.Insert(System.IO.Stream,System.Int32,System.Byte)">
            <summary>
            Inserts space into a stream by copying everything back by a certain number of bytes.
            </summary>
            <param name="stream">The stream to insert space into.</param>
            <param name="size">The size of the space to insert.</param>
            <param name="fill">The byte to fill the inserted space with. See <see cref="M:TagTool.IO.StreamUtil.Fill(System.IO.Stream,System.Byte,System.Int32)" />.</param>
        </member>
        <member name="M:TagTool.IO.StreamUtil.Remove(System.IO.Stream,System.Int32)">
            <summary>
            Removes bytes from a stream, moving everything after the bytes to the current position and decreasing the stream length.
            </summary>
            <param name="stream">The stream to remove bytes from.</param>
            <param name="size">The number of bytes to remove.</param>
            <exception cref="T:System.ArgumentException">The size of the data to remove must be >= 0</exception>
        </member>
        <member name="M:TagTool.IO.StreamUtil.Fill(System.IO.Stream,System.Byte,System.Int32)">
            <summary>
            Fills a section of a stream with a repeating byte.
            </summary>
            <param name="stream">The stream to fill a section of.</param>
            <param name="b">The byte to fill the section with.</param>
            <param name="size">The size of the section to fill.</param>
        </member>
        <member name="M:TagTool.IO.StreamUtil.Align(System.IO.Stream,System.Int32)">
            <summary>
            Aligns the position of a stream to a power of two, padding the stream with zeroes.
            </summary>
            <param name="stream">The stream.</param>
            <param name="align">The power of two to align to.</param>
        </member>
        <member name="P:TagTool.Scripting.Compiler.ScriptSyntaxReader.Reader">
            <summary>
            The binary reader which reads from the expression data stream.
            </summary>
        </member>
        <member name="F:TagTool.Scripting.Compiler.ScriptSyntaxReader.Delimiters">
            <summary>
            Expression syntax delimiters.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MaxVisionDistance">
            <summary>
            maximum range of sight
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CentralVisionAngle">
            <summary>
            horizontal angle within which we see targets out to our maximum range
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MaxVisionAngle">
            <summary>
            maximum horizontal angle within which we see targets at range
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.PeripheralVisionAngle">
            <summary>
            maximum horizontal angle within which we can see targets out of the corner of our eye
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.PeripheralDistance">
            <summary>
            maximum range at which we can see targets our of the corner of our eye
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.StandingGunOffset">
            <summary>
            offset of gun from feet when standing (x=forward, y=left, z=up)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CrouchingGunOffset">
            <summary>
            offset of gun from feet when crouch (x=forward, y=left, z=up)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.HearingDistance">
            <summary>
            maximum range at which sounds can be heard
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NoticeProjectileChance">
            <summary>
            random chance of noticing a dangerous enemy projectile (e.g. grenade)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NoticeVehicleChance">
            <summary>
            random chance of noticing a dangerous vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CombatPerceptionTime">
            <summary>
            time required to acknowledge a visible enemy when we are already in combat or searching for them
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.GuardPerceptionTime">
            <summary>
            time required to acknowledge a visible enemy when we have been alerted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NonCombatPerceptionTime">
            <summary>
            time required to acknowledge a visible enemy when we are not alerted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.DiveIntoCoverChance">
            <summary>
            chance of running a dive animation when moving into cover
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.EmergeFromCoverChance">
            <summary>
            chance of running an emerge animation when uncovering a target
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.DiveFromGrenadeChance">
            <summary>
            chance of running a dive animation when moving away from a grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.GlassIgnoranceChance">
            <summary>
            chance of not noticing that breakable surfaces have been destroyed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.StationaryMovementDist">
            <summary>
            movement distance which is considered 'stationary' for considering whether we crouch
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.FreeFlyingSidestep">
            <summary>
            distance which we allow sidestepping for flying units
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.BeginMovingAngle">
            <summary>
            we must be facing this close to our target before we start applying the throttle (default: 180 degrees)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MaximumAimingDeviation">
            <summary>
            how far we can turn our weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MaximumLookingDeviation">
            <summary>
            how far we can turn our head
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NoncombatLookDeltaL">
            <summary>
            how far we can turn our head left away from our aiming vector when not in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NoncombatLookDeltaR">
            <summary>
            how far we can turn our head right away from our aiming vector when not in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CombatLookDeltaL">
            <summary>
            how far we can turn our head left away from our aiming vector when in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CombatLookDeltaR">
            <summary>
            how far we can turn our head right away from our aiming vector when in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.IdleAimingRange">
            <summary>
            range in which we select random directions to aim in
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.IdleLookingRange">
            <summary>
            range in which we select random directions to look at
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.EventLookTimeModifier">
            <summary>
            multiplier for how long we look at interesting events (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NoncombatIdleFacing">
            <summary>
            rate at which we change facing when looking around randomly when not in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NoncombatIdleAiming">
            <summary>
            rate at which we change aiming directions when looking around randomly when not in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NoncombatIdleLooking">
            <summary>
            rate at which we change look around randomly when not in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.GuardIdleFacing">
            <summary>
            rate at which we change facing when looking around randomly when guarding
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.GuardIdleAiming">
            <summary>
            rate at which we change aiming directions when looking around randomly when guarding
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.GuardIdleLooking">
            <summary>
            rate at which we change look around randomly when guarding
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CombatIdleFacing">
            <summary>
            rate at which we change facing when looking around randomly when searching or in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CombatIdleAiming">
            <summary>
            rate at which we change aiming directions when looking around randomly when searching or in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CombatIdleLooking">
            <summary>
            rate at which we change look around randomly when searching or in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.UnreachableDangerTrigger">
            <summary>
            danger level of an unreachable enemy which will trigger a retreat if it continues over time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.VehicleDangerTrigger">
            <summary>
            danger level of a vehicle-based enemy which will trigger a retreat if it continues over time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.PlayerDangerTrigger">
            <summary>
            danger level of an enemy player which will trigger a retreat if it continues over time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.DangerTriggerTime">
            <summary>
            how long it takes for an unopposable enemy that has the above danger level to trigger a retreat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.FriendsKilledTrigger">
            <summary>
            if this many of our friends are killed by an unopposable enemy, we trigger a retreat (zero = never use this as a retreat
            condition)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.FriendsRetreatingTrigger">
            <summary>
            if this many of our friends are retreating from an unopposable enemy, we retreat as well (zero = never use this as a
            retreat condition)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.RetreatTime">
            <summary>
            how long we retreat from an unopposable enemy for
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CoweringTime">
            <summary>
            how long we hide in cover after being panicked
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.FriendKilledPanicChance">
            <summary>
            chance of panicking when we see a friend killed near us and the enemy is looking at us too
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.LeaderType">
            <summary>
            if we see a friend of this type killed we have a chance of panicking
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.LeaderKilledPanicChance">
            <summary>
            chance of panicking when we see a leader killed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.PanicDamageThreshold">
            <summary>
            panic if we take this much body damage in a short period of time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.SurpriseDistance">
            <summary>
            the distance at which newly acknowledged props or weapon impacts are considered 'close' for surprise purposes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.HideBehindCoverTime">
            <summary>
            danger values: being aimed at: 0.7
            an enemy shooting in our general direction: 1.2
            an enemy shooting directly at us:
            1.6
            an enemy damaging us: 2.0
            </summary>
            <summary>
            how long we stay behind cover after seeking cover
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.HideTargetNotVisibleTime">
            <summary>
            if this is non-zero then we will only seek cover if our target has not been visible recently
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.HideShieldFraction">
            <summary>
            elites and jackals only seek cover if their shield falls below this value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.AttackShieldFraction">
            <summary>
            elites and jackals only come out from cover to attack if they have this much shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.PursueShieldFraction">
            <summary>
            elites and jackals only come out from cover to pursue if they have this much shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.AttackingCrouchThreshold">
            <summary>
            when in attacking mode, if our crouch type is based on shields, we crouch when our shields are below this number; if our
            crouch type is based on danger, we crouch when our danger is above this number
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.DefendingCrouchThreshold">
            <summary>
            when in defending mode, if our crouch type is based on shields, we crouch when our shields are below this number; if our
            crouch type is based on danger, we crouch when our danger is above this number
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MinStandTime">
            <summary>
            minimum time to remain standing (zero = default)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MinCrouchTime">
            <summary>
            minimum time to remain crouching (zero = default)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.DefendingHideTimeModifier">
            <summary>
            how much longer we hide behind cover for when in the defending state (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.AttackingEvasionThreshold">
            <summary>
            when in attacking mode, we consider seeking cover or evading when our danger gets this high
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.DefendingEvasionThreshold">
            <summary>
            when in defending mode, we consider seeking cover or evading when our danger gets this high
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.EvasionSeekCoverChance">
            <summary>
            chance of seeking cover (otherwise we just evade)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.EvasionDelayTime">
            <summary>
            minimum time period between evasion moves
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MaxSeekCoverDistance">
            <summary>
            maximum distance we will consider going to find cover (zero = default)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CoverDamageThreshold">
            <summary>
            how much damage we must take before we are allowed to seek cover (zero = always allowed to)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.StalkingDiscoveryTime">
            <summary>
            if our target sees us for this long while we are stalking them, our cover is blown and we do something else (zero = never
            stop stalking)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.StalkingMaxDistance">
            <summary>
            distance outside of which we don't bother stalking
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.StationaryFacingAngle">
            <summary>
            angle outside of which we must abandon a stationary facing direction and suffer any penalties
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.ChangeFacingStandTime">
            <summary>
            how long we must stand up for after changing our fixed stationary facing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.UncoverDelayTime">
            <summary>
            time to look at target's position after it becomes visible
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.TargetSearchTime">
            <summary>
            time we search at target's position
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.PursuitPositionTime">
            <summary>
            time we search at a pursuit position
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NumPositionsCoord">
            <summary>
            number of pursuit positions to check when in coordinated group search mode
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NumPositionsNormal">
            <summary>
            number of pursuit positions to check when in normal search mode
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MeleeAttackDelay">
            <summary>
            how long we must wait between attempting melee attacks
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MeleeFudgeFactor">
            <summary>
            fudge factor that offsets how far in front of the target we start our attack (negative = we try to time our attack so
            that we go _through_ the target). this should be close to zero, but might be bigger for suiciding units
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MeleeChargeTime">
            <summary>
            how long we can stay in the charging state trying to reach our target before we give up
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MeleeLeapRange">
            <summary>
            we can launch leaping melee attacks at targets within these ranges (zero = can't leap)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MeleeLeapVelocity">
            <summary>
            how fast we spring at targets when launching a leaping melee attack
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MeleeLeapChance">
            <summary>
            chance of launching a leaping melee attack at a ground-based target (we always leap at flying targets)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.MeleeLeapBallistic">
            <summary>
            fraction that controls how ballistic our leaping melee trajectory is
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.BerserkDamageAmount">
            <summary>
            amount of body damage in a short time that makes us berserk
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.BerserkDamageThreshold">
            <summary>
            how low our body health must get before we will consider berserking
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.BerserkProximity">
            <summary>
            if we ever get this close to a target, we berserk
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.SuicideSensingDist">
            <summary>
            when we are this close to a target, we check to see if they're getting away and if so blow up
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.BerserkGrenadeChance">
            <summary>
            chance of berserking when we have a dangerous projectile stuck to us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.GuardPositionTime">
            <summary>
            time after which we decide to change guard positions (zero = never)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CombatPositionTime">
            <summary>
            time after which we change combat firing positions
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.OldPositionAvoidDist">
            <summary>
            distance we try and stay from our last discarded firing position
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.FriendAvoidDist">
            <summary>
            distance we try and stay from any friends
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.NoncombatIdleSpeechTime">
            <summary>
            time between idle vocalizations when we are not in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Actor.CombatIdleSpeechTime">
            <summary>
            time between idle vocalizations when we are in combat or searching
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.MovementType">
            <summary>
            note: only the flood combat forms will ever try to switch movement types voluntarily during combat
            </summary>
            <summary>
            when we have a choice of movement types, which type we will use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.InitialCrouchChance">
            <summary>
            actors that start their movement try to maintain this fraction of crouched actors
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.CrouchTime">
            <summary>
            when switching movement types, how long we will stay crouched for before running
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.RunTime">
            <summary>
            when switching movement types, how long we will run for before slowing to a crouch
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.MaximumFiringDistance">
            <summary>
            we can only fire our weapon at targets within this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.RateOfFire">
            <summary>
            how many times per second we pull the trigger (zero = continuously held down)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.ProjectileError">
            <summary>
            error added to every projectile we fire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.CustomStandGunOffset">
            <summary>
            custom standing gun offset for overriding the default in the base actor
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.CustomCrouchGunOffset">
            <summary>
            custom crouching gun offset for overriding the default in the base actor
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.TargetTracking">
            <summary>
            how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0=
            fire at current position
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.TargetLeading">
            <summary>
            how much we lead moving targets. 0.0= no prediction. 1.0= predict completely.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.WeaponDamageModifier">
            <summary>
            what fraction of its normal damage our weapon inflicts (zero = no modifier)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.DamagePerSecond">
            <summary>
            only used if weapon damage modifier is zero... how much damage we should deliver to the target per second while firing a
            burst at them (zero = use weapon default)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BurstOriginRadius">
            <summary>
            at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.
            the
            burst origin angle controls whether this error is exactly horizontal or might have some vertical component.
            
            over the
            course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also
            controlled by an angle that specifies how close to the horizontal it is.
            
            for example if the burst origin angle and the
            burst return angle were both zero, and the return length was the same as the burst length, every burst would start the
            same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the
            burst.
            </summary>
            <summary>
            how far away from the target the starting point is
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BurstOriginAngle">
            <summary>
            the range from the horizontal that our starting error can be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BurstReturnLength">
            <summary>
            how far the burst point moves back towards the target (could be negative)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BurstReturnAngle">
            <summary>
            the range from the horizontal that the return direction can be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BurstDuration">
            <summary>
            how long each burst we fire is
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BurstSeparation">
            <summary>
            how long we wait between bursts
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BurstAngularVelocity">
            <summary>
            the maximum rate at which we can sweep our fire (zero = unlimited)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.SpecialDamageModifier">
            <summary>
            damage modifier for special weapon fire (applied in addition to the normal damage modifier. zero = no change)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.SpecialProjectileError">
            <summary>
            projectile error angle for special weapon fire (applied in addition to the normal error)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.NewTargetBurstDuration">
            <summary>
            a firing pattern lets you modify the properties of an actor's burst geometry. actors choose which firing pattern to use
            based on their current state:
                 'new-target' when the target just appeared
                 'moving' when the actor is moving
                
            'berserk' if the actor is berserk
            if none of these apply, no firing pattern is used.
            
            the default values in the burst
            geometry are multiplied by any non-zero modifiers in the firing pattern.
            </summary>
            <summary>
            burst duration multiplier for newly appeared targets (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.NewTargetBurstSeparation">
            <summary>
            burst separation multiplier for newly appeared targets (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.NewTargetRateOfFire">
            <summary>
            rate-of-fire multiplier for newly appeared targets (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.NewTargetProjectileError">
            <summary>
            error multiplier for newly appeared targets (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.MovingBurstDuration">
            <summary>
            burst duration multiplier when the actor is moving (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.MovingBurstSeparation">
            <summary>
            burst separation multiplier when the actor is moving (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.MovingRateOfFire">
            <summary>
            rate-of-fire multiplier when the actor is moving (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.MovingProjectileError">
            <summary>
            error multiplier when the actor is moving (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BerserkBurstDuration">
            <summary>
            burst duration multiplier when the actor is berserk (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BerserkBurstSeparation">
            <summary>
            burst separation multiplier when the actor is berserk (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BerserkRateOfFire">
            <summary>
            rate-of-fire multiplier when the actor is berserk (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BerserkProjectileError">
            <summary>
            error multiplier when the actor is berserk (zero = unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.SuperBallisticRange">
            <summary>
            we try to aim our shots super-ballistically if target is outside this range (zero = never)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BombardmentRange">
            <summary>
            we offset our burst targets randomly by this range when firing at non-visible enemies (zero = never)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.ModifiedVisionRange">
            <summary>
            any custom vision range that this actor variant has (zero = normal)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.SpecialFireMode">
            <summary>
            the type of special weapon fire that we can use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.SpecialFireSituation">
            <summary>
            when we will decide to use our special weapon fire mode
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.SpecialFireChance">
            <summary>
            how likely we are to use our special weapon fire mode
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.SpecialFireDelay">
            <summary>
            how long we must wait between uses of our special weapon fire mode
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.MeleeRange">
            <summary>
            how close an enemy target must get before triggering a melee charge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.MeleeAbortRange">
            <summary>
            if our target gets this far away from us, we stop trying to melee them
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BerserkFiringRanges">
            <summary>
            if we are outside maximum range, we advance towards target, stopping when we reach minimum range
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BerserkMeleeRange">
            <summary>
            while berserking, how close an enemy target must get before triggering a melee charge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BerserkMeleeAbortRange">
            <summary>
            while berserking, if our target gets this far away from us, we stop trying to melee them
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.GrenadeType">
            <summary>
            type of grenades that we throw
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.TrajectoryType">
            <summary>
            how we throw our grenades
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.GrenadeStimulus">
            <summary>
            what causes us to consider throwing a grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.MinimumEnemyCount">
            <summary>
            how many enemies must be within the radius of the grenade before we will consider throwing there
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.EnemyRadius">
            <summary>
            we consider enemies within this radius when determining where to throw
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.GrenadeVelocity">
            <summary>
            how fast we can throw our grenades
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.GrenadeRanges">
            <summary>
            ranges within which we will consider throwing a grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.CollateralDamageRadius">
            <summary>
            we won't throw if there are friendlies around our target within this range
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.GrenadeChance">
            <summary>
            how likely we are to throw a grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.GrenadeCheckTime">
            <summary>
            for continuous stimuli (e.g. visible target), how often we check to see if we want to throw a grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.EncounterGrenadeTimeout">
            <summary>
            we cannot throw grenades if someone else in our encounter threw one this recently
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.Equipment">
            <summary>
            equipment item to drop when we die
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.GrenadeCount">
            <summary>
            number of grenades that we start with
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.DontDropGrenadesChance">
            <summary>
            how likely we are not to drop any grenades when we die, even if we still have some
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.DropWeaponLoaded">
            <summary>
            amount of ammo loaded into the weapon that we drop (in fractions of a clip, e.g. 0.3 to 0.5)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.DropWeaponAmmo">
            <summary>
            total number of rounds in the weapon that we drop (ignored for energy weapons)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.BodyVitality">
            <summary>
            maximum body vitality of our unit
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.ShieldVitality">
            <summary>
            maximum shield vitality of our unit
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.ShieldSappingRadius">
            <summary>
            how far away we can drain the player's shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ActorVariant.ForcedShaderPermutation">
            <summary>
            if nonzero, overrides the unit's shader permutation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Antenna.AttachmentMarkerName">
            <summary>
            the marker name where the antenna should be attached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Antenna.SpringStrengthCoefficient">
            <summary>
            strength of the spring (larger values make the spring stronger)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Antenna.AntennaVertexBlock.SpringStrengthCoefficient">
            <summary>
            strength of the spring (larger values make the spring stronger)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Antenna.AntennaVertexBlock.Angles">
            <summary>
            direction toward next vertex
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Antenna.AntennaVertexBlock.Length">
            <summary>
            distance between this vertex and the next
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Antenna.AntennaVertexBlock.SequenceIndex">
            <summary>
            bitmap group sequence index for this vertex's texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Antenna.AntennaVertexBlock.Color">
            <summary>
            color at this vertex
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Antenna.AntennaVertexBlock.LodColor">
            <summary>
            color at this vertex for the low-LOD line primitives
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.RiderDamageFraction">
            <summary>
            what percent damage applied to us gets applied to our children (i.e., riders)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DistanceOfEvadeAnim">
            <summary>
            this must be set to tell the AI how far it should expect our evade animation to move us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DistanceOfDiveAnim">
            <summary>
            this must be set to tell the AI how far it should expect our dive animation to move us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.StunnedMovementThreshold">
            <summary>
            if we take this much damage in a short space of time we will play our 'stunned movement' animations
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.SpawnedActor">
            <summary>
            actor variant which we spawn when we are destroyed or self-destruct
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.SpawnedActorCount">
            <summary>
            number of actors which we spawn
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.SpawnedVelocity">
            <summary>
            velocity at which we throw spawned actors
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AiVehicleRadius">
            <summary>
            radius around this unit that the AI tries to avoid when entering it as a vehicle (zero = use bounding sphere radius)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AiDangerRadius">
            <summary>
            danger radius around this unit that the AI tries to avoid
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BankAngle">
            <summary>
            angle at which we bank left/right when sidestepping or turning while moving forwards
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BankApplyTime">
            <summary>
            time it takes us to apply a bank
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BankDecayTime">
            <summary>
            time it takes us to recover from a bank
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.PitchRatio">
            <summary>
            amount that we pitch up/down when moving up or down
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.MaxVelocity">
            <summary>
            max velocity when not crouching
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.MaxSidestepVelocity">
            <summary>
            max sideways or up/down velocity when not crouching
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AngularVelocityMaximum">
            <summary>
            turn rate
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AngularAccelerationMaximum">
            <summary>
            turn acceleration rate
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.CrouchVelocityModifier">
            <summary>
            how much slower we fly if crouching (zero = same speed)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.MaximumSoftLandingTime">
            <summary>
            the longest amount of time the biped can take to recover from a soft landing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.MaximumHardLandingTime">
            <summary>
            the longest amount of time the biped can take to recover from a hard landing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.MinimumSoftLandingVelocity">
            <summary>
            below this velocity the biped does not react when landing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.MinimumHardLandingVelocity">
            <summary>
            below this velocity the biped will not do a soft landing when returning to the ground
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.MaximumHardLandingVelocity">
            <summary>
            the velocity corresponding to the maximum landing time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DeathHardLandingVelocity">
            <summary>
            the maximum velocity with which a character can strike the ground and live
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.ContactPoints">
            <summary>
            these are the points where the biped touches the ground
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Biped.DialogueVariantBlock.VariantNumber">
            <summary>
            variant number to use this dialogue with (must match the suffix in the permutations on the unit's model)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.Type">
            <summary>
            Type controls bitmap 'geometry'. All dimensions must be a power of two except for SPRITES and INTERFACE BITMAPS:
            
            * 2D
            TEXTURES: Ordinary, 2D textures will be generated.
            * 3D TEXTURES: Volume textures will be generated from each sequence of
            2D texture 'slices'.
            * CUBE MAPS: Cube maps will be generated from each consecutive set of six 2D textures in each
            sequence, all faces of a cube map must be square and the same size.
            * SPRITES: Sprite texture pages will be generated.
            *
            INTERFACE BITMAPS: Similar to 2D TEXTURES, but without mipmaps and without the power of two restriction.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.Format">
            <summary>
            Format controls how pixels will be stored internally:
            
            * COMPRESSED WITH COLOR-KEY TRANSPARENCY: DXT1 compression, uses 4
            bits per pixel. 4x4 blocks of pixels are reduced to 2 colors and interpolated, alpha channel uses color-key transparency
            instead of alpha from the plate (all zero-alpha pixels also have zero-color).
            * COMPRESSED WITH EXPLICIT ALPHA: DXT2/3
            compression, uses 8 bits per pixel. Same as DXT1 without the color key transparency, alpha channel uses alpha from plate
            quantized down to 4 bits per pixel.
            * COMPRESSED WITH INTERPOLATED ALPHA: DXT4/5 compression, uses 8 bits per pixel. Same
            as DXT2/3, except alpha is smoother. Better for smooth alpha gradients, worse for noisy alpha.
            * 16-BIT COLOR: Uses 16
            bits per pixel. Depending on the alpha channel, bitmaps are quantized to either r5g6b5 (no alpha), a1r5g5b5 (1-bit
            alpha), or a4r4g4b4 (1-bit alpha).
            * 32-BIT COLOR: Uses 32 bits per pixel. Very high quality, can have alpha at no added
            cost. This format takes up the most memory, however. Bitmap formats are x8r8g8b8 and a8r8g8b.
            * MONOCHROME: Uses either 8
            or 16 bits per pixel. Bitmap formats are a8 (alpha), y8 (intensity), ay8 (combined alpha-intensity) and a8y8 (separate
            alpha-intensity).
            
            Note: Height maps (a.k.a. bump maps) should use 32-bit color; this is internally converted to a
            palettized format which takes less memory.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.Usage">
            <summary>
            Usage controls how mipmaps are generated:
            
            * ALPHA BLEND: Pixels with zero alpha are ignored in mipmaps, to prevent
            bleeding the transparent color.
            * DEFAULT: Downsampling works normally, as in Photoshop.
            * HEIGHT MAP: The bitmap
            (normally grayscale) is a height map which gets converted to a bump map. Uses bump height below. Alpha is passed
            through unmodified.
            * DETAIL MAP: Mipmap color fades to gray, controlled by detail fade factor below. Alpha fades to
            white.
            * LIGHT MAP: Generates no mipmaps. Do not use!
            * VECTOR MAP: Used mostly for special effects; pixels are treated
            as XYZ vectors and normalized after downsampling. Alpha is passed through unmodified.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.DetailFadeFactor">
            <summary>
            These properties control how mipmaps are post-processed.
            </summary>
            <summary>
            0 means fade to gray by last mipmap, 1 means fade to gray by first mipmap
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.SharpenAmount">
            <summary>
            sharpens mipmap after downsampling
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.BumpHeight">
            <summary>
            the apparent height of the bump map above the triangle it is textured onto, in texture repeats (i.e., 1.0 would be as
            high as the texture is wide)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.SpriteBudgetSize">
            <summary>
            When creating a sprite group, specify the number and size of textures that the group is allowed to occupy. During
            importing, you'll receive feedback about how well the alloted space was used.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.ColorPlateWidth">
            <summary>
            The original TIFF file used to import the bitmap group.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.ProcessedPixelData">
            <summary>
            Pixel data after being processed by the tool.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.BlurFilterSize">
            <summary>
            blurs the bitmap before generating mipmaps
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.AlphaBias">
            <summary>
            affects alpha mipmap generation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.MipmapCount">
            <summary>
            0 defaults to all levels
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.SpriteUsage">
            <summary>
            Sprite usage controls the background color of sprite plates.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.BitmapDataBlock.Depth">
            <summary>
            depth is 1 for 2D textures and cube maps
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.BitmapDataBlock.Type">
            <summary>
            determines bitmap 'geometry'
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Bitmap.BitmapDataBlock.Format">
            <summary>
            determines how pixels are represented internally
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ContinuousDamageEffect.RandomTranslation">
            <summary>
            random translation in all directions
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ContinuousDamageEffect.RandomRotation">
            <summary>
            random rotation in all directions
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ContinuousDamageEffect.WobbleFunction">
            <summary>
            a function to perturb the effect's behavior over time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ContinuousDamageEffect.WobbleWeight">
            <summary>
            a value of 0.0 signifies that the wobble function has no effect; a value of 1.0 signifies that the effect will not be
            felt when the wobble function's value is zero.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ContinuousDamageEffect.VehiclePassthroughPenalty">
            <summary>
            zero damages passengers in vehicles, one does not
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ContinuousDamageEffect.Stun">
            <summary>
            amount of stun added to damaged unit
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ContinuousDamageEffect.MaximumStun">
            <summary>
            damaged unit's stun will never exceed this amount
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ContinuousDamageEffect.StunTime">
            <summary>
            duration of stun due to this damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.ScaleFlags">
            <summary>
            these flags determine which fields are scaled by the contrail density
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.PointGenerationRate">
            <summary>
            this many points are generated per second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.PointVelocity">
            <summary>
            velocity added to each point's initial velocity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.PointVelocityConeAngle">
            <summary>
            initial velocity is inside the cone defined by the marker's forward vector and this angle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.InheritedVelocityFraction">
            <summary>
            fraction of parent object's velocity that is inherited by contrail points.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.RenderType">
            <summary>
            this specifies how the contrail is oriented in space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.TextureRepeatsU">
            <summary>
            texture repeats per contrail segment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.TextureRepeatsV">
            <summary>
            texture repeats across contrail width
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.TextureAnimationU">
            <summary>
            the texture along the contrail is animated by this value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.TextureAnimationV">
            <summary>
            the texture across the contrail is animated by this value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.Bitmap1">
            <summary>
            Optional multitextured second map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.UAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.UAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.VAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.VAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.RotationAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.RotationAnimationScale">
            <summary>
            0 defaults to 360
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.ContrailPointStatesBlock.Duration">
            <summary>
            the time a point spends in this state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.ContrailPointStatesBlock.TransitionDuration">
            <summary>
            the time a point takes to transition to the next state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.ContrailPointStatesBlock.Width">
            <summary>
            contrail width at this point
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.ContrailPointStatesBlock.ColorLowerBound">
            <summary>
            contrail color at this point
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.ContrailPointStatesBlock.ColorUpperBound">
            <summary>
            contrail color at this point
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Contrail.ContrailPointStatesBlock.ScaleFlags">
            <summary>
            these flags determine which fields are scaled by the contrail density
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.Type">
            <summary>
            There are seven screen flash types:
            
            NONE: DST'= DST
            LIGHTEN: DST'= DST(1 - A) + C
            DARKEN: DST'= DST(1 - A) - C
            MAX:
            DST'= MAX[DST(1 - C), (C - A)(1-DST)]
            MIN: DST'= MIN[DST(1 - C), (C + A)(1-DST)]
            TINT: DST'= DST(1 - C) + (A*PIN[2C - 1,
            0, 1] + A)(1-DST)
            INVERT: DST'= DST(1 - C) + A)
            
            In the above equations C and A represent the color and alpha of the
            screen flash, DST represents the color in the framebuffer before the screen flash is applied, and DST' represents the
            color after the screen flash is applied.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.Duration4">
            <summary>
            the effect will last for this duration.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.FalloffFunction">
            <summary>
            a function to envelope the effect's magnitude over time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.RandomTranslation">
            <summary>
            random translation in all directions
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.RandomRotation">
            <summary>
            random rotation in all directions
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.WobbleFunction">
            <summary>
            a function to perturb the effect's behavior over time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.WobbleWeight">
            <summary>
            a value of 0.0 signifies that the wobble function has no effect; a value of 1.0 signifies that the effect will not be
            felt when the wobble function's value is zero.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.ForwardVelocity">
            <summary>
            Controls particle velocities when a damage effect shatters a materal.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.AoeCoreRadius">
            <summary>
            if this is area of effect damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.VehiclePassthroughPenalty">
            <summary>
            zero damages passengers in vehicles, one does not
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.ActiveCamouflageDamage">
            <summary>
            how much more visible this damage makes a player who is active camouflaged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.Stun">
            <summary>
            amount of stun added to damaged unit
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.MaximumStun">
            <summary>
            damaged unit's stun will never exceed this amount
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DamageEffect.StunTime">
            <summary>
            duration of stun due to this damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Decal.Flags">
            <summary>
            A 'compound decal' is a chain of decals which are instantiated simultaneously. Compound decals are created by choosing a
            next_decal_in_chain below. NOTE: Do not attempt to create a circularly linked decal chain, i.e. A-B-C-A! Also, do
            not reference a decal from an effect if it is not the 'head' of the chain; for example an effect should not instantiate
            decal B if the chain was A-B-C. Compound decals can have seperate bitmaps, seperate framebuffer blend functions, and
            can be drawn in seperate layers. In addition, each decal in the chain can either inherit its parent's radius, rotation,
            color, fade, and sequence - or it can randomly choose its own. This behavior is controlled by the
            'geometry_inherited_by_next_decal_in_chain' flag, below. 
            
            The decal type (or layer) determines the drawing order of
            the decal with respect to the rest of the environment. Decals in the primary layer are drawn after the environment
            diffuse texture, hence they affect the already-lit texture of the surface. Decals in the secondary layer are drawn
            immediately after decals in the primary layer, so they 'cover up' the primary decals. Decals in the 'light' layer are
            drawn before the environment diffuse texture, hence they affect the accumulated diffuse light and only indirectly affect
            the lit texture.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Decal.Type">
            <summary>
            controls how the decal wraps onto surface geometry
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Decal.Radius">
            <summary>
            0 defaults to 0.125
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Decal.Intensity">
            <summary>
            1 is fully visible, 0 is invisible
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DetailObjectCollection.DetailObjectTypeBlock.ColorOverrideFactor">
            <summary>
            fraction of detail object color to use instead of the base map color in the environment:[0,1]
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceControl.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceLightFixture.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.DeviceMachine.Flags2Value.Elevator">
            <summary>
            lighting based on what's around, rather than what's below
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.IdleNoncombat">
            <summary>
            vocalizations generated at intervals when nothing else is happening.
            </summary>
            <summary>
            played randomly and intermittently whenever we aren't in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.IdleCombat">
            <summary>
            played randomly and intermittently whenever we're in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.IdleFlee">
            <summary>
            played continuously while we are fleeing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PainBodyMinor">
            <summary>
            vocalizations generated automatically when damaged; interrupt everything except scripted dialogue.
            </summary>
            <summary>
            took body damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PainBodyMajor">
            <summary>
            took a significant amount of body damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PainShield">
            <summary>
            took shield damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PainFalling">
            <summary>
            took damage from falling
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.ScreamFear">
            <summary>
            screaming in fear (falling to your death, explosive stuck to you)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.ScreamPain">
            <summary>
            screaming in pain (being flamed)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.MaimedLimb">
            <summary>
            limb body part (arm or leg) was destroyed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.MaimedHead">
            <summary>
            head body part was destroyed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DeathQuiet">
            <summary>
            died from minor damage, or was unprepared
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DeathViolent">
            <summary>
            died from violent trauma
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DeathFalling">
            <summary>
            died from falling
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DeathAgonizing">
            <summary>
            died in a horribly painful fashion (burnt to death)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DeathInstant">
            <summary>
            died instantly
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DeathFlying">
            <summary>
            died and was blown up into the air
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DamagedFriend">
            <summary>
            hurt a friendly AI
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DamagedFriendPlayer">
            <summary>
            hurt a friendly player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DamagedEnemy">
            <summary>
            hurt an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DamagedEnemyCm">
            <summary>
            hurt an enemy: comment to friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtFriend">
            <summary>
            hurt by a friendly AI
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtFriendRe">
            <summary>
            hurt by a friendly AI: response from that friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtFriendPlayer">
            <summary>
            hurt by a friendly player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemy">
            <summary>
            hurt by an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyRe">
            <summary>
            hurt by an enemy: response from the enemy that hurt us ('you like that?')
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyCm">
            <summary>
            hurt by an enemy: comment from a friend of ours
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyBullet">
            <summary>
            hurt by an enemy with bullets
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyNeedler">
            <summary>
            hurt by an enemy with needles
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyPlasma">
            <summary>
            hurt by an enemy with a plasma bolt
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemySniper">
            <summary>
            hurt by an enemy with a sniper weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyGrenade">
            <summary>
            a grenade is stuck to us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyExplosion">
            <summary>
            hurt by an enemy with an explosive weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyMelee">
            <summary>
            hurt by an enemy with a melee weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyFlame">
            <summary>
            hurt by an enemy with flamethrower
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyShotgun">
            <summary>
            hurt by an enemy with a shotgun
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyVehicle">
            <summary>
            hurt by an enemy with a vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HurtEnemyMountedweapon">
            <summary>
            hurt by an enemy with a fixed weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledFriend">
            <summary>
            killed a friendly AI
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledFriendCm">
            <summary>
            killed a friendly AI: comment from a friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledFriendPlayer">
            <summary>
            killed a friendly player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledFriendPlayerCm">
            <summary>
            killed a friendly player: comment from a friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemy">
            <summary>
            killed an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyCm">
            <summary>
            killed an enemy: comment from a friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyPlayer">
            <summary>
            killed an enemy player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyPlayerCm">
            <summary>
            killed an enemy player: comment from a friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyCovenant">
            <summary>
            killed an enemy covenant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyCovenantCm">
            <summary>
            killed an enemy covenant: comment from a friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyFloodcombat">
            <summary>
            killed an enemy flood combat form
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyFloodcombatCm">
            <summary>
            killed an enemy flood combat form: comment from a friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyFloodcarrier">
            <summary>
            killed an enemy flood carrier form
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyFloodcarrierCm">
            <summary>
            killed an enemy flood carrier form: comment from a friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemySentinel">
            <summary>
            killed an enemy sentinel
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemySentinelCm">
            <summary>
            killed an enemy sentinel: comment from a friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyBullet">
            <summary>
            killed an enemy with bullets
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyNeedler">
            <summary>
            killed an enemy with needles
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyPlasma">
            <summary>
            killed an enemy with a plasma bolt
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemySniper">
            <summary>
            killed an enemy with a sniper weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyGrenade">
            <summary>
            killed an enemy with a grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyExplosion">
            <summary>
            killed an enemy with an explosive weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyMelee">
            <summary>
            killed an enemy with a melee weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyFlame">
            <summary>
            killed an enemy with flamethrower
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyShotgun">
            <summary>
            killed an enemy with a shotgun
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyVehicle">
            <summary>
            killed an enemy by hitting them with a vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KilledEnemyMountedweapon">
            <summary>
            killed an enemy with a fixed weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.KillingSpree">
            <summary>
            we are on a killing spree
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillCm">
            <summary>
            responses to a friendly player killing an enemy nearby
            </summary>
            <summary>
            response to the player killing an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillBulletCm">
            <summary>
            response to the player killing an enemy with bullets
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillNeedlerCm">
            <summary>
            response to the player killing an enemy with needles
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillPlasmaCm">
            <summary>
            response to the player killing an enemy with a plasma bolt
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillSniperCm">
            <summary>
            response to the player killing an enemy with a sniper weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.AnyoneKillGrenadeCm">
            <summary>
            response to _anyone_ killing an enemy with a grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillExplosionCm">
            <summary>
            response to the player killing an enemy with an explosive weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillMeleeCm">
            <summary>
            response to the player killing an enemy with a melee weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillFlameCm">
            <summary>
            response to the player killing an enemy with flamethrower
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillShotgunCm">
            <summary>
            response to the player killing an enemy with a shotgun
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillVehicleCm">
            <summary>
            response to the player killing an enemy by hitting them with a vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKillMountedweaponCm">
            <summary>
            response to the player killing an enemy with a fixed weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PlayerKilllingSpreeCm">
            <summary>
            response to the player going on a killing spree
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FriendDied">
            <summary>
            a friendly AI died
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FriendPlayerDied">
            <summary>
            a friendly player died
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FriendKilledByFriend">
            <summary>
            a friend died from friendly fire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FriendKilledByFriendlyPlayer">
            <summary>
            friend died from player's friendly fire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FriendKilledByEnemy">
            <summary>
            a friend died from enemy fire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FriendKilledByEnemyPlayer">
            <summary>
            friend died from an enemy player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FriendKilledByCovenant">
            <summary>
            a friend died from covenant fire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FriendKilledByFlood">
            <summary>
            a friend died from the flood
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FriendKilledBySentinel">
            <summary>
            a friend died from sentinel fire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FriendBetrayed">
            <summary>
            a friend was deliberately killed by an ally that we don't trust (e.g. player killed a marine)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.NewCombatAlone">
            <summary>
            vocalizations that can be played even if a friend is talking
            </summary>
            <summary>
            see an enemy and we have not previously been in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.NewEnemyRecentCombat">
            <summary>
            see a new enemy and we have recently been in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.OldEnemySighted">
            <summary>
            see an enemy that we are currently looking for
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.UnexpectedEnemy">
            <summary>
            unexpectedly encounters enemy (behind or to the side)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.DeadFriendFound">
            <summary>
            unexpectedly finds a dead body of a friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.AllianceBroken">
            <summary>
            we decide that a former ally is now a traitor
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.AllianceReformed">
            <summary>
            we forgive a traitor and make him our friend again
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.GrenadeThrowing">
            <summary>
            throwing a grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.GrenadeSighted">
            <summary>
            see an enemy grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.GrenadeStartle">
            <summary>
            alerted by a grenade bouncing near us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.GrenadeDangerEnemy">
            <summary>
            in danger from an enemy grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.GrenadeDangerSelf">
            <summary>
            in danger from your own grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.GrenadeDangerFriend">
            <summary>
            in danger from a friendly grenade (not our own)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.NewCombatGroupRe">
            <summary>
            vocalizations that require friends
            </summary>
            <summary>
            reply to a nearby friend who alerted us to an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.NewCombatNearbyRe">
            <summary>
            reply to a distant friend who alerted us to an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.AlertFriend">
            <summary>
            alert a friend who is in a noncombat state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.AlertFriendRe">
            <summary>
            alerted by a friend when in a noncombat state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.AlertLostContact">
            <summary>
            alert friends that target was not at expected location
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.AlertLostContactRe">
            <summary>
            alert friends that target was not at expected location: response
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Blocked">
            <summary>
            friend is blocking us from moving or firing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.BlockedRe">
            <summary>
            friend is blocking us from moving or firing: response
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.SearchStart">
            <summary>
            starting to search
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.SearchQuery">
            <summary>
            asking searchers whether they have found anything
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.SearchQueryRe">
            <summary>
            asking searchers whether they have found anything: response
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.SearchReport">
            <summary>
            searcher reporting that an area is clear
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.SearchAbandon">
            <summary>
            searcher giving up on search
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.SearchGroupAbandon">
            <summary>
            search coordinator giving up on search
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.GroupUncover">
            <summary>
            starting to uncover target with friend
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.GroupUncoverRe">
            <summary>
            starting to uncover target: response
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Advance">
            <summary>
            our platoon starts to attack or advance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.AdvanceRe">
            <summary>
            our platoon starts to attack or advance: response
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Retreat">
            <summary>
            our platoon starts to defend or retreat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.RetreatRe">
            <summary>
            our platoon starts to defend or retreat: response
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Cover">
            <summary>
            telling friends to seek cover
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.SightedFriendPlayer">
            <summary>
            vocalizations that don't require friends
            </summary>
            <summary>
            sighted a new friendly player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Shooting">
            <summary>
            shooting at an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.ShootingVehicle">
            <summary>
            shooting from a vehicle at an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.ShootingBerserk">
            <summary>
            shooting at an enemy while berserk
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.ShootingGroup">
            <summary>
            shooting at a group of enemies
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.ShootingTraitor">
            <summary>
            shooting at a traitorous player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Taunt">
            <summary>
            taunting the enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.TauntRe">
            <summary>
            taunted by an enemy: response
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Flee">
            <summary>
            fleeing in panic
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FleeRe">
            <summary>
            fleeing in panic: response
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.FleeLeaderDied">
            <summary>
            fleeing in panic because our leaders are all dead
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.AttemptedFlee">
            <summary>
            unable to flee because a leader is nearby
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.AttemptedFleeRe">
            <summary>
            unable to flee because a leader is nearby - response
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.LostContact">
            <summary>
            target was not at expected location
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.HidingFinished">
            <summary>
            stops hiding and pursues target
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.VehicleEntry">
            <summary>
            enters vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.VehicleExit">
            <summary>
            exits vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.VehicleWoohoo">
            <summary>
            excited while in vehicle (big air, etc)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.VehicleScared">
            <summary>
            scared while in vehicle (imminent crash)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.VehicleCollision">
            <summary>
            riding in a vehicle and the driver collides with something
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.PartiallySighted">
            <summary>
            saw something suspicious but not sure it was an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.NothingThere">
            <summary>
            decided that a suspicious sighting was nothing after all
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Pleading">
            <summary>
            pleading for the player to spare our pitiable lives
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Surprise">
            <summary>
            vocalizations that interrupt our talking
            </summary>
            <summary>
            surprised by an enemy, noise, body or weapon impact
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Berserk">
            <summary>
            went berserk
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.MeleeAttack">
            <summary>
            attacked an enemy in melee
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Dive">
            <summary>
            dove away from danger or into cover
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.UncoverExclamation">
            <summary>
            leapt out of corner to uncover a suspected target
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.LeapAttack">
            <summary>
            begin a leap attack
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Resurrection">
            <summary>
            arise and return to life
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Celebration">
            <summary>
            vocalizations that immediately follow combat
            </summary>
            <summary>
            all enemies defeated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.CheckBodyEnemy">
            <summary>
            post-combat checking an enemy's dead body
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.CheckBodyFriend">
            <summary>
            post-combat checking a friend's dead body
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.ShootingDeadEnemy">
            <summary>
            post-combat shooting an enemy's dead body
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.ShootingDeadEnemyPlayer">
            <summary>
            post-combat shooting an enemy player's dead body
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Alone">
            <summary>
            vocalizations that immediately follow combat
            </summary>
            <summary>
            post-combat all friends killed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Unscathed">
            <summary>
            post-combat we were not hurt
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.SeriouslyWounded">
            <summary>
            post-combat we were badly hurt
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.SeriouslyWoundedRe">
            <summary>
            post-combat replying to a friend who was badly hurt
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Massacre">
            <summary>
            post-combat our friends took heavy casualties
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.MassacreRe">
            <summary>
            post-combat reply: our friends took heavy casualties
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.Rout">
            <summary>
            post-combat our friends kicked alien ass
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Dialogue.RoutRe">
            <summary>
            post-combat reply: our friends kicked alien ass
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.SkipFraction">
            <summary>
            chance that this event will be skipped entirely
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.DelayBounds">
            <summary>
            delay before this event takes place
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.DurationBounds">
            <summary>
            duration of this event
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.EffectPartBlock.VelocityBounds">
            <summary>
            initial velocity along the location's forward
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.EffectPartBlock.VelocityConeAngle">
            <summary>
            initial velocity will be inside the cone defined by this angle.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.EffectParticlesBlock.RelativeDirection">
            <summary>
            particle initial velocity direction relative to the location's forward
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.EffectParticlesBlock.RelativeOffset">
            <summary>
            particle initial position offset relative to the locatin's forward
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.EffectParticlesBlock.DistributionFunction">
            <summary>
            describes how the part creations are distributed over the event duration
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.EffectParticlesBlock.Count">
            <summary>
            number of particles created
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.EffectParticlesBlock.DistributionRadius">
            <summary>
            initial distance from the location's origin
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.EffectParticlesBlock.Velocity">
            <summary>
            initial velocity along the specified direction
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.EffectParticlesBlock.VelocityConeAngle">
            <summary>
            particle initial velocities will be inside the cone defined by this angle and the specified direction
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Effect.EffectEventBlock.EffectParticlesBlock.Radius">
            <summary>
            particle radius
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.MessageIndex">
            <summary>
            This sets which string from tags\ui\hud\hud_item_messages.unicode_string_list to display.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Equipment.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Flag.TrailingEdgeShapeOffset">
            <summary>
            zero places the shape exactly on the trailing edge, positive numbers push it off the edge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Flag.Width">
            <summary>
            flag size from attached to trailing edge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Flag.Height">
            <summary>
            flag size along the direction of attachment (should be odd)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Flag.CellWidth">
            <summary>
            width of the cell between each pair of vertices
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Flag.CellHeight">
            <summary>
            height of the cell between each pair of vertices
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Flag.AttachmentPoints">
            <summary>
            attachment points determine where the flag is attached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Flag.FlagAttachmentPointBlock.HeightToNextAttachment">
            <summary>
            flag vertices between this attachment point and the next
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Fog.Flags">
            <summary>
            Setting atmosphere dominant prevents polygon popping when the atmospheric fog maximum density (in the sky tag) is 1 and
            the atmospheric fog opaque distance is less than the diameter of the map. However, this flag will cause artifacts when
            the camera goes below the fog plane - so it should only be used when the fog plane is close to the ground.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Fog.MaximumDensity">
            <summary>
            planar fog density is clamped to this value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Fog.OpaqueDistance">
            <summary>
            the fog becomes opaque at this distance from the viewer
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Fog.OpaqueDepth">
            <summary>
            the fog becomes opaque at this distance from its surface
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Fog.DistanceToWaterPlane">
            <summary>
            the fog becomes water at this distance from its surface
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Fog.LayerCount">
            <summary>
            0 layers disables the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Fog.StartDistanceFromFogPlane">
            <summary>
            do NOT set this to the same value as maximum_depth
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Fog.Color1">
            <summary>
            0 defaults to planar fog color
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Fog.MapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Fog.WindPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.MessageIndex">
            <summary>
            This sets which string from tags\ui\hud\hud_item_messages.unicode_string_list to display.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Garbage.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Gbxmodel.BaseMapUScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Gbxmodel.BaseMapVScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerControlBlock.MagnetismFriction">
            <summary>
            how much the crosshair slows over enemies
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerControlBlock.MagnetismAdhesion">
            <summary>
            how much the crosshair sticks to enemies
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerControlBlock.InconsequentialTargetScale">
            <summary>
            scales magnetism level for inconsequential targets like infection forms
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerControlBlock.LookAccelerationTime">
            <summary>
            time for a pegged look to reach maximum effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerControlBlock.LookAccelerationScale">
            <summary>
            maximum effect of a pegged look (scales last value in the look function below)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerControlBlock.LookPegThreshold01">
            <summary>
            magnitude of yaw for pegged acceleration to kick in
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerControlBlock.LookAutolevellingScale">
            <summary>
            1 is fast, 0 is none, 1 will probably be really fast
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerControlBlock.MinimumWeaponSwapTicks">
            <summary>
            amount of time player needs to hold down ACTION to pick up a new weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerControlBlock.MinimumAutolevellingTicks">
            <summary>
            amount of time player needs to move and not look up or down for autolevelling to kick in
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerControlBlock.MinimumAngleForVehicleFlipping">
            <summary>
            0 means the vehicle's up vector is along the ground, 90 means the up vector is pointing straight up:degrees
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyEnemyDamage">
            <summary>
            scale values for enemy health and damage settings
            </summary>
            <summary>
            enemy damage multiplier on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalEnemyDamage">
            <summary>
            enemy damage multiplier on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardEnemyDamage">
            <summary>
            enemy damage multiplier on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossEnemyDamage">
            <summary>
            enemy damage multiplier on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyEnemyVitality">
            <summary>
            enemy maximum body vitality scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalEnemyVitality">
            <summary>
            enemy maximum body vitality scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardEnemyVitality">
            <summary>
            enemy maximum body vitality scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossEnemyVitality">
            <summary>
            enemy maximum body vitality scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyEnemyShield">
            <summary>
            enemy maximum shield vitality scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalEnemyShield">
            <summary>
            enemy maximum shield vitality scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardEnemyShield">
            <summary>
            enemy maximum shield vitality scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossEnemyShield">
            <summary>
            enemy maximum shield vitality scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyEnemyRecharge">
            <summary>
            enemy shield recharge scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalEnemyRecharge">
            <summary>
            enemy shield recharge scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardEnemyRecharge">
            <summary>
            enemy shield recharge scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossEnemyRecharge">
            <summary>
            enemy shield recharge scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyFriendDamage">
            <summary>
            friend damage multiplier on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalFriendDamage">
            <summary>
            friend damage multiplier on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardFriendDamage">
            <summary>
            friend damage multiplier on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossFriendDamage">
            <summary>
            friend damage multiplier on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyFriendVitality">
            <summary>
            friend maximum body vitality scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalFriendVitality">
            <summary>
            friend maximum body vitality scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardFriendVitality">
            <summary>
            friend maximum body vitality scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossFriendVitality">
            <summary>
            friend maximum body vitality scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyFriendShield">
            <summary>
            friend maximum shield vitality scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalFriendShield">
            <summary>
            friend maximum shield vitality scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardFriendShield">
            <summary>
            friend maximum shield vitality scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossFriendShield">
            <summary>
            friend maximum shield vitality scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyFriendRecharge">
            <summary>
            friend shield recharge scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalFriendRecharge">
            <summary>
            friend shield recharge scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardFriendRecharge">
            <summary>
            friend shield recharge scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossFriendRecharge">
            <summary>
            friend shield recharge scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyInfectionForms">
            <summary>
            toughness of infection forms (may be negative) on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalInfectionForms">
            <summary>
            toughness of infection forms (may be negative) on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardInfectionForms">
            <summary>
            toughness of infection forms (may be negative) on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossInfectionForms">
            <summary>
            toughness of infection forms (may be negative) on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyRateOfFire">
            <summary>
            difficulty-affecting values for enemy ranged combat settings
            </summary>
            <summary>
            enemy rate of fire scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalRateOfFire">
            <summary>
            enemy rate of fire scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardRateOfFire">
            <summary>
            enemy rate of fire scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossRateOfFire">
            <summary>
            enemy rate of fire scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyProjectileError">
            <summary>
            enemy projectile error scale, as a fraction of their base firing error. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalProjectileError">
            <summary>
            enemy projectile error scale, as a fraction of their base firing error. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardProjectileError">
            <summary>
            enemy projectile error scale, as a fraction of their base firing error. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossProjectileError">
            <summary>
            enemy projectile error scale, as a fraction of their base firing error. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyBurstError">
            <summary>
            enemy burst error scale; reduces intra-burst shot distance. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalBurstError">
            <summary>
            enemy burst error scale; reduces intra-burst shot distance. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardBurstError">
            <summary>
            enemy burst error scale; reduces intra-burst shot distance. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossBurstError">
            <summary>
            enemy burst error scale; reduces intra-burst shot distance. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyNewTargetDelay">
            <summary>
            enemy new-target delay scale factor. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalNewTargetDelay">
            <summary>
            enemy new-target delay scale factor. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardNewTargetDelay">
            <summary>
            enemy new-target delay scale factor. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossNewTargetDelay">
            <summary>
            enemy new-target delay scale factor. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyBurstSeparation">
            <summary>
            delay time between bursts scale factor for enemies. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalBurstSeparation">
            <summary>
            delay time between bursts scale factor for enemies. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardBurstSeparation">
            <summary>
            delay time between bursts scale factor for enemies. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossBurstSeparation">
            <summary>
            delay time between bursts scale factor for enemies. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyTargetTracking">
            <summary>
            additional target tracking fraction for enemies. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalTargetTracking">
            <summary>
            additional target tracking fraction for enemies. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardTargetTracking">
            <summary>
            additional target tracking fraction for enemies. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossTargetTracking">
            <summary>
            additional target tracking fraction for enemies. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyTargetLeading">
            <summary>
            additional target leading fraction for enemies. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalTargetLeading">
            <summary>
            additional target leading fraction for enemies. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardTargetLeading">
            <summary>
            additional target leading fraction for enemies. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossTargetLeading">
            <summary>
            additional target leading fraction for enemies. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyOverchargeChance">
            <summary>
            overcharge chance scale factor for enemies. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalOverchargeChance">
            <summary>
            overcharge chance scale factor for enemies. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardOverchargeChance">
            <summary>
            overcharge chance scale factor for enemies. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossOverchargeChance">
            <summary>
            overcharge chance scale factor for enemies. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasySpecialFireDelay">
            <summary>
            delay between special-fire shots (overcharge, banshee bombs) scale factor for enemies. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalSpecialFireDelay">
            <summary>
            delay between special-fire shots (overcharge, banshee bombs) scale factor for enemies. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardSpecialFireDelay">
            <summary>
            delay between special-fire shots (overcharge, banshee bombs) scale factor for enemies. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossSpecialFireDelay">
            <summary>
            delay between special-fire shots (overcharge, banshee bombs) scale factor for enemies. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyGuidanceVsPlayer">
            <summary>
            guidance velocity scale factor for all projectiles targeted on a player. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalGuidanceVsPlayer">
            <summary>
            guidance velocity scale factor for all projectiles targeted on a player. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardGuidanceVsPlayer">
            <summary>
            guidance velocity scale factor for all projectiles targeted on a player. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossGuidanceVsPlayer">
            <summary>
            guidance velocity scale factor for all projectiles targeted on a player. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyMeleeDelayBase">
            <summary>
            delay period added to all melee attacks, even when berserk. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalMeleeDelayBase">
            <summary>
            delay period added to all melee attacks, even when berserk. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardMeleeDelayBase">
            <summary>
            delay period added to all melee attacks, even when berserk. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossMeleeDelayBase">
            <summary>
            delay period added to all melee attacks, even when berserk. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyMeleeDelayScale">
            <summary>
            multiplier for all existing non-berserk melee delay times. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalMeleeDelayScale">
            <summary>
            multiplier for all existing non-berserk melee delay times. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardMeleeDelayScale">
            <summary>
            multiplier for all existing non-berserk melee delay times. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossMeleeDelayScale">
            <summary>
            multiplier for all existing non-berserk melee delay times. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyGrenadeChanceScale">
            <summary>
            difficulty-affecting values for enemy grenade behavior
            </summary>
            <summary>
            scale factor affecting the desicions to throw a grenade. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalGrenadeChanceScale">
            <summary>
            scale factor affecting the desicions to throw a grenade. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardGrenadeChanceScale">
            <summary>
            scale factor affecting the desicions to throw a grenade. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossGrenadeChanceScale">
            <summary>
            scale factor affecting the desicions to throw a grenade. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyGrenadeTimerScale">
            <summary>
            scale factor affecting the delay period between grenades thrown from the same encounter (lower is more often). on easy
            difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalGrenadeTimerScale">
            <summary>
            scale factor affecting the delay period between grenades thrown from the same encounter (lower is more often). on normal
            difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardGrenadeTimerScale">
            <summary>
            scale factor affecting the delay period between grenades thrown from the same encounter (lower is more often). on hard
            difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossGrenadeTimerScale">
            <summary>
            scale factor affecting the delay period between grenades thrown from the same encounter (lower is more often). on
            impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyMajorUpgradeNormal">
            <summary>
            difficulty-affecting values for enemy placement
            </summary>
            <summary>
            fraction of actors upgraded to their major variant. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalMajorUpgradeNormal">
            <summary>
            fraction of actors upgraded to their major variant. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardMajorUpgradeNormal">
            <summary>
            fraction of actors upgraded to their major variant. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossMajorUpgradeNormal">
            <summary>
            fraction of actors upgraded to their major variant. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyMajorUpgradeFew">
            <summary>
            fraction of actors upgraded to their major variant when mix = normal. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalMajorUpgradeFew">
            <summary>
            fraction of actors upgraded to their major variant when mix = normal. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardMajorUpgradeFew">
            <summary>
            fraction of actors upgraded to their major variant when mix = normal. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossMajorUpgradeFew">
            <summary>
            fraction of actors upgraded to their major variant when mix = normal. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.EasyMajorUpgradeMany">
            <summary>
            fraction of actors upgraded to their major variant when mix = many. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.NormalMajorUpgradeMany">
            <summary>
            fraction of actors upgraded to their major variant when mix = many. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.HardMajorUpgradeMany">
            <summary>
            fraction of actors upgraded to their major variant when mix = many. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.DifficultyBlock.ImpossMajorUpgradeMany">
            <summary>
            fraction of actors upgraded to their major variant when mix = many. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.RasterizerDataBlock.DistanceAttenuation">
            <summary>
            Used internally by the rasterizer. (Do not change unless you know what you're doing!)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.RasterizerDataBlock.LinearCornerFade">
            <summary>
            used for shadows
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.RasterizerDataBlock.Default2d">
            <summary>
            Used internally by the rasterizer - additive, multiplicative, detail, vector. (Do not change ever, period.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.RasterizerDataBlock.Test0">
            <summary>
            Used internally by the rasterizer. (Used by Bernie's experimental shaders.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.RasterizerDataBlock.VideoScanlineMap">
            <summary>
            Used in cinematics.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.RasterizerDataBlock.DistanceAttenuation2d">
            <summary>
            The PC can't use 3D textures, so we use this instead.
            </summary>
            <summary>
            the pc can't use 3d textures, so we use this instead
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerInformationBlock.StunMovementPenalty">
            <summary>
            1.0 prevents moving while stunned
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerInformationBlock.StunTurningPenalty">
            <summary>
            1.0 prevents turning while stunned
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerInformationBlock.StunJumpingPenalty">
            <summary>
            1.0 prevents jumping while stunned
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerInformationBlock.MinimumStunTime">
            <summary>
            all stunning damage will last for at least this long
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.PlayerInformationBlock.MaximumStunTime">
            <summary>
            no stunning damage will last for longer than this
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.MaterialsBlock.GroundFrictionScale">
            <summary>
            the following fields modify the way a vehicle drives over terrain of this material type.
            </summary>
            <summary>
            fraction of original velocity parallel to the ground after one tick
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.MaterialsBlock.GroundFrictionNormalK1Scale">
            <summary>
            cosine of angle at which friction falls off
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.MaterialsBlock.GroundFrictionNormalK0Scale">
            <summary>
            cosine of angle at which friction is zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.MaterialsBlock.GroundDepthScale">
            <summary>
            depth a point mass rests in the ground
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.MaterialsBlock.GroundDampFractionScale">
            <summary>
            fraction of original velocity perpendicular to the ground after one tick
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.MaterialsBlock.BreakableSurfaceParticleEffectBlock.VelocityScale">
            <summary>
            scales initial velocity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Globals.MaterialsBlock.BreakableSurfaceParticleEffectBlock.Radius">
            <summary>
            particle radius
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.AttachmentMarker">
            <summary>
            the marker name that the glow should be attached to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.NumberOfParticles">
            <summary>
            the number of particles that comprise the glow system
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.BoundaryEffect">
            <summary>
            particles behavior on reaching the end of an object
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.NormalParticleDistribution">
            <summary>
            distribution of the normal particles about the object
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.TrailingParticleDistribution">
            <summary>
            distribution of the trailing particles about the object
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.ParticleRotationalVelocity">
            <summary>
            radians per second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.ParticleRotVelMulLow">
            <summary>
            multiplied by overall velocity; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.ParticleRotVelMulHigh">
            <summary>
            multiplied by overall velocity; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.EffectRotationalVelocity">
            <summary>
            in radians per second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.EffectRotVelMulLow">
            <summary>
            multiplied by overall velocity; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.EffectRotVelMulHigh">
            <summary>
            multiplied by overall velocity; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.EffectTranslationalVelocity">
            <summary>
            in world units per second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.EffectTransVelMulLow">
            <summary>
            multiplied by overall velocity; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.EffectTransVelMulHigh">
            <summary>
            multiplied by overall velocity; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.MinDistanceParticleToObject">
            <summary>
            in world units
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.MaxDistanceParticleToObject">
            <summary>
            in world units
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.DistanceToObjectMulLow">
            <summary>
            multiplied by particle distance; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.DistanceToObjectMulHigh">
            <summary>
            multiplied by particle distance; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.ParticleSizeBounds">
            <summary>
            size of particles
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.SizeAttachmentMultiplier">
            <summary>
            multiplied by particle size; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.ColorBound0">
            <summary>
            the color of all particles will vary between color bound 0 and color bound 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.ColorBound1">
            <summary>
            the color of all particles will vary between color bound 0 and color bound 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.ScaleColor0">
            <summary>
            used to scale the particle color; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.ScaleColor1">
            <summary>
            used to scale the particle color; only used if controlled by attachment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.ColorRateOfChange">
            <summary>
            for glow effects that dynamically control particle color; sets rate of change
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.FadingPercentageOfGlow">
            <summary>
            percentage of the glow that is fading at any given time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.ParticleGenerationFreq">
            <summary>
            frequency in Hz that trailing particles are generated:Hz
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Glow.LifetimeOfTrailingParticles">
            <summary>
            seconds that a trailing particle remains in existence:s
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.SequenceIndex2">
            <summary>
            sequence index into the global hud icon bitmap
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.WidthOffset">
            <summary>
            extra spacing beyond bitmap width for text alignment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.HudGlobals.TopOffset">
            <summary>
            The offset values are how much the waypoint rectangle border is offset from the safe camera bounds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.HudGlobals.MotionSensorVelocitySensitivity">
            <summary>
            how fast something moves to show up on the motion sensor
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.HudGlobals.HudButtonIconBlock.SequenceIndex">
            <summary>
            sequence index into the global hud icon bitmap
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.HudGlobals.HudButtonIconBlock.WidthOffset">
            <summary>
            extra spacing beyond bitmap width for text alignment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ItemCollection.ItemPermutation.Weight">
            <summary>
            relatively how likely this item will be chosen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ItemCollection.ItemPermutation.Item">
            <summary>
            which item to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.OcclusionRadius">
            <summary>
            Occlusion factor affects overall lens flare brightness and can also affect scale. Occlusion never affects rotation.
            </summary>
            <summary>
            radius of the square used to test occlusion
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.NearFadeDistance">
            <summary>
            distance at which the lens flare brightness is maximum
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.FarFadeDistance">
            <summary>
            distance at which the lens flare brightness is minimum; set to zero to disable distance fading
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.Bitmap">
            <summary>
            used by reflections
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.RotationFunction">
            <summary>
            Controls how corona rotation is affected by viewer and light angles.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.HorizontalScale">
            <summary>
            amount to stretch the corona along the horizontal axis; 0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.VerticalScale">
            <summary>
            amount to stretch the corona along the vertical axis; 0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.LensFlareReflectionBlock.Position">
            <summary>
            0 is on top of light, 1 is opposite light, 0.5 is the center of the screen, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.LensFlareReflectionBlock.Radius">
            <summary>
            interpolated by light scale
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.LensFlareReflectionBlock.Brightness">
            <summary>
            interpolated by light scale
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.LensFlareReflectionBlock.TintColor">
            <summary>
            Tinting and modulating are not the same; 'tinting' a reflection will color the darker regions but leave the white
            highlights, while 'modulating' will color everything uniformly (as in most games). The tint alpha controls how much the
            reflection is tinted as opposed to modulated (0 is modulated, 1 is tinted). If all components are zero, the reflection is
            fully tinted by the light color.
            </summary>
            <summary>
            if a=r=g=b=0 use light color instead; alpha blends between modulation and tinting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.LensFlareReflectionBlock.ColorLowerBound">
            <summary>
            Causes lens flare reflection to flicker, pulse, or whatever. Animated color modulates tint color, above, while animated
            alpha modulates brightness. Animation is ignored if tint color is BLACK or the animation function is ONE or ZERO.
            </summary>
            <summary>
            if a=r=g=b=0, default to a=r=g=b=1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.LensFlareReflectionBlock.ColorUpperBound">
            <summary>
            if a=r=g=b=0, default to a=r=g=b=1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LensFlare.LensFlareReflectionBlock.AnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.Radius">
            <summary>
            the size and shape of the light
            </summary>
            <summary>
            the radius where illumination is zero. (lens flare only if this is 0)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.RadiusModifer">
            <summary>
            how the radius changes with external scale
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.FalloffAngle">
            <summary>
            the angle at which the light begins to fade.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.CutoffAngle">
            <summary>
            the angle at which the illumination is zero.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.PrimaryCubeMap">
            <summary>
            the gel map tints the light per-pixel of cube map
            </summary>
            <summary>
            used for diffuse and specular light
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.TextureAnimationFunction">
            <summary>
            a function to control texture animation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.TextureAnimationPeriod">
            <summary>
            time between repeats
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.SecondaryCubeMap">
            <summary>
            used for specular light
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.YawFunction">
            <summary>
            a function to control rotation of the gel in yaw
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.YawPeriod">
            <summary>
            time between repeats
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.RollFunction">
            <summary>
            a function to control rotation of the gel in roll
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.RollPeriod">
            <summary>
            time between repeats
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.PitchFunction">
            <summary>
            a function to control rotation of the gel in pitch
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.PitchPeriod">
            <summary>
            time between repeats
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.LensFlare">
            <summary>
            optional lens flare associated with this light
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.Intensity">
            <summary>
            how the light affects the lightmaps (ignored for dynamic lights)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.Duration">
            <summary>
            if the light is created by an effect, it will animate itself as follows
            </summary>
            <summary>
            the light will last this long when created by an effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.FalloffFunction">
            <summary>
            the scale of the light will diminish over time according to this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.FlagsValue.Dynamic">
            <summary>
            dynamically illuminate interiors
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.FlagsValue.NoSpecular">
            <summary>
            for dynamic lights, cast only diffuse light.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.FlagsValue.DonTLightOwnObject">
            <summary>
            for dynamic lights, don't light the object that the light is attached to.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.FlagsValue.SupersizeInFirstPerson">
            <summary>
            for dynamic lights, light every environment surface if this light is on the gun of the current
            window.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.InterpolationFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Light.InterpolationFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Lightning.Count">
            <summary>
            number of overlapping lightning effects to render; 0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Lightning.NearFadeDistance">
            <summary>
            distance at which lightning is at full brightness
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Lightning.FarFadeDistance">
            <summary>
            distance at which lightning is at zero brightness
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Lightning.LightningMarkerBlock.Tint">
            <summary>
            alpha is brightness
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.AttachmentMarker">
            <summary>
            Draws a sequence of glow bitmaps along a line. Can be used for contrail-type effects as well as volumetric lights.
            </summary>
            <summary>
            the marker name that the light volume should be attached to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.NearFadeDistance">
            <summary>
            Fades the effect in and out with distance, viewer angle, and external source.
            </summary>
            <summary>
            distance at which light volume is full brightness
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.FarFadeDistance">
            <summary>
            distance at which light volume is zero brightness
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.PerpendicularBrightnessScale">
            <summary>
            brightness scale when viewed at a 90-degree angle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.ParallelBrightnessScale">
            <summary>
            brightness scale when viewed directly
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.BrightnessScaleSource">
            <summary>
            scales brightness based on external value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.Map">
            <summary>
            Bitmap tag used to draw the light volume, repeated count times. Default is 'tags\rasterizer_textures\glow'. Note that
            sprite plates are not valid for light volumes.
            </summary>
            <summary>
            NOT A SPRITE PLATE
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.Count">
            <summary>
            number of bitmaps to draw (0 causes light volume not to render)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.FrameAnimationSource">
            <summary>
            Frames are descriptions of the light volume at a particular point in time, interpolated by an external source. For
            example, a bolt of energy can be made to stretch out and grow thinner as it is fired from a weapon.
            </summary>
            <summary>
            interpolates between frames based on external value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.LightVolumeFrameBlock.OffsetExponent">
            <summary>
            0 defaults to 1; 1 compresses light near marker, 1 compresses light near far end
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.LightVolumeFrameBlock.Length">
            <summary>
            0 causes light volume not to render
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.LightVolumeFrameBlock.RadiusHither">
            <summary>
            radius near the marker
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.LightVolumeFrameBlock.RadiusYon">
            <summary>
            radius at far end of light volume
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.LightVolumeFrameBlock.RadiusExponent">
            <summary>
            0 defaults to 1; 1 values are more teardrop-shaped, 1 values are more pill-shaped
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.LightVolumeFrameBlock.TintColorHither">
            <summary>
            tint color near the marker (alpha is brightness)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.LightVolumeFrameBlock.TintColorYon">
            <summary>
            tint color at far end of light volume (alpha is brightness)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.LightVolumeFrameBlock.TintColorExponent">
            <summary>
            0 defaults to 1; affects tint color only, not brightness
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.LightVolume.LightVolumeFrameBlock.BrightnessExponent">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Meter.StencilBitmaps">
            <summary>
            two bitmaps specifying the mask and the meter levels
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Meter.SourceBitmap">
            <summary>
            optional bitmap to draw into the unmasked regions of the meter (modulated by the colors below)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Meter.UnmaskDistance">
            <summary>
            fade from fully masked to fully unmasked this distance beyond full (and below empty)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Meter.MaskDistance">
            <summary>
            fade from fully unmasked to fully masked this distance below full (and beyond empty)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Model.BaseMapUScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Model.BaseMapVScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelAnimations.LimpBodyNodeRadius">
            <summary>
            0 uses 0.04 default
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelAnimations.AnimationGraphUnitSeatBlock.AnimationGraphUnitSeatIkPoint.Marker">
            <summary>
            the marker name on the object being attached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelAnimations.AnimationGraphUnitSeatBlock.AnimationGraphUnitSeatIkPoint.AttachToMarker">
            <summary>
            the marker name object (weapon, vehicle, etc.) the above marker is being attached to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelAnimations.AnimationGraphUnitSeatBlock.AnimationGraphWeaponBlock.GripMarker">
            <summary>
            the marker name on the weapon to which the hand is attached (leave blank to use origin)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelAnimations.AnimationGraphUnitSeatBlock.AnimationGraphWeaponBlock.HandMarker">
            <summary>
            the marker name on the unit to which the weapon is attached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelAnimations.AnimationGraphUnitSeatBlock.AnimationGraphWeaponBlock.AnimationGraphUnitSeatIkPoint.Marker">
            <summary>
            the marker name on the object being attached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelAnimations.AnimationGraphUnitSeatBlock.AnimationGraphWeaponBlock.AnimationGraphUnitSeatIkPoint.AttachToMarker">
            <summary>
            the marker name object (weapon, vehicle, etc.) the above marker is being attached to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.IndirectDamageMaterial">
            <summary>
            the material we use when shielding child objects or getting hit by area of effect damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.MaximumBodyVitality">
            <summary>
            the default initial and maximum body vitality of this object
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.BodySystemShock">
            <summary>
            anything that kills us (body depleted) doing more than this amount of damage also destroys us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.FriendlyDamageResistance">
            <summary>
            the fraction of damage caused by friendly units ignored by this object (zero means full damage)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.BodyDamagedThreshold">
            <summary>
            when passing this vitality the 'body damaged' effect, below, is created
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.BodyDestroyedThreshold">
            <summary>
            when passing this vitality (usually negative) the object is deleted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.MaximumShieldVitality">
            <summary>
            the default initial and maximum shield vitality of this object
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.ShieldMaterialType">
            <summary>
            the material type used when projectiles impact the shield (instead of the body)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.ShieldFailureFunction">
            <summary>
            how fast the shield begins to leak
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.ShieldFailureThreshold">
            <summary>
            when the shield begins to leak (0.5 would cause the shield to begin to fail after taking half damage)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.FailingShieldLeakFraction">
            <summary>
            the maximum percent [0,1] damage a failing shield will leak to the body
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.MinimumStunDamage">
            <summary>
            the minimum damage required to stun this object's shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.StunTime">
            <summary>
            the length of time the shields stay stunned (do not recharge) after taking damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.RechargeTime">
            <summary>
            the length of time it would take for the shields to fully recharge after being completely depleted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.DamageMaterialsBlock.ShieldLeakPercentage">
            <summary>
            the percent [0,1] damage the shield always leaks through to the body
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.DamageMaterialsBlock.BodyDamageMultiplier">
            <summary>
            multiplier to body damage against this material (1.0 is normal)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ModelCollisionGeometry.DamageRegionsBlock.DamageThreshold">
            <summary>
            if this region takes this amount of damage, it will be destroyed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.MultiplayerScenarioDescription.ScenarioDescriptionBlock.DescriptiveBitmap">
            <summary>
            these provide the info required by the UI to load a net map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.MultiplayerScenarioDescription.ScenarioDescriptionBlock.ScenarioTagDirectoryPath">
            <summary>
            this is the path to the directory containing the scenario tag file of the same name
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.MinimumSize">
            <summary>
            in the distance, don't get any smaller than this size on the screen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.RadiusAnimation">
            <summary>
            when created, the radius is multiplied by the first number. at the end of the lifetime, the radius is multiplied by the
            second number.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.AnimationRate">
            <summary>
            rate at which the particle animates
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.ContactDeterioration">
            <summary>
            the decrease in the frame rate caused by a collision
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.FadeStartSize">
            <summary>
            begin fading the particle out when it's smaller than this size on the screen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.FadeEndSize">
            <summary>
            kill the particle when it's smaller than this size on the screen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.FirstSequenceIndex">
            <summary>
            the index of the first sequence in the bitmap group used by this particle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.Bitmap1">
            <summary>
            Optional multitextured second map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.UAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.UAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.VAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.VAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.RotationAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.RotationAnimationScale">
            <summary>
            0 defaults to 360
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Particle.FlagsValue.SelfIlluminated">
            <summary>
            don't cast world-lights onto this particle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.PointPhysics">
            <summary>
            These settings affect the behavior of the system's origin.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemPhysicsConstantsBlock.K">
            <summary>
            The meaning of this constant depends on the selected physics creation/update function.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleCreationPhysics">
            <summary>
            This controls the initial placement of particles.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.FlagsValue.RotationalSpritesAnimateSideways">
            <summary>
            if the complex sprite mode is rotational and this flag is set, the sideways sequence is contains an
            animation rather than a set of permutations.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemPhysicsConstantsBlock.K">
            <summary>
            The meaning of this constant depends on the selected physics creation/update function.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeStatesBlock.DurationBounds">
            <summary>
            Time in this state.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeStatesBlock.TransitionTimeBounds">
            <summary>
            Time spent in transition to next state.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeStatesBlock.ScaleMultiplier">
            <summary>
            This value will be multiplied into the scale computed by the particles' state.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeStatesBlock.AnimationRateMultiplier">
            <summary>
            This value will be multiplied into the animation rate computed by the particles' state.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeStatesBlock.RotationRateMultiplier">
            <summary>
            This value will be multiplied into the rotation rate computed by the particles' state.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeStatesBlock.ColorMultiplier">
            <summary>
            This value will be multiplied into the color computed by the particles' state.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeStatesBlock.RadiusMultiplier">
            <summary>
            This value will be multiplied into the radius computed by the type.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeStatesBlock.ParticleCreationPhysics">
            <summary>
            This controls the placement of particles created during this state.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeStatesBlock.ParticleUpdatePhysics">
            <summary>
            This controls the motion of particles during this state.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeStatesBlock.ParticleSystemPhysicsConstantsBlock.K">
            <summary>
            The meaning of this constant depends on the selected physics creation/update function.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.DurationBounds">
            <summary>
            Time in this state.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.TransitionTimeBounds">
            <summary>
            Time spent in transition to next state.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.Scale">
            <summary>
            Apparent size of the particles.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.AnimationRate">
            <summary>
            Rate of sprite animation.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.RotationRate">
            <summary>
            Rate of texture rotation.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.Color1">
            <summary>
            Particle will have a random color in the range determined by these two colors.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.Color2">
            <summary>
            Particle will have a random color in the range determined by these two colors.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.RadiusMultiplier">
            <summary>
            This value will be multiplied into the radius computed by the type.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.Bitmap">
            <summary>
            Optional multitextured second map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.UAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.UAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.VAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.VAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.RotationAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.RotationAnimationScale">
            <summary>
            0 defaults to 360
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ParticleSystem.ParticleSystemTypesBlock.ParticleSystemTypeParticleStatesBlock.ParticleSystemPhysicsConstantsBlock.K">
            <summary>
            The meaning of this constant depends on the selected physics creation/update function.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Physics.Radius">
            <summary>
            positive uses old inferior physics, negative uses new improved physics
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Placeholder.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.PointPhysics.SurfaceFriction">
            <summary>
            when hitting the ground or interior, percentage of velocity lost in one collision
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.PointPhysics.Elasticity">
            <summary>
            0.0 is inelastic collisions (no bounce) 1.0 is perfectly elastic (reflected velocity equals incoming velocity)
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.Gen1.PointPhysics.FlagsValue">
            <summary>
            air        0.0011 (g/mL)
            snow       0.128
            cork       0.24
            cedar      0.43
            oak        0.866
            ice        0.897
            water     
            1.0
            soil       1.1
            cotton     1.491
            dry earth  1.52
            sand       1.7
            granite    2.4
            glass      2.5
            iron       7.65
            steel   
            7.77
            lead       11.37
            uranium    18.74
            gold       19.3
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.PointPhysics.FlagsValue.UsesSimpleWind">
            <summary>
            the wind on this point won't have high-frequency variations
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.PointPhysics.FlagsValue.UsesDampedWind">
            <summary>
            the wind on this point will be artificially slow
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.PointPhysics.FlagsValue.NoGravity">
            <summary>
            the point is not affected by gravity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ArmingTime">
            <summary>
            won't detonate before this time elapses
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.Timer">
            <summary>
            detonation countdown (zero is untimed)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.MinimumVelocity">
            <summary>
            detonates when slowed below this velocity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.MaximumRange">
            <summary>
            detonates after travelling this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AirGravityScale">
            <summary>
            the proportion of normal gravity applied to the projectile when in air.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AirDamageRange">
            <summary>
            the range over which damage is scaled when the projectile is in air.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.WaterGravityScale">
            <summary>
            the proportion of normal gravity applied to the projectile when in water.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.WaterDamageRange">
            <summary>
            the range over which damage is scaled when the projectile is in water.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.InitialVelocity">
            <summary>
            bullet's velocity when inflicting maximum damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.FinalVelocity">
            <summary>
            bullet's velocity when inflicting minimum damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ProjectileMaterialResponseBlock.Response">
            <summary>
            (if the potential result, below, fails to happen)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ProjectileMaterialResponseBlock.AngularNoise">
            <summary>
            the angle of incidence is randomly perturbed by at most this amount to simulate irregularity.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ProjectileMaterialResponseBlock.VelocityNoise">
            <summary>
            the velocity is randomly perturbed by at most this amount to simulate irregularity.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ProjectileMaterialResponseBlock.InitialFriction">
            <summary>
            the fraction of the projectile's velocity lost on penetration
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ProjectileMaterialResponseBlock.MaximumDistance">
            <summary>
            the maximum distance the projectile can travel through on object of this material
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ProjectileMaterialResponseBlock.ParallelFriction">
            <summary>
            the fraction of the projectile's velocity parallel to the surface lost on impact
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Projectile.ProjectileMaterialResponseBlock.PerpendicularFriction">
            <summary>
            the fraction of the projectile's velocity perpendicular to the surface lost on impact
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.CanTUse">
            <summary>
            set me!! me!!!  i do something cool!!!  you'll be happy forever if there this tag reference is filled in!  don't believe
            the lies!!! LIESSSS!!!!!!!!  YESS, MY PRECIOUSSSSS, LIESSSS...
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.FlagsValue.CortanaHack">
            <summary>
            sort cortana in front of other transparent geometry
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.FlagsValue.UseDemoUi">
            <summary>
            uses alternate UI collection for demo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.FlagsValue.Scripted">
            <summary>
            the level script will set this value; the other settings here will be ignored.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioSceneryBlock.DesiredPermutation">
            <summary>
            if non-zero, will try to use model permutations with names that end in that number, e.g. 7 would pick "body-7" and
            "head-7"
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioBipedBlock.DesiredPermutation">
            <summary>
            if non-zero, will try to use model permutations with names that end in that number, e.g. 7 would pick "body-7" and
            "head-7"
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.DesiredPermutation">
            <summary>
            if non-zero, will try to use model permutations with names that end in that number, e.g. 7 would pick "body-7" and
            "head-7"
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerTeamIndex">
            <summary>
            on a multiplayer map, this determines which team the vehicle belongs to for custom vehicle sets.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.SlayerDefault">
            <summary>
            vehicle will spawn when default vehicle set is used in a slayer game
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.CtfDefault">
            <summary>
            vehicle will spawn when default vehicle set is used in a ctf game
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.KingDefault">
            <summary>
            vehicle will spawn when default vehicle set is used in a king game
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.OddballDefault">
            <summary>
            vehicle will spawn when default vehicle set is used in a oddball game
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.Unused">
            <summary>
            unused
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.Unused1">
            <summary>
            unused
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.Unused2">
            <summary>
            unused
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.Unused3">
            <summary>
            unused
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.SlayerAllowed">
            <summary>
            vehicle can spawn in a slayer game
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.CtfAllowed">
            <summary>
            vehicle can spawn in a ctf game
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.KingAllowed">
            <summary>
            vehicle can spawn in a king game
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.OddballAllowed">
            <summary>
            vehicle can spawn in a oddball game
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.Unused4">
            <summary>
            unused
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.Unused5">
            <summary>
            unused
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.Unused6">
            <summary>
            unused
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioVehicleBlock.MultiplayerSpawnFlagsValue.Unused7">
            <summary>
            unused
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioEquipmentBlock.DesiredPermutation">
            <summary>
            if non-zero, will try to use model permutations with names that end in that number, e.g. 7 would pick "body-7" and
            "head-7"
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioWeaponBlock.DesiredPermutation">
            <summary>
            if non-zero, will try to use model permutations with names that end in that number, e.g. 7 would pick "body-7" and
            "head-7"
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioMachineBlock.DesiredPermutation">
            <summary>
            if non-zero, will try to use model permutations with names that end in that number, e.g. 7 would pick "body-7" and
            "head-7"
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioControlBlock.DesiredPermutation">
            <summary>
            if non-zero, will try to use model permutations with names that end in that number, e.g. 7 would pick "body-7" and
            "head-7"
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioLightFixtureBlock.DesiredPermutation">
            <summary>
            if non-zero, will try to use model permutations with names that end in that number, e.g. 7 would pick "body-7" and
            "head-7"
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.ScenarioSoundSceneryBlock.DesiredPermutation">
            <summary>
            if non-zero, will try to use model permutations with names that end in that number, e.g. 7 would pick "body-7" and
            "head-7"
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.ManualBspIndex">
            <summary>
            structure bsp index that this encounter belongs to... ignored unless 'manual bsp index' flag is checked. if this flag is
            not checked, the structure bsp is found automatically (may fail in areas of overlapping geometry)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.RespawnDelay">
            <summary>
            delay between respawning actors in this encounter
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.InitialState">
            <summary>
            state that this actor starts in
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.ReturnState">
            <summary>
            state that this actor will return to when it has nothing to do
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.UniqueLeaderType">
            <summary>
            what kind of leader this squad has (e.g. a sarge for marines) - 'normal' is based on the size of the squad, 'random'
            always creates a leader, or you can specify an individual type
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.NormalDiffCount">
            <summary>
            initial number of actors on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.InsaneDiffCount">
            <summary>
            initial number of actors on insane difficulty (hard difficulty is midway between normal and insane)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.RespawnMinActors">
            <summary>
            minimum number of actors alive at once (will spawn instantly if less than this number)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.RespawnMaxActors">
            <summary>
            maximum number of actors alive at once (never spawns above this number)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.RespawnTotal">
            <summary>
            total number to respawn (zero = infinite)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.RespawnDelay">
            <summary>
            delay between respawning actors in this squad
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.MovePositionsBlock.SequenceId">
            <summary>
            identifies this move position as belonging to a sequence, only actors whose starting locations match this sequence ID can
            use it (zero = no sequence)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.ActorStartingLocationsBlock.SequenceId">
            <summary>
            which move position sequence we can use (zero = no specific sequences)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.ActorStartingLocationsBlock.ReturnState">
            <summary>
            state that this actor will return to when it has nothing to do
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.EncounterBlock.SquadsBlock.ActorStartingLocationsBlock.InitialState">
            <summary>
            state that this actor starts in
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiCommandListBlock.ManualBspIndex">
            <summary>
            structure bsp index that this encounter belongs to... ignored unless 'manual bsp index' flag is checked. if this flag is
            not checked, the structure bsp is found automatically (may fail in areas of overlapping geometry)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiCommandListBlock.FlagsValue.AllowInitiative">
            <summary>
            lets an actor decide to stop following its commands and attack an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiCommandListBlock.FlagsValue.AllowTargeting">
            <summary>
            lets an actor shoot at enemies while following its commands
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiCommandListBlock.FlagsValue.DisableLooking">
            <summary>
            stops an actor from turning, stopping or looking around in response to stimuli received while
            following its commands
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiCommandListBlock.FlagsValue.DisableCommunication">
            <summary>
            stops an actor from communicating while following its commands
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiCommandListBlock.FlagsValue.DisableFallingDamage">
            <summary>
            makes an actor not take any damage from falling while following its commands
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiCommandListBlock.FlagsValue.ManualBspIndex">
            <summary>
            set if the command list is manually attached to a specific bsp
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiAnimationReferenceBlock.AnimationGraph">
            <summary>
            leave this blank to use the unit's normal animation graph
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.TriggerDistance">
            <summary>
            distance the player must enter before the conversation can trigger
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.RunToPlayerDist">
            <summary>
            if the 'involves player' flag is set, when triggered the conversation's participant(s) will run to within this distance
            of the player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.FlagsValue.StopIfDeath">
            <summary>
            this conversation will be aborted if any participant dies
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.FlagsValue.StopIfDamaged">
            <summary>
            an actor will abort this conversation if they are damaged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.FlagsValue.StopIfVisibleEnemy">
            <summary>
            an actor will abort this conversation if they see an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.FlagsValue.StopIfAlertedToEnemy">
            <summary>
            an actor will abort this conversation if they suspect an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.FlagsValue.PlayerMustBeVisible">
            <summary>
            this conversation cannot take place unless the participants can _see_ a nearby player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.FlagsValue.StopOtherActions">
            <summary>
            participants stop doing whatever they were doing in order to perform this conversation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.FlagsValue.KeepTryingToPlay">
            <summary>
            if this conversation fails initially, it will keep testing to see when it can play
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.FlagsValue.PlayerMustBeLooking">
            <summary>
            this conversation will not start until the player is looking at one of the participants
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.AiConversationParticipantBlock.UseThisObject">
            <summary>
            if a unit with this name exists, we try to pick them to start the conversation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.AiConversationParticipantBlock.SetNewName">
            <summary>
            once we pick a unit, we name it this
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.AiConversationParticipantBlock.FlagsValue.Optional">
            <summary>
            the conversation can continue even if nobody for this participant was found
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.AiConversationParticipantBlock.FlagsValue.HasAlternate">
            <summary>
            if nobody for this participant can be found, we use a participant marked as 'is alternate' instead,
            e.g. someone from over the radio
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.AiConversationParticipantBlock.FlagsValue.IsAlternate">
            <summary>
            this participant is only used if some participant in this conversation was marked as 'has alternate'
            could not be found
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenario.AiConversationBlock.AiConversationLineBlock.AddresseeParticipant">
            <summary>
            this field is only used if the addressee type is 'participant'
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ScenarioStructureBsp.VehicleFloor">
            <summary>
            height below which vehicles get pushed up by an unstoppable force
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ScenarioStructureBsp.VehicleCeiling">
            <summary>
            height above which vehicles get pushed down by an unstoppable force
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Scenery.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.DetailLevel">
            <summary>
            affects the density of tesselation (high means slow).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.Power">
            <summary>
            power of emitted light from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.TintColor">
            <summary>
            light passing through this surface (if it's transparent) will be tinted this color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.Flags2">
            <summary>
            Setting true atmospheric fog enables per-pixel atmospheric fog (for models) but disables point/spot lights, planar fog,
            and the ability to control the atmospheric fog density for this shader.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.Type">
            <summary>
            Controls how diffuse maps are combined:
            
            NORMAL:
            Secondary detail map alpha controls blend between primary and secondary
            detail map. Specular mask is alpha of blended primary and secondary detail map alpha multiplied by alpha of micro detail
            map.
            
            BLENDED:
            Base map alpha controls blend between primary and secondary detail map. Specular mask is alpha of blended
            primary and secondary detail map alpha multiplied by alpha of micro detail map.
            
            BLENDED BASE SPECULAR:
            Same as BLENDED,
            except specular mask is alpha is base map times alpha of micro detail map.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.LensFlareSpacing">
            <summary>
            0 places a single lens flare
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.DetailMapFunction">
            <summary>
            affects primary and secondary detail maps
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.PrimaryDetailMapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.SecondaryDetailMapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.MicroDetailMapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.MaterialColor">
            <summary>
            modulates incoming diffuse light, including lightmaps, but excluding self-illumination and specular effects
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.BumpMapScale">
            <summary>
            Perforated (alpha-tested) shaders use alpha in bump map.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.UAnimationFunction">
            <summary>
            Scrolls all 2D maps simultaneously.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.Flags4">
            <summary>
            There are three self-illumination effects which are added together. Each effect has an on color, used when the shader
            is active, and an off color, used when the shader is not active. The self-illumination map is used as follows:
            * RED:
            primary mask
            * GREEN: secondary mask
            * BLUE: plasma mask
            * ALPHA: plasma animation reference
            
            Each effect also has an
            animation function, period and phase, used when the shader is active. The primary and secondary effects simply
            modulate the on color by the animation value to produce an animation color, and then blend between the animation color
            and the off color based on the shader's activation level, and finally modulate by the mask.
            
            The plasma shader compares
            the animation value with the alpha channel of the map (the plasma animation reference) and produces a high value when
            they are similar and a dark value when they are different. This value modulates the plasma on color to produce a plasma
            animation color, and the rest proceeds just like the primary and secondary effects.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.PrimaryAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.SecondaryAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.PlasmaAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.MapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.Flags5">
            <summary>
            Controls dynamic specular highlights. The highlight is modulated by brightness as well as a blend between
            perpendicular color and parallel color.
            
            Set brightness to zero to disable.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.Brightness">
            <summary>
            0 is no specular hilights
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.PerpendicularColor">
            <summary>
            hilight color when viewed perpendicularly
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.ParallelColor">
            <summary>
            hilight color when viewed at a glancing angle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.Flags6">
            <summary>
            Controls environment cube map reflections. The color of the cube map is "tinted" by a blend between perpendicular color
            and parallel color from the SPECULAR PROPERTIES above, and then modulated by a blend between perpendicular brightness
            and parallel brightness.
            
            BUMPED CUBE MAP:
            This type of reflection uses the shader's bump map (if it exists) to affect
            the reflection, as well as the perpendicular and parallel brightness (i.e. the "fresnel" effect).
            
            FLAT CUBE MAP:
            This is
            the fastest type of reflection. The bump map is used to attenuate the fresnel effect, but the reflection image itself is
            not bumped.
            
            Clear reflection cube map or set both perpendicular brightness and parallel brightness to zero to
            disable.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.LightmapBrightnessScale">
            <summary>
            reflection brightness when lightmap brightness is 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.PerpendicularBrightness">
            <summary>
            brightness when viewed perpendicularly
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.ParallelBrightness">
            <summary>
            brightness when viewed at a glancing angle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.FlagsValue.SimpleParameterization">
            <summary>
            lightmap texture parametrization should correspond to diffuse texture parametrization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderEnvironment.FlagsValue.IgnoreNormals">
            <summary>
            light independent of normals (trees)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.DetailLevel">
            <summary>
            affects the density of tesselation (high means slow).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.Power">
            <summary>
            power of emitted light from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.TintColor">
            <summary>
            light passing through this surface (if it's transparent) will be tinted this color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.Flags2">
            <summary>
            Setting true atmospheric fog enables per-pixel atmospheric fog but disables point/spot lights, planar fog, and the
            ability to control the atmospheric fog density for this shader.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.Translucency">
            <summary>
            amount of light that can illuminate the shader from behind
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.ChangeColorSource">
            <summary>
            Change color is used to recolor the diffuse map, it affects pixels based on the BLUE channel of the multipurpose map.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.Flags3">
            <summary>
            Self-illumination adds diffuse light to pixels based on the GREEN channel of the multipurpose map. The external
            self-illumination color referenced by color source is modulated by the self-illumination animation.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.MapUScale">
            <summary>
            Base map alpha is used for alpha-testing.
            
            Multipurpose map is used for the following:
            * RED: specular reflection mask
            (modulates reflections)
            * GREEN: self-illumination mask (adds to diffuse light)
            * BLUE: primary change color mask
            (recolors diffuse map)
            * ALPHA: auxiliary mask
            
            Note that when DXT1 compressed color-key textures are used for the
            multipurpose map (as they should be normally), the alpha channel is 1-bit and any non-zero alpha pixels must have
            zero-color, therefore the secondary change color mask cannot affect pixels already affected by any of the other
            channels.
            
            Detail map affects diffuse map, and optionally affects reflection if detail after reflection flag is set.
            </summary>
            <summary>
            0 defaults to 1; scales all 2D maps simultaneously
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.MapVScale">
            <summary>
            0 defaults to 1; scales all 2D maps simultaneously
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.DetailFunction">
            <summary>
            controls how detail map is applied to diffuse map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.DetailMask">
            <summary>
            controls how detail map is masked
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.DetailMapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.DetailMapVScale">
            <summary>
            0 defaults to 1 (applied on top of detail map scale above)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.UAnimationSource">
            <summary>
            Scrolls all 2D maps simultaneously.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.UAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.UAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.VAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.VAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.RotationAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.RotationAnimationScale">
            <summary>
            0 defaults to 360
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.ReflectionFalloffDistance">
            <summary>
            distance at which the reflection begins to fade out
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.ReflectionCutoffDistance">
            <summary>
            distance at which the reflection fades out entirely (0 means no cutoff)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.PerpendicularBrightness">
            <summary>
            reflection brightness when viewed perpendicularly
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.PerpendicularTintColor">
            <summary>
            reflection tint color when viewed perpendicularly
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.ParallelBrightness">
            <summary>
            reflection brightness when viewed at a glancing angle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.ParallelTintColor">
            <summary>
            reflection tint color when viewed at a glancing angle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.FlagsValue.SimpleParameterization">
            <summary>
            lightmap texture parametrization should correspond to diffuse texture parametrization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderModel.FlagsValue.IgnoreNormals">
            <summary>
            light independent of normals (trees)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.DetailLevel">
            <summary>
            affects the density of tesselation (high means slow).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.Power">
            <summary>
            power of emitted light from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.TintColor">
            <summary>
            light passing through this surface (if it's transparent) will be tinted this color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.FramebufferFadeSource">
            <summary>
            fade is multiplied by this external value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.LensFlareSpacing">
            <summary>
            0 places a single lens flare
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.FlagsValue.SimpleParameterization">
            <summary>
            lightmap texture parametrization should correspond to diffuse texture parametrization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.FlagsValue.IgnoreNormals">
            <summary>
            light independent of normals (trees)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.ShaderTransparentChicagoMapBlock.ColorFunction">
            <summary>
            ignored for last map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.ShaderTransparentChicagoMapBlock.AlphaFunction">
            <summary>
            ignored for last map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.ShaderTransparentChicagoMapBlock.MapUScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.ShaderTransparentChicagoMapBlock.MapVScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.ShaderTransparentChicagoMapBlock.UAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.ShaderTransparentChicagoMapBlock.UAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.ShaderTransparentChicagoMapBlock.VAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.ShaderTransparentChicagoMapBlock.VAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.ShaderTransparentChicagoMapBlock.RotationAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicago.ShaderTransparentChicagoMapBlock.RotationAnimationScale">
            <summary>
            0 defaults to 360
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.DetailLevel">
            <summary>
            affects the density of tesselation (high means slow).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.Power">
            <summary>
            power of emitted light from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.TintColor">
            <summary>
            light passing through this surface (if it's transparent) will be tinted this color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.FramebufferFadeSource">
            <summary>
            fade is multiplied by this external value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.LensFlareSpacing">
            <summary>
            0 places a single lens flare
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.FlagsValue.SimpleParameterization">
            <summary>
            lightmap texture parametrization should correspond to diffuse texture parametrization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.FlagsValue.IgnoreNormals">
            <summary>
            light independent of normals (trees)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.ShaderTransparentChicagoMapBlock.ColorFunction">
            <summary>
            ignored for last map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.ShaderTransparentChicagoMapBlock.AlphaFunction">
            <summary>
            ignored for last map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.ShaderTransparentChicagoMapBlock.MapUScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.ShaderTransparentChicagoMapBlock.MapVScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.ShaderTransparentChicagoMapBlock.UAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.ShaderTransparentChicagoMapBlock.UAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.ShaderTransparentChicagoMapBlock.VAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.ShaderTransparentChicagoMapBlock.VAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.ShaderTransparentChicagoMapBlock.RotationAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentChicagoExtended.ShaderTransparentChicagoMapBlock.RotationAnimationScale">
            <summary>
            0 defaults to 360
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.DetailLevel">
            <summary>
            affects the density of tesselation (high means slow).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.Power">
            <summary>
            power of emitted light from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.TintColor">
            <summary>
            light passing through this surface (if it's transparent) will be tinted this color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.FramebufferFadeSource">
            <summary>
            fade is multiplied by this external value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.LensFlareSpacing">
            <summary>
            0 places a single lens flare
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.FlagsValue.SimpleParameterization">
            <summary>
            lightmap texture parametrization should correspond to diffuse texture parametrization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.FlagsValue.IgnoreNormals">
            <summary>
            light independent of normals (trees)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.ShaderTransparentGenericMapBlock.MapUScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.ShaderTransparentGenericMapBlock.MapVScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.ShaderTransparentGenericMapBlock.UAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.ShaderTransparentGenericMapBlock.UAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.ShaderTransparentGenericMapBlock.VAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.ShaderTransparentGenericMapBlock.VAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.ShaderTransparentGenericMapBlock.RotationAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.ShaderTransparentGenericMapBlock.RotationAnimationScale">
            <summary>
            0 defaults to 360
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.ShaderTransparentGenericStageBlock.Color0Source">
            <summary>
            Constant color 0 is animated in exactly the same way as the self-illumination color of the model shader, except that it
            has an alpha component in addition to the RGB components. Constant color 1 is just a constant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGeneric.ShaderTransparentGenericStageBlock.Color0AnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.DetailLevel">
            <summary>
            affects the density of tesselation (high means slow).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.Power">
            <summary>
            power of emitted light from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.TintColor">
            <summary>
            light passing through this surface (if it's transparent) will be tinted this color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.Padding3">
            <summary>
            Background pixels are multiplied by the tint map and constant tint color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.BackgroundTintMapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.Padding5">
            <summary>
            Reflection maps are multiplied by fresnel terms (glancing angles cause reflections to disappear) and then added to the
            background. The primary reflection map is textured normally, while the secondary reflection map is magnified.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.Padding7">
            <summary>
            Diffuse lights are accumulated in monochrome and then alpha-blended with diffuse map and diffuse detail map. The color is
            determined by double-multiplying both maps and multiplying with the accumulated light, the result being alpha-blended
            into the framebuffer. The opacity is determined by multiplying both map's alpha channels. Since this effect is
            alpha-blended, it covers up tinting and reflection on pixels with high opacity.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.DiffuseMapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.DiffuseDetailMapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.Padding9">
            <summary>
            Specular lights are accumulated in monochrome and then alpha-blended with diffuse map and diffuse detail map. The color
            is determined by double-multiplying both maps and multiplying with the accumulated light, the result being alpha-blended
            into the framebuffer. The opacity is determined by multiplying both map's alpha channels. Since this effect is
            alpha-blended, it covers up tinting, reflection and diffuse texture on pixels with high opacity.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.SpecularMapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.SpecularDetailMapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.FlagsValue.SimpleParameterization">
            <summary>
            lightmap texture parametrization should correspond to diffuse texture parametrization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentGlass.FlagsValue.IgnoreNormals">
            <summary>
            light independent of normals (trees)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.DetailLevel">
            <summary>
            affects the density of tesselation (high means slow).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.Power">
            <summary>
            power of emitted light from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.TintColor">
            <summary>
            light passing through this surface (if it's transparent) will be tinted this color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.TintColor1">
            <summary>
            modulates framebuffer color unless map alpha is zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.MeterTransparency">
            <summary>
            used only when 'tint mode-2' is set
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.BackgroundTransparency">
            <summary>
            used only when 'tint mode-2' is set
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.MeterBrightnessSource">
            <summary>
            overall meter brightness (default is 1)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.FlashBrightnessSource">
            <summary>
            brightness of flash (default is 1)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.ValueSource">
            <summary>
            position of flash leading edge (default is 1)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.GradientSource">
            <summary>
            high color leading edge (default is 1)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.FlashExtensionSource">
            <summary>
            position of flash extension leading edge (default is 1)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.FlagsValue.SimpleParameterization">
            <summary>
            lightmap texture parametrization should correspond to diffuse texture parametrization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentMeter.FlagsValue.IgnoreNormals">
            <summary>
            light independent of normals (trees)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.DetailLevel">
            <summary>
            affects the density of tesselation (high means slow).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.Power">
            <summary>
            power of emitted light from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.TintColor">
            <summary>
            light passing through this surface (if it's transparent) will be tinted this color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.IntensitySource">
            <summary>
            Controls how bright the plasma is.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.IntensityExponent">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.OffsetSource">
            <summary>
            Controls how far the plasma energy extends from the model geometry.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.OffsetExponent">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.PerpendicularBrightness">
            <summary>
            Controls the tint color and Fresnel brightness effects.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.TintColorSource">
            <summary>
            modulates perpendicular and parallel colors above
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.FlagsValue.SimpleParameterization">
            <summary>
            lightmap texture parametrization should correspond to diffuse texture parametrization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentPlasma.FlagsValue.IgnoreNormals">
            <summary>
            light independent of normals (trees)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.DetailLevel">
            <summary>
            affects the density of tesselation (high means slow).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.Power">
            <summary>
            power of emitted light from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.TintColor">
            <summary>
            light passing through this surface (if it's transparent) will be tinted this color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.Flags2">
            <summary>
            Base map color modulates the background, while base map alpha modulates reflection brightness. Both of these effects can
            be independently enables and disabled. Note that if the base map alpha modulates reflection flag is not set, then the
            perpendicular/parallel brightness has no effect (but the perpendicular/parallel tint color DOES has an effect).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.BaseMap">
            <summary>
            controls reflection brightness and background tint
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.ViewParallelBrightness">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.RippleScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.RippleMipmapLevels">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.RippleMipmapFadeFactor">
            <summary>
            flatness of last mipmap
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.FlagsValue.SimpleParameterization">
            <summary>
            lightmap texture parametrization should correspond to diffuse texture parametrization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.FlagsValue.IgnoreNormals">
            <summary>
            light independent of normals (trees)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.ShaderTransparentWaterRippleBlock.ContributionFactor">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.ShaderTransparentWaterRippleBlock.MapRepeats">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.ShaderTransparentWater.ShaderTransparentWaterRippleBlock.MapIndex">
            <summary>
            index into ripple maps
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.IndoorAmbientRadiosityColor">
            <summary>
            the indoor ambient light color
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.IndoorAmbientRadiosityPower">
            <summary>
            the indoor ambient light power from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.OutdoorAmbientRadiosityColor">
            <summary>
            the outdoor ambient light color
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.OutdoorAmbientRadiosityPower">
            <summary>
            the outdoor ambient light power from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.OutdoorFogMaximumDensity">
            <summary>
            density at opaque distance - 0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.OutdoorFogStartDistance">
            <summary>
            below this distance there is no fog
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.OutdoorFogOpaqueDistance">
            <summary>
            beyond this distance surfaces are completely fogged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.IndoorFogMaximumDensity">
            <summary>
            density at opaque distance - 0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.IndoorFogStartDistance">
            <summary>
            below this distance there is no fog
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.IndoorFogOpaqueDistance">
            <summary>
            beyond this distance surfaces are completely fogged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.IndoorFogScreen">
            <summary>
            used for FOG SCREEN only; not used for planar fog
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.SkyShaderFunctionBlock.GlobalFunctionName">
            <summary>
            the global function that controls this shader value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.SkyAnimationBlock.AnimationIndex">
            <summary>
            the index of the animation in the animation graph
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.SkyLightBlock.LensFlareMarkerName">
            <summary>
            the lens flare for this light will be attached to the specified marker in the model
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.SkyLightBlock.Flags">
            <summary>
            these parameters control how the light illuminates the world.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.SkyLightBlock.Color">
            <summary>
            light color
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.SkyLightBlock.Power">
            <summary>
            light power from 0 to infinity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.SkyLightBlock.TestDistance">
            <summary>
            the length of the ray for shadow testing.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.SkyLightBlock.Direction">
            <summary>
            direction toward the light source in the sky.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sky.SkyLightBlock.Diameter">
            <summary>
            angular diameter of the light source in the sky.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.MinimumDistance">
            <summary>
            the distance below which this sound no longer gets louder
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.MaximumDistance">
            <summary>
            the distance beyond which this sound is no longer audible
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SkipFraction">
            <summary>
            fraction of requests to play this sound that will be ignored (0 means always play.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.RandomPitchBounds">
            <summary>
            these settings control random variation of volume and pitch.
            </summary>
            <summary>
            the sound's pitch will be randomly selected and will be in this range. (1.0 is the recorded pitch.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.InnerConeAngle">
            <summary>
            within the cone defined by this angle and the sound's direction, the sound plays with a gain of 1.0.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.OuterConeAngle">
            <summary>
            outside the cone defined by this angle and the sound's direction, the sound plays with a gain of OUTER CONE GAIN. (0
            means the sound does not attenuate with direction.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.OuterConeGain">
            <summary>
            the gain to use when the sound is directed away from the listener
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SkipFractionModifier">
            <summary>
            as the sound's input scale changes from zero to one, these modifiers move between the two values specified here. the
            sound will play using the current scale modifier multiplied by the value specified above. (0 values are ignored.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SkipFractionModifier1">
            <summary>
            as the sound's input scale changes from zero to one, these modifiers move between the two values specified here. the
            sound will play using the current scale modifier multiplied by the value specified above. (0 values are ignored.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.PromotionCount">
            <summary>
            when there are this many instances of the sound, promote to the new sound.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.PitchRanges">
            <summary>
            pitch ranges allow multiple samples to represent the same sound at different pitches
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SoundPitchRangeBlock.Name">
            <summary>
            the name of the imported pitch range directory
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SoundPitchRangeBlock.NaturalPitch">
            <summary>
            these settings control what pitches this set of samples represents. if there is only one pitch range, all three values
            are ignored.
            </summary>
            <summary>
            the apparent pitch when these samples are played at their recorded pitch.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SoundPitchRangeBlock.BendBounds">
            <summary>
            the range of pitches that will be represented using this sample. this should always contain the natural pitch.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SoundPitchRangeBlock.Permutations">
            <summary>
            permutations represent equivalent variations of this sound.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SoundPitchRangeBlock.SoundPermutationsBlock.Name">
            <summary>
            name of the file from which this sample was imported
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SoundPitchRangeBlock.SoundPermutationsBlock.SkipFraction">
            <summary>
            fraction of requests to play this permutation that are ignored (a different permutation is selected.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SoundPitchRangeBlock.SoundPermutationsBlock.Gain">
            <summary>
            fraction of recorded volume to play at.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Sound.SoundPitchRangeBlock.SoundPermutationsBlock.Samples">
            <summary>
            sampled sound data
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundEnvironment.Priority">
            <summary>
            when multiple listeners are in different sound environments in split screen, the combined environment will be the one
            with the highest priority.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundEnvironment.RoomIntensity">
            <summary>
            intensity of the room effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundEnvironment.RoomIntensityHf">
            <summary>
            intensity of the room effect above the reference high frequency
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundEnvironment.RoomRolloff0To10">
            <summary>
            how quickly the room effect rolls off, from 0.0 to 10.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundEnvironment.HfReference20To20000">
            <summary>
            for hf values, what frequency defines hf, from 20 to 20,000
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.DetailSoundPeriod">
            <summary>
            as the sound's input scale changes from zero to one, these modifiers move between the two values specified here. the
            sound will play using the current scale modifier multiplied by the value specified below. (0 values are ignored.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.DetailSoundPeriod1">
            <summary>
            as the sound's input scale changes from zero to one, these modifiers move between the two values specified here. the
            sound will play using the current scale modifier multiplied by the value specified below. (0 values are ignored.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.Tracks">
            <summary>
            tracks play in parallel and loop continuously for the duration of the looping sound.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.DetailSounds">
            <summary>
            detail sounds play at random throughout the duration of the looping sound.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.FlagsValue.DeafeningToAis">
            <summary>
            when used as a background stereo track, causes nearby AIs to be unable to hear
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.FlagsValue.NotALoop">
            <summary>
            this is a collection of permutations strung together that should play once then stop.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.FlagsValue.StopsMusic">
            <summary>
            all other music loops will stop when this one starts.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.LoopingSoundTrackBlock.FlagsValue.FadeInAtStart">
            <summary>
            the loop sound should fade in while the start sound is playing.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.LoopingSoundTrackBlock.FlagsValue.FadeOutAtStop">
            <summary>
            the loop sound should fade out while the stop sound is playing.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.LoopingSoundTrackBlock.FlagsValue.FadeInAlternate">
            <summary>
            when the sound changes to the alternate version,  .
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.LoopingSoundDetailBlock.RandomPeriodBounds">
            <summary>
            the time between successive playings of this sound will be randomly selected from this range.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.LoopingSoundDetailBlock.YawBounds">
            <summary>
            if the sound specified above is not stereo it will be randomly spatialized according to the following constraints. if
            both lower and upper bounds are zero for any of the following fields, the sound's position will be randomly selected from
            all possible directions or distances.
            </summary>
            <summary>
            the sound's position along the horizon will be randomly selected from this range.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.LoopingSoundDetailBlock.PitchBounds">
            <summary>
            the sound's position above (positive values) or below (negative values) the horizon will be randomly selected from this
            range.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundLooping.LoopingSoundDetailBlock.DistanceBounds">
            <summary>
            the sound's distance (from its spatialized looping sound or from the listener if the looping sound is stereo) will be
            randomly selected from this range.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.SoundScenery.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.MillisecondsToAutoClose">
            <summary>
            =0 to never auto-close
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.MillisecondsAutoCloseFadeTime">
            <summary>
            = 0 for immediate close
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.GameDataInputs">
            <summary>
            These functions use current game data to modify the appearance of
            the widget. These functions are called every time the
            widget is
            rendered.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.EventHandlers">
            <summary>
            These allow actions to be tied to certain ui events.
            The event handler is run every time the widget receives the
            specified event.
            By default, the 'back' and 'B' buttons will take you to the previous screen.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.SearchAndReplaceFunctions">
            <summary>
            These are used to run a search-and-replace on the specified
            word in the text-box text, replacing all occurrences of the
            word
            with the output of the replace-function. These are invoked each
            time the text box is rendered (after any game data
            input functions
            have been run). The searching is case-sensitive.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.TextLabelUnicodeStringsList">
            <summary>
            parameters specific to text box widgets
            NOTE: the string list tag can also be used for lists whose items come from a
            string list tag
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.StringListIndex">
            <summary>
            blah blah blah
            </summary>
            <summary>
            default is 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.HorizOffset">
            <summary>
            offsets text position in its bounding area
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.VertOffset">
            <summary>
            offsets the text position in its bounding area
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.Padding3">
            <summary>
            These options affect list items for both spinner and column lists
            * child widgets are used to define the visible list
            items
            * for lists with code-generated list items, the child widgets are used
              as templated for visible list item
            placement
            IMPORTANT: for list widgets, the ONLY thing you can have as child widgets are the list item widgets!
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.ListHeaderBitmap">
            <summary>
            parameters specific to spinner list widgets
            child widgets are the list items
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.ExtendedDescriptionWidget">
            <summary>
            parameters specific to column list widgets
            child widgets are the list items
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.ConditionalWidgets">
            <summary>
            use this to attach widgets that are loaded only
            if some internal criteria is met while processing a widget event
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.ChildWidgets">
            <summary>
            use this to attach widgets that are loaded as 'children'
            of this widget (children are always loaded as part of the parent
            widget)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UiWidgetDefinition.GameDataInputReferencesBlock.FunctionValue.MpSetTextbox">
            <summary>
            of players
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.ValueScale">
            <summary>
            used for non-integral values, i.e. health and shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.ValueScale1">
            <summary>
            used for non-integral values, i.e. health and shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.AnchorOffset7">
            <summary>
            The blips use this as a reference point
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.GlobalHudMultitextureOverlayDefinition._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryPanelBlock.ValueScale">
            <summary>
            used for non-integral values, i.e. health and shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.RiderDamageFraction">
            <summary>
            what percent damage applied to us gets applied to our children (i.e., riders)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DistanceOfEvadeAnim">
            <summary>
            this must be set to tell the AI how far it should expect our evade animation to move us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DistanceOfDiveAnim">
            <summary>
            this must be set to tell the AI how far it should expect our dive animation to move us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.StunnedMovementThreshold">
            <summary>
            if we take this much damage in a short space of time we will play our 'stunned movement' animations
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.SpawnedActor">
            <summary>
            actor variant which we spawn when we are destroyed or self-destruct
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.SpawnedActorCount">
            <summary>
            number of actors which we spawn
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.SpawnedVelocity">
            <summary>
            velocity at which we throw spawned actors
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AiVehicleRadius">
            <summary>
            radius around this unit that the AI tries to avoid when entering it as a vehicle (zero = use bounding sphere radius)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AiDangerRadius">
            <summary>
            danger radius around this unit that the AI tries to avoid
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Vehicle.DialogueVariantBlock.VariantNumber">
            <summary>
            variant number to use this dialogue with (must match the suffix in the permutations on the unit's model)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.VirtualKeyboard.VirtualKeyBlock.LowercaseCharacter">
            <summary>
            enter unicode character values as integer numbers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.RenderBoundingRadius">
            <summary>
            if set, this radius is used to determine if the object is visible. set it for the pelican.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.MessageIndex">
            <summary>
            This sets which string from tags\ui\hud\hud_item_messages.unicode_string_list to display.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.Flags2">
            <summary>
            All weapons should have 'primary trigger' and 'secondary trigger' markers as appropriate.
            Blurred permutations are called
            '$primary-blur' and '$secondary-blur'.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.Label">
            <summary>
            the string used to match this weapon to an animation mode in the unit carrying it
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.MaximumAlternateShotsLoaded">
            <summary>
            if the second trigger loads alternate ammunition, this is the maximum number of shots that can be loaded at a time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.HeatRecoveryThreshold">
            <summary>
            the heat value a weapon must return to before leaving the overheated state, once it has become overheated in the first
            place
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.OverheatedThreshold">
            <summary>
            the heat value over which a weapon first becomes overheated (should be greater than the heat recovery threshold)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.HeatDetonationThreshold">
            <summary>
            the heat value above which the weapon has a chance of exploding each time it is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.HeatDetonationFraction">
            <summary>
            the percent chance (between 0.0 and 1.0) the weapon will explode when fired over the heat detonation threshold
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.HeatLossPerSecond">
            <summary>
            the amount of heat lost each second when the weapon is not being fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.HeatIllumination">
            <summary>
            the amount of illumination given off when the weapon is overheated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ActorFiringParameters">
            <summary>
            an optional actor variant that specifies the burst geometry and firing patterns to be used with this weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.NearReticleRange">
            <summary>
            the range at which the closer of the two static target reticles will be drawn
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.FarReticleRange">
            <summary>
            the range at which the farther of the two static target reticles will be drawn
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.IntersectionReticleRange">
            <summary>
            the maximum range at which the dynamic target reticle will be drawn
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.MagnificationLevels">
            <summary>
            the number of magnification levels this weapon allows
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AutoaimAngle">
            <summary>
            the maximum angle that autoaim works at full strength
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AutoaimRange">
            <summary>
            the maximum distance that autoaim works at full strength
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.MagnetismAngle">
            <summary>
            the maximum angle that magnetism works at full strength
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.MagnetismRange">
            <summary>
            the maximum distance that magnetism works at full strength
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.DeviationAngle">
            <summary>
            the maximum angle that a projectile is allowed to deviate from the gun barrel
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ForwardMovementPenalty">
            <summary>
            percent slowdown to forward movement for units carrying this weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.SidewaysMovementPenalty">
            <summary>
            percent slowdown to sideways and backward movement for units carrying this weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.MinimumTargetRange">
            <summary>
            minimum range that actors using this weapon will try and target stuff at
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.LookingTimeModifier">
            <summary>
            how much faster actors look around idly using this weapon (zero is unchanged)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AgeHeatRecoveryPenalty">
            <summary>
            how much the weapon's heat recovery is penalized as it ages
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AgeRateOfFirePenalty">
            <summary>
            how much the weapon's rate of fire is penalized as it ages
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AgeMisfireStart">
            <summary>
            the age threshold when the weapon begins to misfire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AgeMisfireChance">
            <summary>
            at age 1.0, the misfire chance per shot
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ActiveCamoDing">
            <summary>
            how much to decrease active camo when a round is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ActiveCamoRegrowthRate">
            <summary>
            how fast to increase active camo (per tick) when a round is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.AInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.BInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.BInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.BInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.BInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.BInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.BInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.BInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.BInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.CInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.CInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.CInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.CInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.CInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.CInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.CInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.CInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.DInValue.Region">
            <summary>
            00 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.DInValue.Region1">
            <summary>
            01 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.DInValue.Region2">
            <summary>
            02 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.DInValue.Region3">
            <summary>
            03 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.DInValue.Region4">
            <summary>
            04 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.DInValue.Region5">
            <summary>
            05 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.DInValue.Region6">
            <summary>
            06 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.DInValue.Region7">
            <summary>
            07 damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.Period">
            <summary>
            this is the period for the above function (lower values make the function oscillate quickly, higher values make it
            oscillate slowly)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.ScalePeriodBy">
            <summary>
            multiply this function by the above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.ScaleFunctionBy">
            <summary>
            multiply this function by the result of the above function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.WobbleFunction">
            <summary>
            the curve used for the wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.WobblePeriod">
            <summary>
            the length of time it takes for the magnitude of this function to complete a wobble
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.WobbleMagnitude">
            <summary>
            the amount of random wobble in the magnitude
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.SquareWaveThreshold">
            <summary>
            if non-zero, all values above the square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.StepCount">
            <summary>
            the number of discrete values to snap to (e.g., a step count of 5 would snap the function to 0.00,0.25,0.50,0.75 or 1.00)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.SawtoothCount">
            <summary>
            the number of times this function should repeat (e.g., a sawtooth count of 5 would give the function a value of 1.0 at
            each of 0.25,0.50,0.75 as well as at 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.Add">
            <summary>
            add this function to the final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.ScaleResultBy">
            <summary>
            multiply this function (from a weapon, vehicle, etc.) final result of all of the above math
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.BoundsMode">
            <summary>
            controls how the bounds, below, are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.ScaleBy">
            <summary>
            applied before clip, ignored if zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectChangeColors.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.ObjectChangeColors.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.MagazinesBlock.ReloadTime">
            <summary>
            the length of time it takes to load a single magazine into the weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.MagazinesBlock.ChamberTime">
            <summary>
            the length of time it takes to chamber the next round
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.RoundsPerSecond">
            <summary>
            the number of firing effects created per second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.AccelerationTime">
            <summary>
            the continuous firing time it takes for the weapon to achieve its final rounds per second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.DecelerationTime">
            <summary>
            the continuous idle time it takes for the weapon to return from its final rounds per second to its initial
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.BlurredRateOfFire">
            <summary>
            a percentage between 0 and 1 which controls how soon in its firing animation the weapon blurs
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.Magazine">
            <summary>
            the magazine from which this trigger draws its ammunition
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.RoundsPerShot">
            <summary>
            the number of rounds expended to create a single firing effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.MinimumRoundsLoaded">
            <summary>
            the minimum number of rounds necessary to fire the weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.RoundsBetweenTracers">
            <summary>
            the number of non-tracer rounds fired between tracers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FiringNoise">
            <summary>
            how loud this weapon appears to the AI
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.Error">
            <summary>
            the accuracy (between 0.0 and 1.0) of the weapon during firing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.AccelerationTime1">
            <summary>
            the continuous firing time it takes for the weapon to achieve its final error
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.DecelerationTime1">
            <summary>
            the continuous idle time it takes for the weapon to return to its initial error
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.ChargingTime">
            <summary>
            the amount of time it takes for this trigger to become fully charged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.ChargedTime">
            <summary>
            the amount of time this trigger can be charged before becoming overcharged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.ChargedIllumination">
            <summary>
            the amount of illumination given off when the weapon is fully charged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.SpewTime">
            <summary>
            length of time the weapon will spew (fire continuously) while discharging
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.ChargingEffect">
            <summary>
            the charging effect is created once when the trigger begins to charge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FirstPersonOffset">
            <summary>
            +x is forward, +z is up, +y is left
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.EjectionPortRecoveryTime">
            <summary>
            the amount of time (in seconds) it takes for the ejection port to transition from 1.0 (open) to 0.0 (closed) after a shot
            has been fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.IlluminationRecoveryTime">
            <summary>
            the amount of time (in seconds) it takes the illumination function to transition from 1.0 (bright) to 0.0 (dark) after a
            shot has been fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.HeatGeneratedPerRound">
            <summary>
            the amount of heat generated each time the trigger is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.AgeGeneratedPerRound">
            <summary>
            the amount the weapon ages each time the trigger is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.OverloadTime">
            <summary>
            the next trigger fires this often while holding down this trigger
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FiringEffects">
            <summary>
            firing effects determine what happens when this trigger is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FlagsValue.TracksFiredProjectile">
            <summary>
            poo poo ca ca pee pee
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FlagsValue.RandomFiringEffects">
            <summary>
            rather than being chosen sequentially, firing effects are picked randomly
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FlagsValue.CanFireWithPartialAmmo">
            <summary>
            allows a weapon to be fired as long as there is a non-zero amount of ammunition loaded
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FlagsValue.DoesNotRepeatAutomatically">
            <summary>
            once fired, this trigger must be released and pressed to fire again
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FlagsValue.LocksInOnOffState">
            <summary>
            once depressed, this trigger must be released and pressed again to turn it off (and likewise to turn
            it back on)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FlagsValue.ProjectilesUseWeaponOrigin">
            <summary>
            instead of coming out of the magic first person camera origin, the projectiles for this weapon
            actually come out of the gun
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FlagsValue.SticksWhenDropped">
            <summary>
            if this trigger is pressed when its owner drops the weapon (for whatever reason) this trigger stays
            down
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FlagsValue.EjectsDuringChamber">
            <summary>
            this trigger's ejection port is started during the key frame of its chamber animation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.FlagsValue.ProjectileVectorCannotBeAdjusted">
            <summary>
            projectiles fired by this weapon cannot have their direction adjusted by the AI to hit the target
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.TriggerFiringEffectBlock.ShotCountLowerBound">
            <summary>
            the minimum number of times this firing effect will be used, once it has been chosen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.TriggerFiringEffectBlock.ShotCountUpperBound">
            <summary>
            the maximum number of times this firing effect will be used, once it has been chosen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.TriggerFiringEffectBlock.FiringEffect">
            <summary>
            this effect is used when the weapon is loaded and fired normally
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.TriggerFiringEffectBlock.MisfireEffect">
            <summary>
            this effect is used when the weapon is loaded but fired while overheated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.TriggerFiringEffectBlock.EmptyEffect">
            <summary>
            this effect is used when the weapon is not loaded
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.TriggerFiringEffectBlock.FiringDamage">
            <summary>
            this effect is used when the weapon is loaded and fired normally
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.TriggerFiringEffectBlock.MisfireDamage">
            <summary>
            this effect is used when the weapon is loaded but fired while overheated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Weapon.TriggersBlock.TriggerFiringEffectBlock.EmptyDamage">
            <summary>
            this effect is used when the weapon is not loaded
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.Crosshairs">
            <summary>
            Crosshairs always go in the center of the screen.
            Crosshairs can be attached to one of four different states:
            
            * Aim:
            Default crosshair. Frame 0 is the default state, frame 1 is the auto-aim state (frame rate ignored)
            * Zoom: Zoom overlay.
            Each zoom level has a corresponding frame (frame rate ignored)
            * Charge: Charging overlay. If you wish to display an
            animation for charging, put it here.
            * Flash: Similar to charging, but for low ammo/batter/heat states
            * Reload/Overheat:
            Similar to charging, but for reloading/overheating
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.SequenceIndex">
            <summary>
            sequence index into the global hud icon bitmap
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WidthOffset">
            <summary>
            extra spacing beyond bitmap width for text alignment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.WeaponHudMeterBlock.ValueScale">
            <summary>
            used for non-integral values, i.e. health and shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.GlobalHudScreenEffectDefinition.Flags">
            <summary>
            Mask bitmap overlay. Use either a 2D bitmap or an interface bitmap.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.GlobalHudScreenEffectDefinition.Flags1">
            <summary>
            Warp effect like in 'Pitch-Black', sort of.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.GlobalHudScreenEffectDefinition.Flags2">
            <summary>
            Real-time gamma correction to make dark objects appear brighter.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeaponHudInterface.GlobalHudScreenEffectDefinition.Flags3">
            <summary>
            Real-time monochromatic color filter.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.FadeInStartDistance">
            <summary>
            Particles begin to fade into visibility beyond this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.FadeInEndDistance">
            <summary>
            Particles become fully visible beyond this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.FadeOutStartDistance">
            <summary>
            Particles begin to fade out of visibility beyond this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.FadeOutEndDistance">
            <summary>
            Particles become fully invisible beyond this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.FadeInStartHeight">
            <summary>
            Particles begin to fade into visibility above this height
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.FadeInEndHeight">
            <summary>
            Particles become fully visible above this height
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.FadeOutStartHeight">
            <summary>
            Particles begin to fade out of visibility above this height
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.FadeOutEndHeight">
            <summary>
            Particles become fully invisible above this height
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.RenderDirectionSource">
            <summary>
            Render modes that depend on an direction will use this vector.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.Bitmap">
            <summary>
            Optional multitextured second map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.UAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.UAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.VAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.VAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.RotationAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.WeatherParticleSystem.WeatherParticleTypeBlock.RotationAnimationScale">
            <summary>
            0 defaults to 360
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Wind.Velocity">
            <summary>
            the wind magnitude in the weather region scales the wind between these bounds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen1.Wind.VariationArea">
            <summary>
            the wind direction varies inside a box defined by these angles on either side of the direction from the weather region.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.GlanceBehavior">
            <summary>
            how does the speaker of this vocalization direct his gaze?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.GlanceRecipientBehavior">
            <summary>
            how does someone who hears me behave?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.SoundRepetitionDelay">
            <summary>
            Minimum delay time between playing the same permutation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.AllowableQueueDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.PreVocDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.NotificationDelay">
            <summary>
            How long into the vocalization the AI should be notified
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.PostVocDelay">
            <summary>
            How long speech is suppressed in the speaking unit after vocalizing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.RepeatDelay">
            <summary>
            How long before the same vocalization can be repeated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.Weight">
            <summary>
            Inherent weight of this vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.SpeakerFreezeTime">
            <summary>
            speaker won't move for the given amount of time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.ListenerFreezeTime">
            <summary>
            listener won't move for the given amount of time (from start of vocalization)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.GlanceBehavior">
            <summary>
            how does the speaker of this vocalization direct his gaze?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.GlanceRecipientBehavior">
            <summary>
            how does someone who hears me behave?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.SoundRepetitionDelay">
            <summary>
            Minimum delay time between playing the same permutation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.AllowableQueueDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.PreVocDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.NotificationDelay">
            <summary>
            How long into the vocalization the AI should be notified
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.PostVocDelay">
            <summary>
            How long speech is suppressed in the speaking unit after vocalizing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.RepeatDelay">
            <summary>
            How long before the same vocalization can be repeated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.Weight">
            <summary>
            Inherent weight of this vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.SpeakerFreezeTime">
            <summary>
            speaker won't move for the given amount of time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.ListenerFreezeTime">
            <summary>
            listener won't move for the given amount of time (from start of vocalization)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.GlanceBehavior">
            <summary>
            how does the speaker of this vocalization direct his gaze?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.GlanceRecipientBehavior">
            <summary>
            how does someone who hears me behave?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.SoundRepetitionDelay">
            <summary>
            Minimum delay time between playing the same permutation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.AllowableQueueDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.PreVocDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.NotificationDelay">
            <summary>
            How long into the vocalization the AI should be notified
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.PostVocDelay">
            <summary>
            How long speech is suppressed in the speaking unit after vocalizing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.RepeatDelay">
            <summary>
            How long before the same vocalization can be repeated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.Weight">
            <summary>
            Inherent weight of this vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.SpeakerFreezeTime">
            <summary>
            speaker won't move for the given amount of time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.ListenerFreezeTime">
            <summary>
            listener won't move for the given amount of time (from start of vocalization)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.GlanceBehavior">
            <summary>
            how does the speaker of this vocalization direct his gaze?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.GlanceRecipientBehavior">
            <summary>
            how does someone who hears me behave?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.SoundRepetitionDelay">
            <summary>
            Minimum delay time between playing the same permutation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.AllowableQueueDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.PreVocDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.NotificationDelay">
            <summary>
            How long into the vocalization the AI should be notified
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.PostVocDelay">
            <summary>
            How long speech is suppressed in the speaking unit after vocalizing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.RepeatDelay">
            <summary>
            How long before the same vocalization can be repeated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.Weight">
            <summary>
            Inherent weight of this vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.SpeakerFreezeTime">
            <summary>
            speaker won't move for the given amount of time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.ListenerFreezeTime">
            <summary>
            listener won't move for the given amount of time (from start of vocalization)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.GlanceBehavior">
            <summary>
            how does the speaker of this vocalization direct his gaze?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.GlanceRecipientBehavior">
            <summary>
            how does someone who hears me behave?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.SoundRepetitionDelay">
            <summary>
            Minimum delay time between playing the same permutation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.AllowableQueueDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.PreVocDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.NotificationDelay">
            <summary>
            How long into the vocalization the AI should be notified
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.PostVocDelay">
            <summary>
            How long speech is suppressed in the speaking unit after vocalizing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.RepeatDelay">
            <summary>
            How long before the same vocalization can be repeated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.Weight">
            <summary>
            Inherent weight of this vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.SpeakerFreezeTime">
            <summary>
            speaker won't move for the given amount of time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.ListenerFreezeTime">
            <summary>
            listener won't move for the given amount of time (from start of vocalization)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.GlanceBehavior">
            <summary>
            how does the speaker of this vocalization direct his gaze?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.GlanceRecipientBehavior">
            <summary>
            how does someone who hears me behave?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.SoundRepetitionDelay">
            <summary>
            Minimum delay time between playing the same permutation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.AllowableQueueDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.PreVocDelay">
            <summary>
            How long to wait to actually start the vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.NotificationDelay">
            <summary>
            How long into the vocalization the AI should be notified
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.PostVocDelay">
            <summary>
            How long speech is suppressed in the speaking unit after vocalizing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.RepeatDelay">
            <summary>
            How long before the same vocalization can be repeated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.Weight">
            <summary>
            Inherent weight of this vocalization
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.SpeakerFreezeTime">
            <summary>
            speaker won't move for the given amount of time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationDefinitionsBlock0.VocalizationDefinitionsBlock1.VocalizationDefinitionsBlock2.VocalizationDefinitionsBlock3.VocalizationDefinitionsBlock4.VocalizationDefinitionsBlock5.ListenerFreezeTime">
            <summary>
            listener won't move for the given amount of time (from start of vocalization)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationPatternsBlock.ListenerTarget">
            <summary>
            who/what am I speaking to/of?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationPatternsBlock.Hostility">
            <summary>
            The relationship between the subject and the cause
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationPatternsBlock.DangerLevel">
            <summary>
            Speaker must have danger level of at least this much
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiDialogueGlobals.VocalizationPatternsBlock.SpatialRelation">
            <summary>
            with respect to the subject, the cause is ...
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.AiMissionDialogue.MissionDialogueLinesBlock.MissionDialogueVariantsBlock.VariantDesignation">
            <summary>
            3-letter designation for the character^
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Antenna.AttachmentMarkerName">
            <summary>
            the marker name where the antenna should be attached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Antenna.SpringStrengthCoefficient">
            <summary>
            strength of the spring (larger values make the spring stronger)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Antenna.AntennaVertexBlock.SpringStrengthCoefficient">
            <summary>
            strength of the spring (larger values make the spring stronger)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Antenna.AntennaVertexBlock.Angles">
            <summary>
            direction toward next vertex
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Antenna.AntennaVertexBlock.Length">
            <summary>
            distance between this vertex and the next
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Antenna.AntennaVertexBlock.SequenceIndex">
            <summary>
            bitmap group sequence index for this vertex's texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Antenna.AntennaVertexBlock.Color">
            <summary>
            color at this vertex
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Antenna.AntennaVertexBlock.LodColor">
            <summary>
            color at this vertex for the low-LOD line primitives
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.DistanceOfEvadeAnim">
            <summary>
            this must be set to tell the AI how far it should expect our evade animation to move us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.DistanceOfDiveAnim">
            <summary>
            this must be set to tell the AI how far it should expect our dive animation to move us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.StunnedMovementThreshold">
            <summary>
            if we take this much damage in a short space of time we will play our 'stunned movement' animations
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.SpawnedTurretCharacter">
            <summary>
            automatically created character when this unit is driven
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.SpawnedActorCount">
            <summary>
            number of actors which we spawn
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.SpawnedVelocity">
            <summary>
            velocity at which we throw spawned actors
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.RightHandNode">
            <summary>
            where the primary weapon is attached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.LeftHandNode">
            <summary>
            where the seconday weapon is attached (for dual-pistol modes)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MaximumSoftLandingTime">
            <summary>
            the longest amount of time the biped can take to recover from a soft landing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MaximumHardLandingTime">
            <summary>
            the longest amount of time the biped can take to recover from a hard landing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MinimumSoftLandingVelocity">
            <summary>
            below this velocity the biped does not react when landing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MinimumHardLandingVelocity">
            <summary>
            below this velocity the biped will not do a soft landing when returning to the ground
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.MaximumHardLandingVelocity">
            <summary>
            the velocity corresponding to the maximum landing time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.DeathHardLandingVelocity">
            <summary>
            the maximum velocity with which a character can strike the ground and live
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.StunDuration">
            <summary>
            0 is the default.  Bipeds are stuned when damaged by vehicle collisions, also some are when they take emp damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CameraInterpolationStart">
            <summary>
            looking-downward angle that starts camera interpolation to fp position
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CameraInterpolationEnd">
            <summary>
            looking-downward angle at which camera interpolation to fp position is complete
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CameraForwardMovementScale">
            <summary>
            amount of fp camera movement forward and back (1.0 is full)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CameraSideMovementScale">
            <summary>
            amount of fp camera movement side-to-side (1.0 is full)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CameraVerticalMovementScale">
            <summary>
            amount of fp camera movement vertically (1.0 is full)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CameraExclusionDistance">
            <summary>
            fp camera must always be at least this far out from root node
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.HeadshotAccelerationScale">
            <summary>
            when the biped ragdolls from a head shot it acceleartes based on this value.  0 defaults to the standard acceleration
            scale
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ContactPoints">
            <summary>
            these are the points where the biped touches the ground
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ReanimationCharacter">
            <summary>
            when the flood reanimate this guy, he turns into a ...
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.DeathSpawnCharacter">
            <summary>
            when I die, out of the ashes of my death crawls a ...
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.UnitAdditionalNodeNamesStructBlock.PreferredGunNode">
            <summary>
            if found, use this gun marker
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.DialogueVariantBlock.VariantNumber">
            <summary>
            variant number to use this dialogue with (must match the suffix in the permutations on the unit's model)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.UnitSeatBlock.PingScale">
            <summary>
            nathan is too lazy to make pings for each seat.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.UnitSeatBlock.TurnoverTime">
            <summary>
            how much time it takes to evict a rider from a flipped vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.UnitSeatBlock.ListenerInterpolationFactor">
            <summary>
            how far to interpolate listener position from camera to occupant's head
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.UnitSeatBlock.YawRateBounds">
            <summary>
            when the unit velocity is 0, the yaw/pitch rates are the left values
            at [max speed reference], the yaw/pitch rates are
            the right values.
            the max speed reference is what the code uses to generate a clamped speed from 0..1
            the exponent
            controls how midrange speeds are interpreted.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.UnitSeatBlock.EntryRadius">
            <summary>
            note: the entry radius shouldn't exceed 3 world units, 
            as that is as far as the player will search for a vehicle
            to
            enter.
            </summary>
            <summary>
            how close to the entry marker a unit must be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.UnitSeatBlock.EntryMarkerConeAngle">
            <summary>
            angle from marker forward the unit must be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.UnitSeatBlock.EntryMarkerFacingAngle">
            <summary>
            angle from unit facing the marker must be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.LivingMaterialName">
            <summary>
            collision material used when character is alive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.DeadMaterialName">
            <summary>
            collision material used when character is dead
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.BankAngle">
            <summary>
            angle at which we bank left/right when sidestepping or turning while moving forwards
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.BankApplyTime">
            <summary>
            time it takes us to apply a bank
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.BankDecayTime">
            <summary>
            time it takes us to recover from a bank
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.PitchRatio">
            <summary>
            amount that we pitch up/down when moving up or down
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.MaxVelocity">
            <summary>
            max velocity when not crouching
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.MaxSidestepVelocity">
            <summary>
            max sideways or up/down velocity when not crouching
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.AngularVelocityMaximum">
            <summary>
            turn rate
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.AngularAccelerationMaximum">
            <summary>
            turn acceleration rate
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Biped.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.CrouchVelocityModifier">
            <summary>
            how much slower we fly if crouching (zero = same speed)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.Type">
            <summary>
            Type controls bitmap geometry. All dimensions must be a power of 2 except for SPRITES and INTERFACE BITMAPS:
            
            * 2D
            TEXTURES: Ordinary 2D textures will be generated.
            * 3D TEXTURES: Volume textures will be generated from each sequence of
            2D texture slices.
            * CUBE MAPS: Generated from each consecutive set of six 2D textures in each sequence, all faces of a
            cube map must be square and the same size.
            * SPRITES: Sprite texture pages will be generated.
            * INTERFACE BITMAPS:
            Similar to 2D TEXTURES but without mipmaps and without the power of 2 restriction.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.Format">
            <summary>
            Format controls how pixels will be stored internally:
            
            * COMPRESSED WITH COLOR-KEY TRANSPARENCY: DXT1 compression, using
            4 bits/pixel. 4-x-4 blocks of pixels, are reduced to two colors and interpolated, alpha channel uses color-key
            transparency instead of alpha from the plate (all zero-alpha pixels also have zero-color).
            * COMPRESSED WITH EXPLICIT
            ALPHA: DXT2/3 compression, using 8 bits/pixel. Same as DXT1 without the color key transparency, alpha channel uses alpha
            from plate quantized down to 4 bits/pixel.
            * COMPRESSED WITH INTERPOLATED ALPHA: DXT4/5 compression, using 8 bits/pixel.
            Same as DXT2/3, except alpha is smoother. Better for smooth alpha gradients, but worse for noisy alpha.
            * 16-BIT COLOR:
            Uses 16 bits/pixel. Depending on the alpha channel, bitmaps are quantized to either r5g6b5 (no alpha), a1r5g5b5 (1-bit
            alpha), or a4r4g4b4 (>1-bit alpha).
            * 32-BIT COLOR: Uses 32 bits/pixel. Very high quality and can have alpha at no added
            cost. This format takes up the most memory, however. Bitmap formats are x8r8g8b8 and a8r8g8b.
            * MONOCHROME: Uses either 8
            or 16 bits/pixel. Bitmap formats are a8 (alpha), y8 (intensity), ay8 (combined alpha intensity), and a8y8 (separate alpha
            intensity).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.Usage">
            <summary>
            Usage controls how mipmaps are generated:
            
            * ALPHA BLEND: Pixels with zero alpha are ignored in mipmaps, to prevent
            bleeding the transparent color.
            * DEFAULT: Downsampling works normally, as in Photoshop.
            * HEIGHT MAP: The bitmap
            (normally grayscale) is a height map that gets converted to a bump map. Uses bump height below. Alpha is passed through
            unmodified.
            * DETAIL MAP: Mipmap color fades to gray, controlled by detail fade factor below. Alpha fades to white.
            *
            LIGHT MAP: Generates no mipmaps. Do not use!
            * VECTOR MAP: Used mostly for special effects; pixels are treated as xyz
            vectors and normalized after downsampling. Alpha is passed through unmodified.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.DetailFadeFactor">
            <summary>
            These properties control how mipmaps are postprocessed.
            </summary>
            <summary>
            0 means fade to gray by last mipmap; 1 means fade to gray by first mipmap.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.SharpenAmount">
            <summary>
            Sharpens mipmap after downsampling.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.BumpHeight">
            <summary>
            tApparent height of the bump map above the triangle onto which it is textured, in texture repeats (i.e., 1.0 would be as
            high as the texture is wide).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.ColorPlateWidth">
            <summary>
            The original image file used to import the bitmap group.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.ProcessedPixelData">
            <summary>
            Pixel data after being processed by the tool.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.BlurFilterSize">
            <summary>
            Blurs the bitmap before generating mipmaps.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.AlphaBias">
            <summary>
            Affects alpha mipmap generation.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.MipmapCount">
            <summary>
            0 Defaults to all levels.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.SpriteUsage">
            <summary>
            Sprite usage controls the background color of sprite plates.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.ColorCompressionQuality">
            <summary>
            1 means lossless, 127 means crappy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.AlphaCompressionQuality">
            <summary>
            1 means lossless, 127 means crappy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.BitmapDataBlock.Depth">
            <summary>
            Depth is 1 for 2D textures and cube maps.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.BitmapDataBlock.Type">
            <summary>
            Determines bitmap "geometry."
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Bitmap.BitmapDataBlock.Format">
            <summary>
            Determines how pixels are represented internally.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.BreakableSurface.ParticleSystemDefinitionBlockNew.SortBias">
            <summary>
            use values between -10 and 10 to move closer and farther from camera (positive is closer)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.BreakableSurface.ParticleSystemDefinitionBlockNew.LodInDistance">
            <summary>
            defaults to 0.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.BreakableSurface.ParticleSystemDefinitionBlockNew.LodFeatherInDelta">
            <summary>
            defaults to 0.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.BreakableSurface.ParticleSystemDefinitionBlockNew.LodOutDistance">
            <summary>
            defaults to 30.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.BreakableSurface.ParticleSystemDefinitionBlockNew.LodFeatherOutDelta">
            <summary>
            defaults to 10.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.BreakableSurface.ParticleSystemDefinitionBlockNew.ParticleSystemEmitterDefinitionBlock.RelativeDirection">
            <summary>
            particle initial velocity direction relative to the location's forward
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.CacheFileSound.FlagsValue.AlwaysSpatialize">
            <summary>
            always play as 3d sound, even in first person
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.CacheFileSound.FlagsValue.NeverObstruct">
            <summary>
            disable occlusion/obstruction for this sound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.CellularAutomata.InfectedCellLifespan">
            <summary>
            the lifespan of a cell once infected
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.CellularAutomata.MinimumInfectionAge">
            <summary>
            no cell can be infected before it has been alive this number of updates
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.CellularAutomata.InfectionThreshold">
            <summary>
            0.0 is most difficult for the virus, 1.0 means any virus can infect any cell
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.CellularAutomata.DetailTextureWidth">
            <summary>
            the number of cells repeating across the detail texture in both dimensions
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.CellularAutomata2d.InterpolationFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.CellularAutomata2d.InterpolationFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.Creature">
            <summary>
            Creature reference for swarm characters ONLY
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.EvasionProperties">
            <summary>
            Danger values can be found in the ai-globals section of the globals tag.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGeneralBlock.Scariness">
            <summary>
            the inherent scariness of the character
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.NormalBodyVitality">
            <summary>
            maximum body vitality of our unit
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.NormalShieldVitality">
            <summary>
            maximum shield vitality of our unit
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.LegendaryBodyVitality">
            <summary>
            maximum body vitality of our unit (on legendary)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.LegendaryShieldVitality">
            <summary>
            maximum shield vitality of our unit (on legendary)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.BodyRechargeFraction">
            <summary>
            fraction of body health that can be regained after damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.SoftPingThresholdWithShields">
            <summary>
            damage necessary to trigger a soft ping when shields are up
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.SoftPingThresholdNoShields">
            <summary>
            damage necessary to trigger a soft ping when shields are down
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.SoftPingMinInterruptTime">
            <summary>
            minimum time before a soft ping can be interrupted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.HardPingThresholdWithShields">
            <summary>
            damage necessary to trigger a hard ping when shields are up
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.HardPingThresholdNoShields">
            <summary>
            damage necessary to trigger a hard ping when shields are down
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.HardPingMinInterruptTime">
            <summary>
            minimum time before a hard ping can be interrupted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.CurrentDamageDecayDelay">
            <summary>
            current damage begins to fall after a time delay has passed since last the damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.CurrentDamageDecayTime">
            <summary>
            amount of time it would take for 100% current damage to decay to 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.RecentDamageDecayDelay">
            <summary>
            recent damage begins to fall after a time delay has passed since last the damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.RecentDamageDecayTime">
            <summary>
            amount of time it would take for 100% recent damage to decay to 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.BodyRechargeDelayTime">
            <summary>
            amount of time delay before a shield begins to recharge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.BodyRechargeTime">
            <summary>
            amount of time for shields to recharge completely
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.ShieldRechargeDelayTime">
            <summary>
            amount of time delay before a shield begins to recharge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.ShieldRechargeTime">
            <summary>
            amount of time for shields to recharge completely
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.StunThreshold">
            <summary>
            stun level that triggers the stunned state (currently, the 'stunned' behavior)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.ExtendedShieldDamageThreshold">
            <summary>
            Amount of shield damage sustained before it is considered 'extended'
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.ExtendedBodyDamageThreshold">
            <summary>
            Amount of body damage sustained before it is considered 'extended'
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVitalityBlock.SuicideRadius">
            <summary>
            when I die and explode, I damage stuff within this distance of me.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.MaxVisionDistance">
            <summary>
            maximum range of sight
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.CentralVisionAngle">
            <summary>
            horizontal angle within which we see targets out to our maximum range
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.MaxVisionAngle">
            <summary>
            maximum horizontal angle within which we see targets at range
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.PeripheralVisionAngle">
            <summary>
            maximum horizontal angle within which we can see targets out of the corner of our eye
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.PeripheralDistance">
            <summary>
            maximum range at which we can see targets our of the corner of our eye
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.HearingDistance">
            <summary>
            maximum range at which sounds can be heard
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.NoticeProjectileChance">
            <summary>
            random chance of noticing a dangerous enemy projectile (e.g. grenade)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.NoticeVehicleChance">
            <summary>
            random chance of noticing a dangerous vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.CombatPerceptionTime">
            <summary>
            time required to acknowledge a visible enemy when we are already in combat or searching for them
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.GuardPerceptionTime">
            <summary>
            time required to acknowledge a visible enemy when we have been alerted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.NonCombatPerceptionTime">
            <summary>
            time required to acknowledge a visible enemy when we are not alerted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPerceptionBlock.FirstAckSurpriseDistance">
            <summary>
            If a new prop is acknowledged within the given distance, surprise is registerd
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterLookBlock.MaximumAimingDeviation">
            <summary>
            how far we can turn our weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterLookBlock.MaximumLookingDeviation">
            <summary>
            how far we can turn our head
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterLookBlock.NoncombatLookDeltaL">
            <summary>
            how far we can turn our head left away from our aiming vector when not in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterLookBlock.NoncombatLookDeltaR">
            <summary>
            how far we can turn our head right away from our aiming vector when not in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterLookBlock.CombatLookDeltaL">
            <summary>
            how far we can turn our head left away from our aiming vector when in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterLookBlock.CombatLookDeltaR">
            <summary>
            how far we can turn our head right away from our aiming vector when in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterLookBlock.NoncombatIdleLooking">
            <summary>
            rate at which we change look around randomly when not in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterLookBlock.NoncombatIdleAiming">
            <summary>
            rate at which we change aiming directions when looking around randomly when not in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterLookBlock.CombatIdleLooking">
            <summary>
            rate at which we change look around randomly when searching or in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterLookBlock.CombatIdleAiming">
            <summary>
            rate at which we change aiming directions when looking around randomly when searching or in combat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterSwarmBlock.ScatterKilledCount">
            <summary>
            After the given number of deaths, the swarm scatters
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterSwarmBlock.ScatterRadius">
            <summary>
            the distance from the target that the swarm scatters
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterSwarmBlock.ScatterTime">
            <summary>
            amount of time to remain scattered
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterSwarmBlock.PerlinOffsetScale">
            <summary>
            amount of randomness added to creature's throttle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterSwarmBlock.OffsetPeriod">
            <summary>
            how fast the creature changes random offset to throttle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterSwarmBlock.PerlinIdleMovementThreshold">
            <summary>
            a random offset lower then given threshold is made 0. (threshold of 1 = no movement)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterSwarmBlock.PerlinCombatMovementThreshold">
            <summary>
            a random offset lower then given threshold is made 0. (threshold of 1 = no movement)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterReadyBlock.ReadyTimeBounds">
            <summary>
            Character will pause for given time before engaging threat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterEngageBlock.CrouchDangerThreshold">
            <summary>
            When danger rises above the threshold, the actor crouches
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterEngageBlock.StandDangerThreshold">
            <summary>
            When danger drops below this threshold, the actor can stand again.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterEngageBlock.FightDangerMoveThreshold">
            <summary>
            When danger goes above given level, this actor switches firing positions
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterChargeBlock.MeleeChance">
            <summary>
            chance of initiating a melee within a 1 second period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterChargeBlock.MeleeAttackTimeout">
            <summary>
            Give up after given amount of time spent charging
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterChargeBlock.MeleeAttackDelayTimer">
            <summary>
            don't attempt again before given time since last melee
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterChargeBlock.MeleeDelayTimer">
            <summary>
            time between melee leaps
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterChargeBlock.BerserkWeapon">
            <summary>
            when I berserk, I pull out a ...
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterEvasionBlock.EvasionDangerThreshold">
            <summary>
            Consider evading when immediate danger surpasses threshold
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterEvasionBlock.EvasionDelayTimer">
            <summary>
            Wait at least this delay between evasions
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterEvasionBlock.EvasionChance">
            <summary>
            If danger is above threshold, the chance that we will evade. Expressed as chance of evading within a 1 second time period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterEvasionBlock.EvasionProximityThreshold">
            <summary>
            If target is within given proximity, possibly evade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterEvasionBlock.DiveRetreatChance">
            <summary>
            Chance of retreating (fleeing) after danger avoidance dive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.HideBehindCoverTime">
            <summary>
            how long we stay behind cover after seeking cover
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.CoverVitalityThreshold">
            <summary>
            When vitality drops below this level, possibly trigger a cover
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.CoverShieldFraction">
            <summary>
            trigger cover when shield drops below this fraction (low shield cover impulse must be enabled)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.CoverCheckDelay">
            <summary>
            amount of time I will wait before trying again after covering
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.EmergeFromCoverWhenShieldFractionReachesThreshold">
            <summary>
            Emerge from cover when shield fraction reaches threshold
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.CoverDangerThreshold">
            <summary>
            Danger must be this high to cover. At a danger level of 'danger threshold', the chance of seeking cover is the cover
            chance lower bound (below)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.DangerUpperThreshold">
            <summary>
            At or above danger level of upper threshold, the chance of seeking cover is the cover chance upper bound (below)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.CoverChance">
            <summary>
            The Bounds on the chance of seeking cover.
            The lower bound is valid when the danger is at 'danger threshold'
            The upper
            bound is valid when the danger is at or above 'danger upper threshold'.
            It is interpolated linearly everywhere in
            between.
             All chances are expressed as 'chance of triggering cover in a 1 second period'.
            </summary>
            <summary>
            Bounds on the chances of seeking cover.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.ProximitySelfPreserve">
            <summary>
            When the proximity_self_preservation impulse is enabled, triggers self-preservation when target within this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.DisallowCoverDistance">
            <summary>
            Disallow covering from visible target under the given distance away
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.ProximityMeleeDistance">
            <summary>
            When self preserving from a target less than given distance, causes melee attack (assuming proximity_melee_impulse is
            enabled)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.UnreachableEnemyDangerThreshold">
            <summary>
            When danger from an unreachable enemy surpasses threshold, actor cover (assuming unreachable_enemy_cover impulse is
            enabled)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterCoverBlock.ScaryTargetThreshold">
            <summary>
            When target is aware of me and surpasses the given scariness, self-preserve (scary_target_cover_impulse)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.ShieldThreshold">
            <summary>
            When shield vitality drops below given amount, retreat is triggered by low_shield_retreat_impulse
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.ScaryTargetThreshold">
            <summary>
            When confronting an enemy of over the given scariness, retreat is triggered by scary_target_retreat_impulse
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.DangerThreshold">
            <summary>
            When perceived danger rises above the given threshold, retreat is triggered by danger_retreat_impulse
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.ProximityThreshold">
            <summary>
            When enemy closer than given threshold, retreat is triggered by proximity_retreat_impulse
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.MinMaxForcedCowerTimeBounds">
            <summary>
            actor cowers for at least the given amount of time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.MinMaxCowerTimeoutBounds">
            <summary>
            actor times out of cower after the given amount of time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.ProximityAmbushThreshold">
            <summary>
            If target reaches is within the given proximity, an ambush is triggered by the proximity ambush impulse
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.AwarenessAmbushThreshold">
            <summary>
            If target is less than threshold (0-1) aware of me, an ambush is triggered by the vulnerable enemy ambush impulse
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.LeaderDeadRetreatChance">
            <summary>
            If leader-dead-retreat-impulse is active, gives the chance that we will flee when our leader dies within 4 world units of
            us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.PeerDeadRetreatChance">
            <summary>
            If peer-dead-retreat-impulse is active, gives the chance that we will flee when one of our peers (friend of the same
            race) dies within 4 world units of us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.SecondPeerDeadRetreatChance">
            <summary>
            If peer-dead-retreat-impulse is active, gives the chance that we will flee when a second peer (friend of the same race)
            dies within 4 world units of us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.ZigZagAngle">
            <summary>
            The angle from the intended destination direction that a zig-zag will cause
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.ZigZagPeriod">
            <summary>
            How long it takes to zig left and then zag right.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.RetreatGrenadeChance">
            <summary>
            The likelihood of throwing down a grenade to cover our retreat
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterRetreatBlock.BackupWeapon">
            <summary>
            If I want to flee and I don't have flee animations with my current weapon, throw it away and try a ...
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterSearchBlock.UncoverDistanceBounds">
            <summary>
            Distance of uncover point from target. Hard lower limit, soft upper limit.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPresearchBlock.MinPresearchTime">
            <summary>
            If the min presearch time expires and the target is (actually) outside the min-certainty radius, presearch turns off
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPresearchBlock.MaxPresearchTime">
            <summary>
            Presearch turns off after the given time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterPresearchBlock.MinSuppressingTime">
            <summary>
            if the min suppressing time expires and the target is outside the min-certainty radius, suppressing fire turns off
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterIdleBlock.IdlePoseDelayTime">
            <summary>
            time range for delays between idle poses
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVocalizationBlock.LookCommentTime">
            <summary>
            How long does the player look at an AI before the AI responds?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVocalizationBlock.LookLongCommentTime">
            <summary>
            How long does the player look at the AI before he responds with his 'long look' comment?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterBoardingBlock.MaxDistance">
            <summary>
            maximum distance from entry point that we will consider boarding
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterBoardingBlock.AbortDistance">
            <summary>
            give up trying to get in boarding seat if entry point is further away than this
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterBoardingBlock.MaxSpeed">
            <summary>
            maximum speed at which we will consider boarding
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterBossBlock.FlurryDamageThreshold">
            <summary>
            when more than x damage is caused a juggernaut flurry is triggered
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterBossBlock.FlurryTime">
            <summary>
            flurry lasts this long
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.MaximumFiringRange">
            <summary>
            we can only fire our weapon at targets within this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.MinimumFiringRange">
            <summary>
            weapon will not be fired at target closer than given distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.BombardmentRange">
            <summary>
            we offset our burst targets randomly by this range when firing at non-visible enemies (zero = never)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.MaxSpecialTargetDistance">
            <summary>
            Specific target regions on a vehicle or unit will be fired upon only under the given distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.SuperBallisticRange">
            <summary>
            we try to aim our shots super-ballistically if target is outside this range (zero = never)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.BallisticFiringBounds">
            <summary>
            At the min range, the min ballistic fraction is used, at the max, the max ballistic fraction is used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.BallisticFractionBounds">
            <summary>
            Controls speed and degree of arc. 0 = high, slow, 1 = low, fast
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CustomStandGunOffset">
            <summary>
            custom standing gun offset for overriding the default in the base actor
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CustomCrouchGunOffset">
            <summary>
            custom crouching gun offset for overriding the default in the base actor
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.SpecialFireMode">
            <summary>
            the type of special weapon fire that we can use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.SpecialFireSituation">
            <summary>
            when we will decide to use our special weapon fire mode
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.SpecialFireChance">
            <summary>
            how likely we are to use our special weapon fire mode
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.SpecialFireDelay">
            <summary>
            how long we must wait between uses of our special weapon fire mode
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.SpecialDamageModifier">
            <summary>
            damage modifier for special weapon fire (applied in addition to the normal damage modifier. zero = no change)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.SpecialProjectileError">
            <summary>
            projectile error angle for special weapon fire (applied in addition to the normal error)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.DropWeaponLoaded">
            <summary>
            amount of ammo loaded into the weapon that we drop (in fractions of a clip, e.g. 0.3 to 0.5)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.DropWeaponAmmo">
            <summary>
            total number of rounds in the weapon that we drop (ignored for energy weapons)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.NormalAccuracyBounds">
            <summary>
            Parameters control how accuracy changes over the duration of a series of bursts
            Accuracy is an analog value between 0 and
            1. At zero, the parameters of the first
            firing-pattern block is used. At 1, the parameters in the second block is used.
            In
            between, all the values are linearly interpolated
            </summary>
            <summary>
            Indicates starting and ending accuracies at normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.NormalAccuracyTime">
            <summary>
            The amount of time it takes the accuracy to go from starting to ending
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.HeroicAccuracyBounds">
            <summary>
            Indicates starting and ending accuracies at heroic difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.HeroicAccuracyTime">
            <summary>
            The amount of time it takes the accuracy to go from starting to ending
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.LegendaryAccuracyBounds">
            <summary>
            Indicates starting and ending accuracies at legendary difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.LegendaryAccuracyTime">
            <summary>
            The amount of time it takes the accuracy to go from starting to ending
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.RateOfFire">
            <summary>
            how many times per second we pull the trigger (zero = continuously held down)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.TargetTracking">
            <summary>
            how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0=
            fire at current position
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.TargetLeading">
            <summary>
            how much we lead moving targets. 0.0= no prediction. 1.0= predict completely.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.BurstOriginRadius">
            <summary>
            at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.
            the
            burst origin angle controls whether this error is exactly horizontal or might have some vertical component.
            
            over the
            course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also
            controlled by an angle that specifies how close to the horizontal it is.
            
            for example if the burst origin angle and the
            burst return angle were both zero, and the return length was the same as the burst length, every burst would start the
            same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the
            burst.
            </summary>
            <summary>
            how far away from the target the starting point is
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.BurstOriginAngle">
            <summary>
            the range from the horizontal that our starting error can be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.BurstReturnLength">
            <summary>
            how far the burst point moves back towards the target (could be negative)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.BurstReturnAngle">
            <summary>
            the range from the horizontal that the return direction can be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.BurstDuration">
            <summary>
            how long each burst we fire is
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.BurstSeparation">
            <summary>
            how long we wait between bursts
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.WeaponDamageModifier">
            <summary>
            what fraction of its normal damage our weapon inflicts (zero = no modifier)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.ProjectileError">
            <summary>
            error added to every projectile we fire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.BurstAngularVelocity">
            <summary>
            the maximum rate at which we can sweep our fire (zero = unlimited)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterWeaponsBlock.CharacterFiringPatternBlock.MaximumErrorAngle">
            <summary>
            cap on the maximum angle by which we will miss target (restriction on burst origin radius
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.RateOfFire">
            <summary>
            how many times per second we pull the trigger (zero = continuously held down)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.TargetTracking">
            <summary>
            how well our bursts track moving targets. 0.0= fire at the position they were standing when we started the burst. 1.0=
            fire at current position
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.TargetLeading">
            <summary>
            how much we lead moving targets. 0.0= no prediction. 1.0= predict completely.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.BurstOriginRadius">
            <summary>
            at the start of every burst we pick a random point near the target to fire at, on either the left or the right side.
            the
            burst origin angle controls whether this error is exactly horizontal or might have some vertical component.
            
            over the
            course of the burst we move our projectiles back in the opposite direction towards the target. this return motion is also
            controlled by an angle that specifies how close to the horizontal it is.
            
            for example if the burst origin angle and the
            burst return angle were both zero, and the return length was the same as the burst length, every burst would start the
            same amount away from the target (on either the left or right) and move back to exactly over the target at the end of the
            burst.
            </summary>
            <summary>
            how far away from the target the starting point is
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.BurstOriginAngle">
            <summary>
            the range from the horizontal that our starting error can be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.BurstReturnLength">
            <summary>
            how far the burst point moves back towards the target (could be negative)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.BurstReturnAngle">
            <summary>
            the range from the horizontal that the return direction can be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.BurstDuration">
            <summary>
            how long each burst we fire is
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.BurstSeparation">
            <summary>
            how long we wait between bursts
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.WeaponDamageModifier">
            <summary>
            what fraction of its normal damage our weapon inflicts (zero = no modifier)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.ProjectileError">
            <summary>
            error added to every projectile we fire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.BurstAngularVelocity">
            <summary>
            the maximum rate at which we can sweep our fire (zero = unlimited)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterFiringPatternPropertiesBlock.CharacterFiringPatternBlock.MaximumErrorAngle">
            <summary>
            cap on the maximum angle by which we will miss target (restriction on burst origin radius
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.GrenadeType">
            <summary>
            type of grenades that we throw^
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.TrajectoryType">
            <summary>
            how we throw our grenades
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.MinimumEnemyCount">
            <summary>
            how many enemies must be within the radius of the grenade before we will consider throwing there
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.EnemyRadius">
            <summary>
            we consider enemies within this radius when determining where to throw
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.GrenadeIdealVelocity">
            <summary>
            how fast we LIKE to throw our grenades
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.GrenadeVelocity">
            <summary>
            the fastest we can possibly throw our grenades
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.GrenadeRanges">
            <summary>
            ranges within which we will consider throwing a grenade
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.CollateralDamageRadius">
            <summary>
            we won't throw if there are friendlies around our target within this range
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.GrenadeChance">
            <summary>
            how likely we are to throw a grenade in one second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.GrenadeThrowDelay">
            <summary>
            How long we have to wait after throwing a grenade before we can throw another one
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.GrenadeUncoverChance">
            <summary>
            how likely we are to throw a grenade to flush out a target in one second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.AntiVehicleGrenadeChance">
            <summary>
            how likely we are to throw a grenade against a vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.GrenadeCount">
            <summary>
            number of grenades that we start with
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterGrenadesBlock.DontDropGrenadesChance">
            <summary>
            how likely we are not to drop any grenades when we die, even if we still have some
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiPathfindingRadius">
            <summary>
            (Ground vehicles)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiDestinationRadius">
            <summary>
            (All vehicles) Distance within which goal is considered reached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiDecelerationDistanceworldUnits">
            <summary>
            (All vehicles)Distance from goal at which AI starts to decelerate
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiTurningRadius">
            <summary>
            (Warthog, Pelican, Ghost) Idealized average turning radius (should reflect actual vehicle physics)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiInnerTurningRadiusTr">
            <summary>
            (Warthog-type) Idealized minimum turning radius (should reflect actual vehicle physics)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiIdealTurningRadiusTr">
            <summary>
            (Warthogs, ghosts) Ideal turning radius for rounding turns (barring obstacles, etc.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiBansheeSteeringMaximum">
            <summary>
            (Banshee)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiMaxSteeringAngle">
            <summary>
            (Warthog, ghosts, wraiths)Maximum steering angle from forward (ultimately controls turning speed)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiMaxSteeringDelta">
            <summary>
            (pelicans, dropships, ghosts, wraiths)Maximum delta in steering angle from one tick to the next (ultimately controls turn
            acceleration)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiOversteeringScale">
            <summary>
            (Warthog, ghosts, wraiths)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiOversteeringBounds">
            <summary>
            (Banshee) Angle to goal at which AI will oversteer
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiSideslipDistance">
            <summary>
            (Ghosts, Dropships) Distance within which Ai will strafe to target (as opposed to turning)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiAvoidanceDistance">
            <summary>
            (Banshee-style) Look-ahead distance for obstacle avoidance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiMinUrgency">
            <summary>
            (Banshees)The minimum urgency with which a turn can be made (urgency = percent of maximum steering delta)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiThrottleMaximum">
            <summary>
            (All vehicles)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiGoalMinThrottleScale">
            <summary>
            (Warthogs, Dropships, ghosts)scale on throttle when within 'ai deceleration distance' of goal (0...1)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiTurnMinThrottleScale">
            <summary>
            (Warthogs, ghosts) Scale on throttle due to nearness to a turn (0...1)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiDirectionMinThrottleScale">
            <summary>
            (Warthogs, ghosts) Scale on throttle due to facing away from intended direction (0...1)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiAccelerationScale">
            <summary>
            (warthogs, ghosts) The maximum allowable change in throttle between ticks
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiThrottleBlend">
            <summary>
            (dropships, sentinels) The degree of throttle blending between one tick and the next (0 = no blending)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.TheoreticalMaxSpeed">
            <summary>
            (dropships, warthogs, ghosts) About how fast I can go.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.ErrorScale">
            <summary>
            (dropships, warthogs) scale on the difference between desired and actual speed, applied to throttle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiChargeTightAngleDistance">
            <summary>
            (All vehicles) The distance at which the tight angle criterion is used for deciding to vehicle charge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiChargeTightAngle">
            <summary>
            (All vehicles) Angle cosine within which the target must be when target is closer than tight angle distance in order to
            charge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiChargeRepeatTimeout">
            <summary>
            (All vehicles) Time delay between vehicle charges
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiChargeLookAheadTime">
            <summary>
            (All vehicles) In deciding when to abort vehicle charge, look ahead these many seconds to predict time of contact
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiChargeConsiderDistance">
            <summary>
            Consider charging the target when it is within this range (0 = infinite distance)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiChargeAbortDistance">
            <summary>
            Abort the charge when the target get more than this far away (0 = never abort)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.VehicleRamTimeout">
            <summary>
            The ram behavior stops after a maximum of the given number of seconds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.RamParalysisTime">
            <summary>
            The ram behavior freezes the vehicle for a given number of seconds after performing the ram
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiCoverDamageThreshold">
            <summary>
            (All vehicles) Trigger a cover when recent damage is above given threshold (damage_vehicle_cover impulse)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiCoverMinDistance">
            <summary>
            (All vehicles) When executing vehicle-cover, minimum distance from the target to flee to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiCoverTime">
            <summary>
            (All vehicles) How long to stay away from the target
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.AiCoverMinBoostDistance">
            <summary>
            (All vehicles) Boosting allowed when distance to cover destination is greater then this.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.TurtlingRecentDamageThreshold">
            <summary>
            If vehicle turtling behavior is enabled, turtling is initiated if 'recent damage' surpasses the given threshold
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.TurtlingMinTime">
            <summary>
            If the vehicle turtling behavior is enabled, turtling occurs for at least the given time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Character.CharacterVehicleBlock.TurtlingTimeout">
            <summary>
            The turtled state times out after the given number of seconds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ChocolateMountain.LightingVariablesBlock.PrimaryLightStructBlock.ExclusionAngleFromUp">
            <summary>
            degrees from up the direct light cannot be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ChocolateMountain.LightingVariablesBlock.PrimaryLightStructBlock.Function">
            <summary>
            input: accuracy, output: primary light scale
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ChocolateMountain.LightingVariablesBlock.SecondaryLightStructBlock.ZAxisRotation">
            <summary>
            degrees
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ChocolateMountain.LightingVariablesBlock.SecondaryLightStructBlock.Function">
            <summary>
            input: accuracy, output: secondary light scale
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ChocolateMountain.LightingVariablesBlock.AmbientLightStructBlock.Function">
            <summary>
            Ambient light scale. (left side min brightness, right side max brightness). Before this scale it determines a global
            ambient scale, which added to either light will total ~1.0 scale. Then this scale modifies that.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ChocolateMountain.LightingVariablesBlock.LightmapShadowsStructBlock.Function1">
            <summary>
            Shadows generated by the lightmaps get direction from lightmap primary incoming light direction and darken based on how
            accurate that light is fed into the function below
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Cloth.GridXDimension">
            <summary>
            if not importing from a render model, type a grid size
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Cloth.ClothPropertiesBlock.NumberIterations">
            <summary>
            [1-8] sug 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Cloth.ClothPropertiesBlock.Weight">
            <summary>
            [-10.0 - 10.0] sug 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Cloth.ClothPropertiesBlock.Drag">
            <summary>
            [0.0 - 0.5] sug 0.07
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Cloth.ClothPropertiesBlock.WindScale">
            <summary>
            [0.0 - 3.0] sug 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Cloth.ClothPropertiesBlock.WindFlappinessScale">
            <summary>
            [0.0 - 1.0] sug 0.75
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Cloth.ClothPropertiesBlock.LongestRod">
            <summary>
            [1.0 - 10.0] sug 3.5
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.ScaleFlags">
            <summary>
            these flags determine which fields are scaled by the contrail density
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.PointGenerationRate">
            <summary>
            this many points are generated per second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.PointVelocity">
            <summary>
            velocity added to each point's initial velocity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.PointVelocityConeAngle">
            <summary>
            initial velocity is inside the cone defined by the marker's forward vector and this angle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.InheritedVelocityFraction">
            <summary>
            fraction of parent object's velocity that is inherited by contrail points.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.RenderType">
            <summary>
            this specifies how the contrail is oriented in space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.TextureRepeatsU">
            <summary>
            texture repeats per contrail segment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.TextureRepeatsV">
            <summary>
            texture repeats across contrail width
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.TextureAnimationU">
            <summary>
            the texture along the contrail is animated by this value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.TextureAnimationV">
            <summary>
            the texture across the contrail is animated by this value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.Bitmap1">
            <summary>
            Optional multitextured second map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.UAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.UAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.VAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.VAnimationScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.RotationAnimationPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.RotationAnimationScale">
            <summary>
            0 defaults to 360
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.ContrailPointStatesBlock.Duration">
            <summary>
            the time a point spends in this state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.ContrailPointStatesBlock.TransitionDuration">
            <summary>
            the time a point takes to transition to the next state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.ContrailPointStatesBlock.Width">
            <summary>
            contrail width at this point
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.ContrailPointStatesBlock.ColorLowerBound">
            <summary>
            contrail color at this point
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.ContrailPointStatesBlock.ColorUpperBound">
            <summary>
            contrail color at this point
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Contrail.ContrailPointStatesBlock.ScaleFlags">
            <summary>
            these flags determine which fields are scaled by the contrail density
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Crate.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ImpactShieldDamage">
            <summary>
            if not specified, uses 'impact damage'
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.DestroyAfterDeathTime">
            <summary>
            if non-zero, the creature will destroy itself upon death after this much time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.LivingMaterialName">
            <summary>
            collision material used when character is alive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.DeadMaterialName">
            <summary>
            collision material used when character is dead
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.BankAngle">
            <summary>
            angle at which we bank left/right when sidestepping or turning while moving forwards
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.BankApplyTime">
            <summary>
            time it takes us to apply a bank
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.BankDecayTime">
            <summary>
            time it takes us to recover from a bank
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.PitchRatio">
            <summary>
            amount that we pitch up/down when moving up or down
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.MaxVelocity">
            <summary>
            max velocity when not crouching
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.MaxSidestepVelocity">
            <summary>
            max sideways or up/down velocity when not crouching
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.AngularVelocityMaximum">
            <summary>
            turn rate
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.AngularAccelerationMaximum">
            <summary>
            turn acceleration rate
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Creature.CharacterPhysicsStructBlock.CharacterPhysicsFlyingStructBlock.CrouchVelocityModifier">
            <summary>
            how much slower we fly if crouching (zero = same speed)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.AoeCoreRadius">
            <summary>
            if this is area of effect damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.ActiveCamouflageDamage">
            <summary>
            how much more visible this damage makes a player who is active camouflaged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.Stun">
            <summary>
            amount of stun added to damaged unit
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.MaximumStun">
            <summary>
            damaged unit's stun will never exceed this amount
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.StunTime">
            <summary>
            duration of stun due to this damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.Duration1">
            <summary>
            The wobble function and weight affects how the camera shake oscilates over time.
            If the weight is one, then the wobble
            function completely scales the translational
            and rotational magnitudes.  The less the weight, the less the effect wobble
            has.
            If the wobble weight is 0 then wobble is completely ignored.
            </summary>
            <summary>
            the effect will last for this duration.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.FalloffFunction">
            <summary>
            a function to envelope the effect's magnitude over time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.RandomTranslation">
            <summary>
            random translation in all directions
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.RandomRotation">
            <summary>
            random rotation in all directions
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.WobbleFunction">
            <summary>
            a function to perturb the effect's behavior over time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.WobbleWeight">
            <summary>
            a value of 0.0 signifies that the wobble function has no effect; a value of 1.0 signifies that the effect will not be
            felt when the wobble function's value is zero.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.ForwardVelocity">
            <summary>
            Controls particle velocities when a damage effect shatters a materal.
            
            All particles created within 'forward radius' will
            be kicked along the
            damage direction with a speed equivalent to 'forward velocity' at the
            epicenter of the damage and 0
            at the outer radius.  'Forward exponent'
            is used to modify the velocity scale.  A low exponent (like 0.5) means
            that
            particles between the epicenter and the radius will be kicked out with a speed
            closer to 'forward velocity' than if
            a higher exponent (like 2.0) was used
            
            The outward fields work in a similar way, except instead of kicking along
            the
            damage direction, they get kick away from the damage epicenter.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.FlagsValue.AreaDamagePlayersOnly">
            <summary>
            area of effect damage only affects players
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DamageEffect.DamageEffectPlayerResponseBlock.ScreenFlash">
            <summary>
            There are seven screen flash types:
            
            NONE: DST'= DST
            LIGHTEN: DST'= DST(1 - A) + C
            DARKEN: DST'= DST(1 - A) - C
            MAX:
            DST'= MAX[DST(1 - C), (C - A)(1-DST)]
            MIN: DST'= MIN[DST(1 - C), (C + A)(1-DST)]
            TINT: DST'= DST(1 - C) + (A*PIN[2C - 1,
            0, 1] + A)(1-DST)
            INVERT: DST'= DST(1 - C) + A)
            
            In the above equations C and A represent the color and alpha of the
            screen flash, DST represents the color in the framebuffer before the screen flash is applied, and DST' represents the
            color after the screen flash is applied.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Decal.Flags">
            <summary>
            There are several "layers" which decals can be placed into, these layers are drawn in a specific order relative to the
            shader layers and each layer has its own specific blending mode. In general, the decal bitmap's alpha channel will be
            used as an opacity mask if it exists.
            
            * LIT ALPHA-BLEND PRELIGHT: Decals in this layer are lit by the lightmap but are
            "faded out" by dynamic lights. What this means is that dynamic lights hitting them will cause them to disappear, sort of.
            This layer is rendered immediately before lightmap shadows (and before dynamic lights).
            
            * LIT ALPHA-BLEND: Decals in
            this layer are lit by the lightmap but are NOT lit by dynamic lights. What this means is that if the decal exists in an
            area that has dark lightmapping but bright dynamic lighting, the decal will appear dark. This layer is rendered
            immediately after dynamic lights, and all subsequent decal layers are rendered after this one in order.
            
            * DOUBLE
            MULTIPLY: Decals in this layer will double-multiply the color in the framebuffer. Gray pixels in the decal bitmap will be
            transparent (black darkens, white brightens). The decal color in the tag does NOT do anything!!
            
            * MULTIPLY: Decals in
            this layer will multiply the color in the framebuffer. White pixels in the decal bitmap will be transparent. The decal
            color (in the decal tag) does NOT do anything!!
            
            * MAX: Decals in this layer will perform a component-wise max operation
            on the framebuffer, replacing color values with whichever is higher. Black pixels in the decal bitmap will be
            transparent.
            
            * ADD: Decals in this layer will perform an addition operation on the framebuffer, replacing color values
            with the sum of the two. Black pixels in the decal bitmap will be transparent.
            
            * ERROR: Decals in this layer will render
            bright red and show through geometry!
            
            A compound decal is a chain of decals which are instantiated simultaneously.
            Compound decals are created by referencing another decal tag in the 'next_decal_in_chain' field below. Do not attempt to
            create a circularly linked decal chain, i.e. A->B->C->A! This will cause problems and probably hang the game. Also, do
            not reference a decal from an effect if it is not the head of the chain; for example an effect should not instantiate
            decal B if the chain was A->B->C. Compound decals can have seperate bitmaps, etc., and can be drawn in seperate layers.
            In addition, we used to have the ability for each decal in the chain can either inherit its parent's radius, rotation,
            color, etc. - or it can randomly choose its own. This behavior was controlled by the
            'geometry_inherited_by_next_decal_in_chain' flag, below but it's currently broken.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Decal.Type">
            <summary>
            controls how the decal wraps onto surface geometry
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Decal.Radius">
            <summary>
            0 defaults to 0.125
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DecoratorSet.LightingMinScale">
            <summary>
            0.0 defaults to 0.4
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DecoratorSet.LightingMaxScale">
            <summary>
            0.0 defaults to 2.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DetailObjectCollection.DetailObjectTypeBlock.ColorOverrideFactor">
            <summary>
            Fraction of detail object color to use instead of the base map color in the environment:[0,1]
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceControl.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceLightFixture.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.DoorOcclusionBounds">
            <summary>
            maps position [0,1] to occlusion
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.DeviceMachine.FlagsValue2.Elevator">
            <summary>
            lighting based on what's around, rather than what's below
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Dialogue.MissionDialogueDesignator">
            <summary>
            3-letter mission dialogue designator name
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectLocationsBlock.MarkerName">
            <summary>
            In addition to the marker in the render model there are several special marker names:
            
            replace
            Replace allows you to use
            the same effect with different markers. Damage transition effects support this for example.
            
            gravity, up
            The direction of
            gravity (down) and the opposite direction (up).  Always supplied
            
            normal
            Vector pointing directly away from the surface
            you collided with. Supplied for effects from collision.
            
            forward
            The 'negative incident' vector i.e. the direction the
            object is moving in. Most commonly used to generated decals. Supplied for effects from collision.
            
            backward
            The
            'incident' vector i.e. the opposite of the direction the object is moving in. Supplied for effects from
            collision.
            
            reflection
            The way the effect would reflect off the surface it hit. Supplied for effects from
            collision.
            
            root
            The object root (pivot). These can used for all effects which are associated with an object.
            
            impact
            The
            location of a havok impact.
            
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.SkipFraction">
            <summary>
            chance that this event will be skipped entirely
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.DelayBounds">
            <summary>
            delay before this event takes place
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.DurationBounds">
            <summary>
            duration of this event
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.EffectPartBlock.VelocityBounds">
            <summary>
            initial velocity along the location's forward, for decals the distance at which decal is created (defaults to 0.5)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.EffectPartBlock.VelocityConeAngle">
            <summary>
            initial velocity will be inside the cone defined by this angle.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.BeamBlock.Color">
            <summary>
            tint color of the beam
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.BeamBlock.Alpha">
            <summary>
            how much to fade out beam
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.BeamBlock.Width">
            <summary>
            how wide in world units
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.BeamBlock.Length">
            <summary>
            how long in world units
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.BeamBlock.Yaw">
            <summary>
            rotate the marker
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.BeamBlock.Pitch">
            <summary>
            rotate the marker
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.ParticleSystemDefinitionBlockNew.SortBias">
            <summary>
            use values between -10 and 10 to move closer and farther from camera (positive is closer)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.ParticleSystemDefinitionBlockNew.LodInDistance">
            <summary>
            defaults to 0.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.ParticleSystemDefinitionBlockNew.LodFeatherInDelta">
            <summary>
            defaults to 0.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.ParticleSystemDefinitionBlockNew.LodOutDistance">
            <summary>
            defaults to 30.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.ParticleSystemDefinitionBlockNew.LodFeatherOutDelta">
            <summary>
            defaults to 10.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Effect.EffectEventBlock.ParticleSystemDefinitionBlockNew.ParticleSystemEmitterDefinitionBlock.RelativeDirection">
            <summary>
            particle initial velocity direction relative to the location's forward
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.PickupMessage">
            <summary>
            everything you need to display stuff
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Equipment.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.PickupMessage">
            <summary>
            everything you need to display stuff
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Garbage.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.CollisionDamageBlock.MinGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.CollisionDamageBlock.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.CollisionDamageBlock.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.CollisionDamageBlock.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.CollisionDamageBlock.MinAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.CollisionDamageBlock.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.CollisionDamageBlock.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.CollisionDamageBlock.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.AiGlobalsBlock.ScaryTargetThrehold">
            <summary>
            A target of this scariness is offically considered scary (by combat dialogue, etc.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.AiGlobalsBlock.ScaryWeaponThrehold">
            <summary>
            A weapon of this scariness is offically considered scary (by combat dialogue, etc.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.MagnetismFriction">
            <summary>
            how much the crosshair slows over enemies
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.MagnetismAdhesion">
            <summary>
            how much the crosshair sticks to enemies
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.InconsequentialTargetScale">
            <summary>
            scales magnetism level for inconsequential targets like infection forms
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.CrosshairLocation">
            <summary>
            -1..1, 0 is middle of the screen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.SecondsToStart">
            <summary>
            how long you must be pegged before you start sprinting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.SecondsToFullSpeed">
            <summary>
            how long you must sprint before you reach top speed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.DecayRate">
            <summary>
            how fast being unpegged decays the timer (seconds per second)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.FullSpeedMultiplier">
            <summary>
            how much faster we actually go when at full sprint
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.PeggedMagnitude">
            <summary>
            how far the stick needs to be pressed before being considered pegged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.PeggedAngularThreshold">
            <summary>
            how far off straight up (in degrees) we consider pegged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.LookPegThreshold01">
            <summary>
            magnitude of yaw for pegged acceleration to kick in
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.LookYawAccelerationTime">
            <summary>
            time for a pegged look to reach maximum effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.LookYawAccelerationScale">
            <summary>
            maximum effect of a pegged look (scales last value in the look function below)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.LookPitchAccelerationTime">
            <summary>
            time for a pegged look to reach maximum effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.LookPitchAccelerationScale">
            <summary>
            maximum effect of a pegged look (scales last value in the look function below)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.LookAutolevellingScale">
            <summary>
            1 is fast, 0 is none, >1 will probably be really fast
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.MinimumAutolevellingTicks">
            <summary>
            amount of time player needs to move and not look up or down for autolevelling to kick in
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.MinimumAngleForVehicleFlipping">
            <summary>
            0 means the vehicle's up vector is along the ground, 90 means the up vector is pointing straight up:degrees
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerControlBlock.MinimumActionHoldTime">
            <summary>
            time that player needs to press ACTION to register as a HOLD
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyEnemyDamage">
            <summary>
            scale values for enemy health and damage settings
            </summary>
            <summary>
            enemy damage multiplier on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalEnemyDamage">
            <summary>
            enemy damage multiplier on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardEnemyDamage">
            <summary>
            enemy damage multiplier on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossEnemyDamage">
            <summary>
            enemy damage multiplier on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyEnemyVitality">
            <summary>
            enemy maximum body vitality scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalEnemyVitality">
            <summary>
            enemy maximum body vitality scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardEnemyVitality">
            <summary>
            enemy maximum body vitality scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossEnemyVitality">
            <summary>
            enemy maximum body vitality scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyEnemyShield">
            <summary>
            enemy maximum shield vitality scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalEnemyShield">
            <summary>
            enemy maximum shield vitality scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardEnemyShield">
            <summary>
            enemy maximum shield vitality scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossEnemyShield">
            <summary>
            enemy maximum shield vitality scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyEnemyRecharge">
            <summary>
            enemy shield recharge scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalEnemyRecharge">
            <summary>
            enemy shield recharge scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardEnemyRecharge">
            <summary>
            enemy shield recharge scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossEnemyRecharge">
            <summary>
            enemy shield recharge scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyFriendDamage">
            <summary>
            friend damage multiplier on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalFriendDamage">
            <summary>
            friend damage multiplier on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardFriendDamage">
            <summary>
            friend damage multiplier on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossFriendDamage">
            <summary>
            friend damage multiplier on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyFriendVitality">
            <summary>
            friend maximum body vitality scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalFriendVitality">
            <summary>
            friend maximum body vitality scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardFriendVitality">
            <summary>
            friend maximum body vitality scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossFriendVitality">
            <summary>
            friend maximum body vitality scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyFriendShield">
            <summary>
            friend maximum shield vitality scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalFriendShield">
            <summary>
            friend maximum shield vitality scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardFriendShield">
            <summary>
            friend maximum shield vitality scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossFriendShield">
            <summary>
            friend maximum shield vitality scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyFriendRecharge">
            <summary>
            friend shield recharge scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalFriendRecharge">
            <summary>
            friend shield recharge scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardFriendRecharge">
            <summary>
            friend shield recharge scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossFriendRecharge">
            <summary>
            friend shield recharge scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyInfectionForms">
            <summary>
            toughness of infection forms (may be negative) on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalInfectionForms">
            <summary>
            toughness of infection forms (may be negative) on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardInfectionForms">
            <summary>
            toughness of infection forms (may be negative) on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossInfectionForms">
            <summary>
            toughness of infection forms (may be negative) on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyRateOfFire">
            <summary>
            difficulty-affecting values for enemy ranged combat settings
            </summary>
            <summary>
            enemy rate of fire scale on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalRateOfFire">
            <summary>
            enemy rate of fire scale on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardRateOfFire">
            <summary>
            enemy rate of fire scale on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossRateOfFire">
            <summary>
            enemy rate of fire scale on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyProjectileError">
            <summary>
            enemy projectile error scale, as a fraction of their base firing error. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalProjectileError">
            <summary>
            enemy projectile error scale, as a fraction of their base firing error. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardProjectileError">
            <summary>
            enemy projectile error scale, as a fraction of their base firing error. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossProjectileError">
            <summary>
            enemy projectile error scale, as a fraction of their base firing error. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyBurstError">
            <summary>
            enemy burst error scale; reduces intra-burst shot distance. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalBurstError">
            <summary>
            enemy burst error scale; reduces intra-burst shot distance. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardBurstError">
            <summary>
            enemy burst error scale; reduces intra-burst shot distance. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossBurstError">
            <summary>
            enemy burst error scale; reduces intra-burst shot distance. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyNewTargetDelay">
            <summary>
            enemy new-target delay scale factor. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalNewTargetDelay">
            <summary>
            enemy new-target delay scale factor. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardNewTargetDelay">
            <summary>
            enemy new-target delay scale factor. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossNewTargetDelay">
            <summary>
            enemy new-target delay scale factor. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyBurstSeparation">
            <summary>
            delay time between bursts scale factor for enemies. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalBurstSeparation">
            <summary>
            delay time between bursts scale factor for enemies. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardBurstSeparation">
            <summary>
            delay time between bursts scale factor for enemies. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossBurstSeparation">
            <summary>
            delay time between bursts scale factor for enemies. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyTargetTracking">
            <summary>
            additional target tracking fraction for enemies. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalTargetTracking">
            <summary>
            additional target tracking fraction for enemies. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardTargetTracking">
            <summary>
            additional target tracking fraction for enemies. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossTargetTracking">
            <summary>
            additional target tracking fraction for enemies. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyTargetLeading">
            <summary>
            additional target leading fraction for enemies. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalTargetLeading">
            <summary>
            additional target leading fraction for enemies. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardTargetLeading">
            <summary>
            additional target leading fraction for enemies. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossTargetLeading">
            <summary>
            additional target leading fraction for enemies. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyOverchargeChance">
            <summary>
            overcharge chance scale factor for enemies. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalOverchargeChance">
            <summary>
            overcharge chance scale factor for enemies. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardOverchargeChance">
            <summary>
            overcharge chance scale factor for enemies. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossOverchargeChance">
            <summary>
            overcharge chance scale factor for enemies. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasySpecialFireDelay">
            <summary>
            delay between special-fire shots (overcharge, banshee bombs) scale factor for enemies. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalSpecialFireDelay">
            <summary>
            delay between special-fire shots (overcharge, banshee bombs) scale factor for enemies. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardSpecialFireDelay">
            <summary>
            delay between special-fire shots (overcharge, banshee bombs) scale factor for enemies. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossSpecialFireDelay">
            <summary>
            delay between special-fire shots (overcharge, banshee bombs) scale factor for enemies. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyGuidanceVsPlayer">
            <summary>
            guidance velocity scale factor for all projectiles targeted on a player. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalGuidanceVsPlayer">
            <summary>
            guidance velocity scale factor for all projectiles targeted on a player. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardGuidanceVsPlayer">
            <summary>
            guidance velocity scale factor for all projectiles targeted on a player. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossGuidanceVsPlayer">
            <summary>
            guidance velocity scale factor for all projectiles targeted on a player. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyMeleeDelayBase">
            <summary>
            delay period added to all melee attacks, even when berserk. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalMeleeDelayBase">
            <summary>
            delay period added to all melee attacks, even when berserk. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardMeleeDelayBase">
            <summary>
            delay period added to all melee attacks, even when berserk. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossMeleeDelayBase">
            <summary>
            delay period added to all melee attacks, even when berserk. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyMeleeDelayScale">
            <summary>
            multiplier for all existing non-berserk melee delay times. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalMeleeDelayScale">
            <summary>
            multiplier for all existing non-berserk melee delay times. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardMeleeDelayScale">
            <summary>
            multiplier for all existing non-berserk melee delay times. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossMeleeDelayScale">
            <summary>
            multiplier for all existing non-berserk melee delay times. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyGrenadeChanceScale">
            <summary>
            difficulty-affecting values for enemy grenade behavior
            </summary>
            <summary>
            scale factor affecting the desicions to throw a grenade. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalGrenadeChanceScale">
            <summary>
            scale factor affecting the desicions to throw a grenade. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardGrenadeChanceScale">
            <summary>
            scale factor affecting the desicions to throw a grenade. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossGrenadeChanceScale">
            <summary>
            scale factor affecting the desicions to throw a grenade. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyGrenadeTimerScale">
            <summary>
            scale factor affecting the delay period between grenades thrown from the same encounter (lower is more often). on easy
            difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalGrenadeTimerScale">
            <summary>
            scale factor affecting the delay period between grenades thrown from the same encounter (lower is more often). on normal
            difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardGrenadeTimerScale">
            <summary>
            scale factor affecting the delay period between grenades thrown from the same encounter (lower is more often). on hard
            difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossGrenadeTimerScale">
            <summary>
            scale factor affecting the delay period between grenades thrown from the same encounter (lower is more often). on
            impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyMajorUpgradeNormal">
            <summary>
            difficulty-affecting values for enemy placement
            </summary>
            <summary>
            fraction of actors upgraded to their major variant. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalMajorUpgradeNormal">
            <summary>
            fraction of actors upgraded to their major variant. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardMajorUpgradeNormal">
            <summary>
            fraction of actors upgraded to their major variant. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossMajorUpgradeNormal">
            <summary>
            fraction of actors upgraded to their major variant. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyMajorUpgradeFew">
            <summary>
            fraction of actors upgraded to their major variant when mix = normal. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalMajorUpgradeFew">
            <summary>
            fraction of actors upgraded to their major variant when mix = normal. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardMajorUpgradeFew">
            <summary>
            fraction of actors upgraded to their major variant when mix = normal. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossMajorUpgradeFew">
            <summary>
            fraction of actors upgraded to their major variant when mix = normal. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyMajorUpgradeMany">
            <summary>
            fraction of actors upgraded to their major variant when mix = many. on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalMajorUpgradeMany">
            <summary>
            fraction of actors upgraded to their major variant when mix = many. on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardMajorUpgradeMany">
            <summary>
            fraction of actors upgraded to their major variant when mix = many. on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossMajorUpgradeMany">
            <summary>
            fraction of actors upgraded to their major variant when mix = many. on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.EasyPlayerVehicleRamChance">
            <summary>
            difficulty-affecting values for vehicle driving/combat
            </summary>
            <summary>
            Chance of deciding to ram the player in a vehicle on easy difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.NormalPlayerVehicleRamChance">
            <summary>
            Chance of deciding to ram the player in a vehicle on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.HardPlayerVehicleRamChance">
            <summary>
            Chance of deciding to ram the player in a vehicle on hard difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.DifficultyBlock.ImpossPlayerVehicleRamChance">
            <summary>
            Chance of deciding to ram the player in a vehicle on impossible difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.RasterizerDataBlock.DistanceAttenuation">
            <summary>
            Used internally by the rasterizer. (Do not change unless you know what you're doing!)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.RasterizerDataBlock.Default2d">
            <summary>
            Used internally by the rasterizer - additive, multiplicative, detail, vector. (Do not change ever, period.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.RasterizerDataBlock.Unused5">
            <summary>
            Used internally by the rasterizer. (Used by Bernie's experimental shaders.)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.RasterizerDataBlock.Unused9">
            <summary>
            Used in cinematics.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.RasterizerDataBlock.GlobalShader">
            <summary>
            Used for layers that need to do something for other layers to work correctly if the layer is disabled, also used for
            active-camo, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.RasterizerDataBlock.Unused11">
            <summary>
            The PC can't use 3D textures, so we use this instead.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerInformationBlock.StunMovementPenalty">
            <summary>
            1.0 prevents moving while stunned
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerInformationBlock.StunTurningPenalty">
            <summary>
            1.0 prevents turning while stunned
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerInformationBlock.StunJumpingPenalty">
            <summary>
            1.0 prevents jumping while stunned
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerInformationBlock.MinimumStunTime">
            <summary>
            all stunning damage will last for at least this long
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.PlayerInformationBlock.MaximumStunTime">
            <summary>
            no stunning damage will last for longer than this
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.OldMaterialsBlock.GroundFrictionScale">
            <summary>
            the following fields modify the way a vehicle drives over terrain of this material type.
            </summary>
            <summary>
            fraction of original velocity parallel to the ground after one tick
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.OldMaterialsBlock.GroundFrictionNormalK1Scale">
            <summary>
            cosine of angle at which friction falls off
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.OldMaterialsBlock.GroundFrictionNormalK0Scale">
            <summary>
            cosine of angle at which friction is zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.OldMaterialsBlock.GroundDepthScale">
            <summary>
            depth a point mass rests in the ground
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.OldMaterialsBlock.GroundDampFractionScale">
            <summary>
            fraction of original velocity perpendicular to the ground after one tick
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Globals.MaterialsBlock.MaterialsSweetenersStructBlock.SweetenerInheritanceFlags">
            <summary>
            when a sweetener inheritance flag is set the sound\effect is not inherited from the parent material.  If you leave the
            sweetener blank and set the flag than no effect\sound will play
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.FlashDelay">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.FlashLength">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.FlashDelay1">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.FlashLength1">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.FlashDelay2">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.FlashLength2">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.SequenceIndex2">
            <summary>
            sequence index into the global hud icon bitmap
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.WidthOffset">
            <summary>
            extra spacing beyond bitmap width for text alignment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition1.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition1._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition1.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition1.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition1.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition1.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition1.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition1.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GlobalHudMultitextureOverlayDefinition1.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GrenadeHudOverlayBlock.FlashDelay">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.GrenadeHudInterface.GrenadeHudOverlayBlock.FlashLength">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.FlashDelay">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.FlashLength">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.FlashDelay1">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.FlashLength1">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.TopOffset">
            <summary>
            The offset values are how much the waypoint rectangle border is offset from the safe camera bounds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.MotionSensorVelocitySensitivity">
            <summary>
            how fast something moves to show up on the motion sensor
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.FlashDelay2">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.FlashLength2">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.FlashDelay3">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.FlashLength3">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.HudButtonIconBlock.SequenceIndex">
            <summary>
            sequence index into the global hud icon bitmap
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.HudButtonIconBlock.WidthOffset">
            <summary>
            extra spacing beyond bitmap width for text alignment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.GlobalNewHudGlobalsStructBlock.PlayerTrainingEntryDataBlock.DisplayString">
            <summary>
            comes out of the HUD text globals
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.GlobalNewHudGlobalsStructBlock.PlayerTrainingEntryDataBlock.DisplayString2">
            <summary>
            comes out of the HUD text globals, used for grouped prompt
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.GlobalNewHudGlobalsStructBlock.PlayerTrainingEntryDataBlock.DisplayString3">
            <summary>
            comes out of the HUD text globals, used for ungrouped prompt
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.GlobalNewHudGlobalsStructBlock.PlayerTrainingEntryDataBlock.MaxDisplayTime">
            <summary>
            how long the message can be on screen before being hidden
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.GlobalNewHudGlobalsStructBlock.PlayerTrainingEntryDataBlock.DisplayCount">
            <summary>
            how many times a training message will get displayed (0-3 only!)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.GlobalNewHudGlobalsStructBlock.PlayerTrainingEntryDataBlock.DissapearDelay">
            <summary>
            how long a displayed but untriggered message stays up
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.GlobalNewHudGlobalsStructBlock.PlayerTrainingEntryDataBlock.RedisplayDelay">
            <summary>
            how long after display this message will stay hidden
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.HudGlobals.GlobalNewHudGlobalsStructBlock.PlayerTrainingEntryDataBlock.DisplayDelayS">
            <summary>
            how long the event can be triggered before it's displayed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ItemCollection.ItemPermutation.Weight">
            <summary>
            relatively how likely this item will be chosen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ItemCollection.ItemPermutation.Item">
            <summary>
            which item to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LensFlare.OcclusionRadius">
            <summary>
            Occlusion factor affects overall lens flare brightness and can also affect scale. Occlusion never affects rotation.
            </summary>
            <summary>
            radius of the square used to test occlusion
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LensFlare.NearFadeDistance">
            <summary>
            distance at which the lens flare brightness is maximum
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LensFlare.FarFadeDistance">
            <summary>
            distance at which the lens flare brightness is minimum; set to zero to disable distance fading
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LensFlare.CoronaScale">
            <summary>
            amount to stretch the corona
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LensFlare.FalloffFunction">
            <summary>
            Only affects lens flares created by effects.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LensFlare.LensFlareReflectionBlock.Position">
            <summary>
            0 is on top of light, 1 is opposite light, 0.5 is the center of the screen, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LensFlare.LensFlareReflectionBlock.Radius">
            <summary>
            interpolated by external input
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LensFlare.LensFlareReflectionBlock.Brightness">
            <summary>
            interpolated by external input
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LensFlare.LensFlareReflectionBlock.ModulationFactor">
            <summary>
            Tinting and modulating are not the same; 'tinting' a reflection will color the darker regions but leave the highlights,
            while 'modulating' will color everything uniformly. The modulation factor controls how much the reflection is modulated
            as opposed to tinted (0 is tinted, 1 is modulated).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.Type">
            <summary>
            overall shape of the light
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.SizeModifer">
            <summary>
            how the light's size changes with external scale
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.ShadowQualityBias">
            <summary>
            larger positive numbers improve quality, larger negative numbers improve speed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.ShadowTapBias">
            <summary>
            the less taps you use, the faster the light (but edges can look worse)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.Radius">
            <summary>
            default shape parameters for spherical lights
            </summary>
            <summary>
            the radius at which illumination falls off to zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.SpecularRadius">
            <summary>
            the radius at which specular highlights fall off to zero (if zero, same as maximum radius)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.NearWidth">
            <summary>
            default shape parameters for frustum lights (orthogonal, projective or pyramid types)
            </summary>
            <summary>
            width of the frustum light at its near plane
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.HeightStretch">
            <summary>
            how much the gel is stretched vertically (0.0 or 1.0 = aspect ratio same as gel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FieldOfView">
            <summary>
            horizontal angle that the frustum light covers (0.0 = no spread, a parallel beam)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FalloffDistance">
            <summary>
            distance from near plane to where the light falloff starts
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.CutoffDistance">
            <summary>
            distance from near plane to where illumination falls off to zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.GelMap">
            <summary>
            the gel map tints the light's illumination per-pixel
            </summary>
            <summary>
            must be a cubemap for spherical light and a 2d texture for frustum light
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.LensFlare">
            <summary>
            optional lens flare and light volume associated with this light
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.BoundingRadius">
            <summary>
            used to generate a bounding radius for lensflare-only lights
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.DefaultLightmapSetting">
            <summary>
            how the light affects the lightmaps (ignored for dynamic lights)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.Duration">
            <summary>
            if the light is created by an effect, it will animate itself as follows
            </summary>
            <summary>
            the light will last this long when created by an effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FalloffFunction1">
            <summary>
            the scale of the light will diminish over time according to this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.IlluminationFade">
            <summary>
            To fade the light's illumination and shadow casting abilities
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.NoIllumination">
            <summary>
            don't cast any per-pixel dynamic light
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.NoSpecular">
            <summary>
            don't cast any specular highlights
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.NoShadow">
            <summary>
            don't cast any stencil shadows
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.DonTFadeWhenInvisible">
            <summary>
            don't fade out this light when under active-camouflage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.MultiplayerOverride">
            <summary>
            don't turn off in multiplayer
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.OnlyInDynamicEnvmap">
            <summary>
            only draw this light in dynamic reflection maps
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.IgnoreParentObject">
            <summary>
            don't illuminate or shadow the single object we are attached to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.DonTShadowParent">
            <summary>
            don't shadow the object we are attached to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.IgnoreAllParents">
            <summary>
            don't illuminate or shadow all the way up to our parent object
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.MarchMilestoneHack">
            <summary>
            don't click this unless you know what you're doing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.ForceLightInsideWorld">
            <summary>
            every update will push light back inside the world
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.EnvironmentDoesntCastStencilShadows">
            <summary>
            environment in this light will not cast stencil shadows
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.FlagsValue.ObjectsDonTCastStencilShadows">
            <summary>
            objects in this light will not cast stencil shadows
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.InterpolationFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Light.InterpolationFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.FalloffDistanceFromCamera">
            <summary>
            Light volumes are rendered as a sequence of glowy sprites, just like in Metal Gear Solid 2. Each instance of the light
            volume is rendered separately; this allows, for example, a narrow bright white volume to be overlaid on top of a fuzzy
            wide colored volume, or anything else you want!
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.LightVolumeVolumeBlock.Flags">
            <summary>
            If no bitmap is selected, the default glow bitmap will be used. Sprite count controls how many sprites are used to render
            this volume. Using more sprites will result in a smoother and brighter effect, at a slight performance penalty. Don't
            touch the flags unless you know what you're doing (they should be off by default).
            
            Be careful with the 'fuzzy' flag! It
            should be used on very wide light volumes to make them blend smoothly into solid geometry rather than "cutting" into the
            zbuffer. Using this feature will make light volumes several times slower when they fill a large portion of the screen.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.LightVolumeVolumeBlock.OffsetFunction">
            <summary>
            This function controls the offset along the projected forward axis of the light volume. The output range of this function
            is the distance in WORLD UNITS from the origin where the first and last sprite are rendered. The input to this function
            is the fractional value (from 0 to 1) along the projected axis. Using a transition function such as "late" will result in
            more sprites being bunched up towards the origin and spaced further apart near the end.
            
            Note that this and other
            functions in this tag have a range-input, which is controlled by the output of the FACING function below.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.LightVolumeVolumeBlock.RadiusFunction">
            <summary>
            This function controls the radius in WORLD UNITS of each sprite along the projected forward axis. Using a smaller min
            value and a larger max value results in a light volume that looks like a cone.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.LightVolumeVolumeBlock.BrightnessFunction">
            <summary>
            This function controls the overall brightness (in [0,1]) of each sprite along the projected forward axis. Note that since
            the sprites are additive, they will be brighter in areas where they overlap more even if this function is constant, so it
            may be useful to use the brightness function to compensate for this.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.LightVolumeVolumeBlock.ColorFunction">
            <summary>
            This function controls the color of each sprite along the projected forward axis. Color is multiplied by brightness to
            produce the final color that will be applied to the sprite.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.LightVolumeVolumeBlock.FacingFunction">
            <summary>
            The input to this function is the facing angle between the light volume and the camera. Zero represents facing towards
            (parallel) or away from the camera and 1.0 represents facing perpendicular to the camera.
            
            The output of this function is
            fed into the range-input of the functions above.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.LightVolumeVolumeBlock.RadiusFracMin">
            <summary>
            ADVANCED STUFF!! Don't change these values!!
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.LightVolumeVolumeBlock.LightVolumeAspectBlock.AlongAxis">
            <summary>
            These function control the screenspace aspect ratio of each sprite relative to the projected forward axis. Note that
            there is no range-input to these functions, because it would not make sense to stretch sprites when the light volume is
            facing directly towards or away from the camera (which way would we stretch them?)
            </summary>
            <summary>
            Values higher than 1 along the axis will cause sprites to elongate and overlap more regardless of the orientation of the
            light volume, whereas values lower than 1 will cause sprite separation.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.LightVolumeVolumeBlock.LightVolumeAspectBlock.AwayFromAxis">
            <summary>
            Values higher than 1 away from the axis will cause the light volume to appear thicker.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.LightVolume.LightVolumeVolumeBlock.LightVolumeAspectBlock.ParallelScale">
            <summary>
            When the light volume is viewed directly towards (parallel) or away from the camera, the scale factors above are
            interpolated towards this constant value. The threshold angle controls when the light volume is considered to be 100%
            parallel for these computations. The exponent controls how quickly the transition from using the perpendicular scale
            factors to using the parallel scale factor happens, e.g.:
            
            * exponent=0.0 -> perpendicular scale factors will always be
            used unless below threshold angle
            * exponent=0.1 -> transition quickly as viewing angle becomes perpendicular
            *
            exponent=1.0 -> transition smoothly between perpendicular and parallel
            * exponent=9.0 -> transition quickly as viewing
            angle becomes parallel
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.Flags">
            <summary>
            Note that if the type is not STANDARD, then the 'collide_with_stuff' and material effects will not have any effect. In
            addition, the 'natural_length' will not have an effect except as a means to compute the collision fraction.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.HorizontalRange">
            <summary>
            In world units, how far the noise extends horizontally. By default the horizontal range is along the world XY plane.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.VerticalRange">
            <summary>
            In world units, how far the noise extends vertically. By default the vertical range is along the world Z axis (up).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.Roughness">
            <summary>
            Roughness controls how the different 'octaves' of noise get scaled. Usually it is in the range [0,1] but it can be
            slightly higher or lower and still make sense (zero is actually a pretty decent value). The mathematical equation used is
            2^(-k*(1-r)) where 'k' is the octave index starting at 0 and 'r' is the roughness value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.Octave1Frequency">
            <summary>
            4 sprites is 3 octaves
            8 sprites is 4 octaves
            16 sprites is 5 octaves
            32 sprites is 6 octaves
            64 sprites is 7 octaves
            128
            sprites is 8 octaves
            256 sprites is 9 octaves, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.RangeScale">
            <summary>
            Scales range (amplitude) by collision fraction. The input to the function will be 1 if there is no collision, and 0 if
            the collision occurs at the origin.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.BrightnessScale">
            <summary>
            Scales brightness by collision fraction.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.LiquidCoreBlock.Thickness">
            <summary>
            In world units.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.LiquidCoreBlock.BrightnessTime">
            <summary>
            Periodic function based on time.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.LiquidCoreBlock.BrightnessFacing">
            <summary>
            Brightness when facing perpendicular versus parallel.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Liquid.LiquidArcBlock.LiquidCoreBlock.AlongAxisScale">
            <summary>
            Scale along-axis. Default should be 1.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.MaterialPhysics.GroundFrictionScale">
            <summary>
            the following fields modify the way a vehicle drives over terrain of this material type.
            </summary>
            <summary>
            fraction of original velocity parallel to the ground after one tick
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.MaterialPhysics.GroundFrictionNormalK1Scale">
            <summary>
            cosine of angle at which friction falls off
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.MaterialPhysics.GroundFrictionNormalK0Scale">
            <summary>
            cosine of angle at which friction is zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.MaterialPhysics.GroundDepthScale">
            <summary>
            depth a point mass rests in the ground
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.MaterialPhysics.GroundDampFractionScale">
            <summary>
            fraction of original velocity perpendicular to the ground after one tick
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Meter.StencilBitmaps">
            <summary>
            two bitmaps specifying the mask and the meter levels
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Meter.SourceBitmap">
            <summary>
            optional bitmap to draw into the unmasked regions of the meter (modulated by the colors below)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Meter.UnmaskDistance">
            <summary>
            fade from fully masked to fully unmasked this distance beyond full (and below empty)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Meter.MaskDistance">
            <summary>
            fade from fully unmasked to fully masked this distance below full (and beyond empty)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.DisappearDistance">
            <summary>
            If a model is further away than the LOD reduction distance, it will be reduced to that LOD.
            So the L1 reduction distance
            should be really long and the L5 reduction distance should be really short.
            This means distances should be in descending
            order, e.g. 5 4 3 2 1.
            
            Note that if we run out of memory or too many models are on screen at once, the engine may
            reduce
            models to a lower LOD BEFORE they reach the reduction distance for that LOD.
            
            If a model has a begin fade distance
            and disappear distance, it will begin fading out at that distance,
            reaching zero alpha and disappearing at the disappear
            distance. These distances should be greater than all
            of the LOD reduction distances.
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.DefaultDialogue">
            <summary>
            The default dialogue tag for this model (overriden by variants)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.DefaultDialogueEffect">
            <summary>
            The default dialogue tag for this model (overriden by variants)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.HologramShader">
            <summary>
            hologram shader is applied whenever the control function from it's object is non-zero
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.ModelVariantBlock.ModelVariantRegionBlock.SortOrder">
            <summary>
            negative values mean closer to the camera
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.ModelVariantBlock.ModelVariantRegionBlock.ModelVariantPermutationBlock.ModelVariantStateBlock.LoopingEffect">
            <summary>
            played while the model is in this state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalIndirectMaterialName">
            <summary>
            absorbes AOE or child damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.IndirectDamageSection">
            <summary>
            absorbes AOE or child damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.MinimumStunDamage">
            <summary>
            the minimum damage required to stun this object's health
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.StunTime">
            <summary>
            the length of time the health stay stunned (do not recharge) after taking damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.RechargeTime">
            <summary>
            the length of time it would take for the shields to fully recharge after being completely depleted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.RechargeFraction">
            <summary>
            0 defaults to 1 - to what maximum level the body health will be allowed to recharge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.MaximumShieldVitality">
            <summary>
            the default initial and maximum shield vitality of this object
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.MinimumStunDamage1">
            <summary>
            the minimum damage required to stun this object's shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.StunTime1">
            <summary>
            the length of time the shields stay stunned (do not recharge) after taking damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.RechargeTime1">
            <summary>
            the length of time it would take for the shields to fully recharge after being completely depleted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalDamageSectionBlock.Flags">
            <summary>
            * absorbs body damage: damage to this section does not count against body vitality
            * headshottable: takes extra headshot
            damage when shot
            * ignores shields: damage to this section bypasses shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalDamageSectionBlock.VitalityPercentage">
            <summary>
            percentage of total object vitality
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalDamageSectionBlock.InstantaneousDamageRepsonseBlock.ConstraintDamageType">
            <summary>
            * if you specify a constraint group name (see lower section of this block)
              you can specify a constraint damage
            *
            loosening a constraint takes it out of the rigid state - activates it
            * destroying a constraint sets the attached body
            free
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalDamageSectionBlock.InstantaneousDamageRepsonseBlock.Flags">
            <summary>
            * kills object: when the response fires the object dies regardless of its current health
            * inhibits x: from halo 1 -
            disallows basic behaviors for a unit
            * forces drop weapon: from halo 1 - makes the unit drop its current weapon
            * kills
            weapon x trigger: destroys the x trigger on the unit's current weapon
            * destroys object: when the response fires the
            object is destroyed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalDamageSectionBlock.InstantaneousDamageRepsonseBlock.DamageThreshold">
            <summary>
            repsonse fires after crossing this threshold.  1=full health
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalDamageSectionBlock.InstantaneousDamageRepsonseBlock.ResponseDelay">
            <summary>
            If desired, you can specify a delay until the response fires.This delay is pre-empted if another timed response for the
            same section fires.The delay effect plays while the timer is counting down
            </summary>
            <summary>
            in seconds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalDamageSectionBlock.InstantaneousDamageRepsonseBlock.ConstraintGroupName">
            <summary>
            - a response can destroy a single constraint by naming it explicitly.
            - alternatively it can randomly destroy a single
            constraint from a specified group if the "destroy one group constraint" flag is set
            - also it can destroy all constraints
            in a specified group if the "destroy all group constraints" flag is set
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalDamageSectionBlock.InstantaneousDamageRepsonseBlock.SkipFraction">
            <summary>
            0.0 always fires, 1.0 never fires
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalDamageSectionBlock.InstantaneousDamageRepsonseBlock.DestroyedChildObjectMarkerName">
            <summary>
            when this response fires, any children objects created at the supplied marker name will be destroyed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.GlobalDamageSectionBlock.InstantaneousDamageRepsonseBlock.TotalDamageThreshold">
            <summary>
            scale on total damage section vitality
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalDamageInfoBlock.DamageSeatInfoBlock.DirectDamageScale">
            <summary>
            0==no damage, 1==full damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.ModelTargetBlock.MarkerName">
            <summary>
            multiple markers become multiple spheres of the same radius
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.ModelTargetBlock.Size">
            <summary>
            sphere radius
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.ModelTargetBlock.ConeAngle">
            <summary>
            the target is only visible when viewed within this angle of the marker's x axis
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.ModelTargetBlock.DamageSection">
            <summary>
            the target is associated with this damage section
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.ModelTargetBlock.Variant">
            <summary>
            the target will only appear with this variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.ModelTargetBlock.TargetingRelevance">
            <summary>
            higher relevances turn into stronger magnetisms
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Model.GlobalScenarioLoadParametersBlock.Scenario">
            <summary>
            strip-variant variant-name
            strips a given variant out of the model tag
            strip-dialogue
            strips all the dialogue for this
            model i.e. cinematic only
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.WeaponTypeBlock.AnimationTransitionBlock.FullName">
            <summary>
            name of the mode &amp; state of the source
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.WeaponTypeBlock.AnimationTransitionBlock.AnimationTransitionStateStructBlock.StateName">
            <summary>
            name of the state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.WeaponTypeBlock.AnimationTransitionBlock.AnimationTransitionStateStructBlock.IndexA">
            <summary>
            first level sub-index into state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.WeaponTypeBlock.AnimationTransitionBlock.AnimationTransitionStateStructBlock.IndexB">
            <summary>
            second level sub-index into state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.WeaponTypeBlock.AnimationTransitionBlock.AnimationTransitionDestinationBlock.FullName">
            <summary>
            name of the mode &amp; state this transitions to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.WeaponTypeBlock.AnimationTransitionBlock.AnimationTransitionDestinationBlock.Mode">
            <summary>
            name of the mode
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.WeaponTypeBlock.AnimationTransitionBlock.AnimationTransitionDestinationBlock.AnimationDestinationStateStructBlock.StateName">
            <summary>
            name of the state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.WeaponTypeBlock.AnimationTransitionBlock.AnimationTransitionDestinationBlock.AnimationDestinationStateStructBlock.FrameEventLink">
            <summary>
            which frame event to link to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.WeaponTypeBlock.AnimationTransitionBlock.AnimationTransitionDestinationBlock.AnimationDestinationStateStructBlock.IndexA">
            <summary>
            first level sub-index into state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.WeaponTypeBlock.AnimationTransitionBlock.AnimationTransitionDestinationBlock.AnimationDestinationStateStructBlock.IndexB">
            <summary>
            second level sub-index into state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.AnimationIkBlock.Marker">
            <summary>
            the marker name on the object being attached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.WeaponClassBlock.AnimationIkBlock.AttachToMarker">
            <summary>
            the marker name object (weapon, vehicle, etc.) the above marker is being attached to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.AnimationIkBlock.Marker">
            <summary>
            the marker name on the object being attached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.AnimationModeBlock.AnimationIkBlock.AttachToMarker">
            <summary>
            the marker name object (weapon, vehicle, etc.) the above marker is being attached to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ModelAnimationGraph.AnimationGraphContentsStructBlock.VehicleSuspensionBlock.RegionName">
            <summary>
            Only Necessary for suspensions with a destroyed state
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.MouseCursorDefinition.MouseCursorBitmaps">
            <summary>
            0 - Normal mouse cursor
            1 - Busy mouse cursor
            2 - Hover mouse cursor
            3 - Text select mouse cursor
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.MultiplayerGlobals.MultiplayerRuntimeBlock.MultiplayerConstantsBlock.VehicleNearbyPlayerDist">
            <summary>
            how nearby a player is to count a vehicle as 'occupied'
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.MultiplayerScenarioDescription.ScenarioDescriptionBlock.DescriptiveBitmap">
            <summary>
            these provide the info required by the UI to load a net map
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.MultiplayerScenarioDescription.ScenarioDescriptionBlock.ScenarioTagDirectoryPath">
            <summary>
            this is the path to the directory containing the scenario tag file of the same name
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.NewHudDefinition.HudBitmapWidgets.HudWidgetStateDefinitionStructBlock.YUnitFlags">
            <summary>
            this section is split up into YES and NO flags.
            a widget will draw if any of it's YES flags are true,
            but it will NOT
            draw if any of it's NO flags are true.
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.NewHudDefinition.HudBitmapWidgets.HudWidgetEffectBlock.Flags">
            <summary>
            allow the scaling, rotation, and offsetting of widgets
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.NewHudDefinition.HudTextWidgets.Flags">
            <summary>
            string is a number: treats the inputted string id as a function name, not a string name
            
            force 2-digit number: when used
            in combination with above, forces output to be a 2-digit numberwith leading zeros if necessary
            
            force 3-digit number:
            same as above, but with 3 digits instead of 2
            
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.NewHudDefinition.HudTextWidgets.HudWidgetStateDefinitionStructBlock.YUnitFlags">
            <summary>
            this section is split up into YES and NO flags.
            a widget will draw if any of it's YES flags are true,
            but it will NOT
            draw if any of it's NO flags are true.
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.NewHudDefinition.HudTextWidgets.HudWidgetEffectBlock.Flags">
            <summary>
            allow the scaling, rotation, and offsetting of widgets
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.NewHudDefinition.NewHudDashlightDataStructBlock.LowClipCutoff">
            <summary>
            only relevant to new hud tags for weapons
            </summary>
            <summary>
            the cutoff for showing the reload dashlight
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.NewHudDefinition.NewHudDashlightDataStructBlock.LowAmmoCutoff">
            <summary>
            the cutoff for showing the low ammo dashlight
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.NewHudDefinition.NewHudDashlightDataStructBlock.AgeCutoff">
            <summary>
            the age cutoff for showing the low battery dashlight
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.NewHudDefinition.HudScreenEffectWidgets.HudWidgetStateDefinitionStructBlock.YUnitFlags">
            <summary>
            this section is split up into YES and NO flags.
            a widget will draw if any of it's YES flags are true,
            but it will NOT
            draw if any of it's NO flags are true.
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.Color">
            <summary>
            controls how the color of the particle changes as
            a function of its input
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.Alpha">
            <summary>
            seperate from color, controls how the particle fades
            as a function of its input
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.Scale">
            <summary>
            controls how the size of a particle changes as
            a function of its input
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.Rotation">
            <summary>
            controls how the particle rotates. 0= 0 degrees, .5= 180 degrees, 1.0= 360 degrees
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.FrameIndex">
            <summary>
            provides finer grain control over how the animation
            happens.  a output of 0.25 means that when that input
            is fed in, the
            particle will be 25% of the way through
            its animation.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.CollisionEffect">
            <summary>
            collision occurs when particle physics has collision, death spawned when particle dies
            </summary>
            <summary>
            effect, material effect or sound spawned when this particle collides with something
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.DeathEffect">
            <summary>
            effect, material effect or sound spawned when this particle dies
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.Locations">
            <summary>
            Locations:
            up - particles shoot straight up
            gravity - particles shoot straight down
            NONE - opposite of particle direction
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.EffectLocationsBlock.MarkerName">
            <summary>
            In addition to the marker in the render model there are several special marker names:
            
            replace
            Replace allows you to use
            the same effect with different markers. Damage transition effects support this for example.
            
            gravity, up
            The direction of
            gravity (down) and the opposite direction (up).  Always supplied
            
            normal
            Vector pointing directly away from the surface
            you collided with. Supplied for effects from collision.
            
            forward
            The 'negative incident' vector i.e. the direction the
            object is moving in. Most commonly used to generated decals. Supplied for effects from collision.
            
            backward
            The
            'incident' vector i.e. the opposite of the direction the object is moving in. Supplied for effects from
            collision.
            
            reflection
            The way the effect would reflect off the surface it hit. Supplied for effects from
            collision.
            
            root
            The object root (pivot). These can used for all effects which are associated with an object.
            
            impact
            The
            location of a havok impact.
            
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.ParticleSystemDefinitionBlockNew.SortBias">
            <summary>
            use values between -10 and 10 to move closer and farther from camera (positive is closer)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.ParticleSystemDefinitionBlockNew.LodInDistance">
            <summary>
            defaults to 0.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.ParticleSystemDefinitionBlockNew.LodFeatherInDelta">
            <summary>
            defaults to 0.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.ParticleSystemDefinitionBlockNew.LodOutDistance">
            <summary>
            defaults to 30.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.ParticleSystemDefinitionBlockNew.LodFeatherOutDelta">
            <summary>
            defaults to 10.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Particle.ParticleSystemDefinitionBlockNew.ParticleSystemEmitterDefinitionBlock.RelativeDirection">
            <summary>
            particle initial velocity direction relative to the location's forward
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.ScaleX">
            <summary>
            scale of model on x axis
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.ScaleY">
            <summary>
            scale of model on y axis
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.ScaleZ">
            <summary>
            scale of model on z axis
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.Rotation">
            <summary>
            rotation where 0=0 degrees, 0.5=180 degrees, 1.0=360 degrees
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.CollisionEffect">
            <summary>
            collision occurs when particle physics has collision, death spawned when particle dies
            </summary>
            <summary>
            effect, material effect or sound spawned when this particle collides with something
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.DeathEffect">
            <summary>
            effect, material effect or sound spawned when this particle dies
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.Locations">
            <summary>
            Locations:
            up - particles shoot straight up
            gravity - particles shoot straight down
            NONE - opposite of particle direction
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.EffectLocationsBlock.MarkerName">
            <summary>
            In addition to the marker in the render model there are several special marker names:
            
            replace
            Replace allows you to use
            the same effect with different markers. Damage transition effects support this for example.
            
            gravity, up
            The direction of
            gravity (down) and the opposite direction (up).  Always supplied
            
            normal
            Vector pointing directly away from the surface
            you collided with. Supplied for effects from collision.
            
            forward
            The 'negative incident' vector i.e. the direction the
            object is moving in. Most commonly used to generated decals. Supplied for effects from collision.
            
            backward
            The
            'incident' vector i.e. the opposite of the direction the object is moving in. Supplied for effects from
            collision.
            
            reflection
            The way the effect would reflect off the surface it hit. Supplied for effects from
            collision.
            
            root
            The object root (pivot). These can used for all effects which are associated with an object.
            
            impact
            The
            location of a havok impact.
            
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.ParticleSystemDefinitionBlockNew.SortBias">
            <summary>
            use values between -10 and 10 to move closer and farther from camera (positive is closer)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.ParticleSystemDefinitionBlockNew.LodInDistance">
            <summary>
            defaults to 0.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.ParticleSystemDefinitionBlockNew.LodFeatherInDelta">
            <summary>
            defaults to 0.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.ParticleSystemDefinitionBlockNew.LodOutDistance">
            <summary>
            defaults to 30.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.ParticleSystemDefinitionBlockNew.LodFeatherOutDelta">
            <summary>
            defaults to 10.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ParticleModel.ParticleSystemDefinitionBlockNew.ParticleSystemEmitterDefinitionBlock.RelativeDirection">
            <summary>
            particle initial velocity direction relative to the location's forward
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PatchyFog.Flags">
            <summary>
            Use the separate_layer_depths flag carefully, it's expensive!
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PatchyFog.NoiseMapScale">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PatchyFog.NoiseVerticalScaleForward">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PatchyFog.NoiseVerticalScaleUp">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PatchyFog.NoiseOpacityScaleUp">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PatchyFog.WindPeriod">
            <summary>
            0 defaults to 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Physics.Radius">
            <summary>
            positive uses old inferior physics, negative uses new improved physics
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.LowFreqDeactivationScale">
            <summary>
            0 is default (1). LESS than 1 deactivates less aggressively. GREATER than 1 is more agressive.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.HighFreqDeactivationScale">
            <summary>
            0 is default (1). LESS than 1 deactivates less aggressively. GREATER than 1 is more agressive.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PolyhedronFourVectors">
            <summary>
            Attempt no landings there.  And you can't edit anything below this point, so why even look at it?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhantomTypesBlock.MarkerName">
            <summary>
            you don't need this if you're just generating effects.  If empty it defaults to the up of the object
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhantomTypesBlock.AlignmentMarkerName">
            <summary>
            you don't need this if you're just generating effects.  If empty it defaults to "marker name"
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhantomTypesBlock.Padding1">
            <summary>
            0 - means do nothing
            CENTER: motion towards marker position 
            AXIS: motion towards marker axis, such that object is on the
            axis
            DIRECTION: motion along marker direction
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhantomTypesBlock.HookesLawE">
            <summary>
            0 if you don't want this to behave like spring.  1 is a good starting point if you do.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhantomTypesBlock.LinearDeadRadius">
            <summary>
            radius from linear motion origin in which acceleration is dead.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhantomTypesBlock.AlignmentHookesLawE">
            <summary>
            0 - means do nothing
            ALIGNMENT: algin objects in the phantom with the marker
            SPIN: spin the object about the marker axis
            </summary>
            <summary>
            0 if you don't want this to behave like spring.  1 is a good starting point if you do.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhysicsModelNodeConstraintEdgeBlock.NodeAMaterial">
            <summary>
            if you don't fill this out we will pluck the material from the first primitive, of the first rigid body attached to node
            a
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhysicsModelNodeConstraintEdgeBlock.NodeBMaterial">
            <summary>
            if you don't fill this out we will pluck the material from the first primitive, of the first rigid body attached to node
            b, if node b is none we use whatever material a has
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhysicsModelNodeConstraintEdgeBlock.PhysicsModelConstraintEdgeConstraintBlock.Friction">
            <summary>
            0 is the default (takes what it was set in max) anything else overrides that value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhysicsModelNodeConstraintEdgeBlock.PhysicsModelConstraintEdgeConstraintBlock.FlagsValue.IsRigid">
            <summary>
            this constraint makes the edge rigid until it is loosened by damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.PhysicsModelNodeConstraintEdgeBlock.PhysicsModelConstraintEdgeConstraintBlock.FlagsValue.DisableEffects">
            <summary>
            this constraint will not generate impact effects
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.RigidBodiesBlock.InertiaTensorScale">
            <summary>
            0.0 defaults to 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.RigidBodiesBlock.LinearDamping">
            <summary>
            this goes from 0-10 (10 is really, really high)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.RigidBodiesBlock.AngularDamping">
            <summary>
            this goes from 0-10 (10 is really, really high)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.RigidBodiesBlock.BoundingSpherePad">
            <summary>
            the bounding sphere for this rigid body will be outset by this much
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.RigidBodiesBlock.FlagsValue.DisableEffects">
            <summary>
            this rigid body will not generate impact effects unless it hits another dynamic rigid body that does
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.RigidBodiesBlock.FlagsValue.DoesNotInteractWEnvironment">
            <summary>
            set this flag if this rigid bodies won't touch the environment, this allows us to open up some
            optimizations
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.RigidBodiesBlock.FlagsValue.BestEarlyMoverBody">
            <summary>
            if you have either of the early mover flags set in the object definitoin this body will be choosen as
            the one to make every thing local to, otherwise I pick :-)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PhysicsModel.RigidBodiesBlock.FlagsValue.HasNoPhantomPowerVersion">
            <summary>
            don't check this flag without talking to eamon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PlanarFog.Flags">
            <summary>
            Please don't use these flags unless you know what you're doing! Come talk to Bernie first.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PlanarFog.MaximumDensity">
            <summary>
            planar fog density is clamped to this value
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PlanarFog.OpaqueDistance">
            <summary>
            the fog becomes opaque (maximum density) at this distance from the viewer
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PlanarFog.OpaqueDepth">
            <summary>
            the fog becomes opaque at this distance below fog plane
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PlanarFog.AtmosphericPlanarDepth">
            <summary>
            distances above fog plane where atmospheric fog supercedes planar fog and visa-versa
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PlanarFog.EyeOffsetScale">
            <summary>
            negative numbers are bad, mmmkay?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PlanarFog.EnvironmentDampingFactor">
            <summary>
            scales the surrounding background sound by this much
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PlanarFog.BackgroundSoundGain">
            <summary>
            scale for fog background sound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PlanarFog.PlanarFogPatchyFogBlock.MinDepthFraction">
            <summary>
            in range (0,max_depth) world units, where patchy fog starts fading in
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PointPhysics.SurfaceFriction">
            <summary>
            when hitting the ground or interior, percentage of velocity lost in one collision
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PointPhysics.Elasticity">
            <summary>
            0.0 is inelastic collisions (no bounce) 1.0 is perfectly elastic (reflected velocity equals incoming velocity)
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.Gen2.PointPhysics.FlagsValue">
            <summary>
            air        0.0011 (g/mL)
            snow       0.128
            cork       0.24
            cedar      0.43
            oak        0.866
            ice        0.897
            water     
            1.0
            soil       1.1
            cotton     1.491
            dry earth  1.52
            sand       1.7
            granite    2.4
            glass      2.5
            iron       7.65
            steel   
            7.77
            lead       11.37
            uranium    18.74
            gold       19.3
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PointPhysics.FlagsValue.UsesSimpleWind">
            <summary>
            the wind on this point won't have high-frequency variations
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PointPhysics.FlagsValue.UsesDampedWind">
            <summary>
            the wind on this point will be artificially slow
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.PointPhysics.FlagsValue.NoGravity">
            <summary>
            the point is not affected by gravity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ArmingTime">
            <summary>
            won't detonate before this time elapses
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.Timer">
            <summary>
            detonation countdown (zero is untimed)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MinimumVelocity">
            <summary>
            detonates when slowed below this velocity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MaximumRange">
            <summary>
            detonates after travelling this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.MaterialEffectRadius">
            <summary>
            radius within we will generate material effects
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.AirGravityScale">
            <summary>
            the proportion of normal gravity applied to the projectile when in air.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.AirDamageRange">
            <summary>
            the range over which damage is scaled when the projectile is in air.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.WaterGravityScale">
            <summary>
            the proportion of normal gravity applied to the projectile when in water.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.WaterDamageRange">
            <summary>
            the range over which damage is scaled when the projectile is in water.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.InitialVelocity">
            <summary>
            bullet's velocity when inflicting maximum damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.FinalVelocity">
            <summary>
            bullet's velocity when inflicting minimum damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.AccelerationRange">
            <summary>
            what distance range the projectile goes from initial velocity to final velocity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ProjectileMaterialResponseBlock.Response">
            <summary>
            (if the potential result, below, fails to happen)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ProjectileMaterialResponseBlock.AngularNoise">
            <summary>
            the angle of incidence is randomly perturbed by at most this amount to simulate irregularity.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ProjectileMaterialResponseBlock.VelocityNoise">
            <summary>
            the velocity is randomly perturbed by at most this amount to simulate irregularity.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ProjectileMaterialResponseBlock.InitialFriction">
            <summary>
            the fraction of the projectile's velocity lost on penetration
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ProjectileMaterialResponseBlock.MaximumDistance">
            <summary>
            the maximum distance the projectile can travel through on object of this material
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ProjectileMaterialResponseBlock.ParallelFriction">
            <summary>
            the fraction of the projectile's velocity parallel to the surface lost on impact
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Projectile.ProjectileMaterialResponseBlock.PerpendicularFriction">
            <summary>
            the fraction of the projectile's velocity perpendicular to the surface lost on impact
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.RenderModel.Region.Name">
            <summary>
            The name of the region.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.RenderModel.Region.NodeMapOffset">
            <summary>
            The node map offset of the region.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.RenderModel.Region.NodeMapSize">
            <summary>
            The node map size of the region.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.RenderModel.Region.Permutations">
            <summary>
            The permutations belonging to the region.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.Gen2.RenderModel.Region.Permutation">
            <summary>
            A permutation of a region, associating a specific mesh with it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.RenderModel.Region.Permutation.Name">
            <summary>
            The name of the permutation as a string id.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.RenderModel.Region.Permutation.LodSectionIndices">
            <summary>
            The level-of-detail section indices of the permutation.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AtmosphericFogPalette">
            <summary>
            Editing Fog palette data will not behave as expected with split scenarios.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlagsValue.CortanaHack">
            <summary>
            Sorts Cortana in front of other transparent geometry.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlagsValue.AlwaysDrawSky">
            <summary>
            Always draws sky 0, even if no +sky polygons are visible.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlagsValue.DonTStripPathfinding">
            <summary>
            Always leaves pathfinding in, even for multiplayer scenario.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.Period">
            <summary>
            Period for above function (lower values make function oscillate quickly; higher values make it oscillate slowly).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.ScalePeriodBy">
            <summary>
            Multiply this function by above period
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.ScaleFunctionBy">
            <summary>
            Multiply this function by result of above function.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.WobbleFunction">
            <summary>
            Curve used for wobble.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.WobblePeriod">
            <summary>
            Time it takes for magnitude of this function to complete a wobble.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.WobbleMagnitude">
            <summary>
            Amount of random wobble in the magnitude.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.SquareWaveThreshold">
            <summary>
            If non-zero, all values above square wave threshold are snapped to 1.0, and all values below it are snapped to 0.0 to
            create a square wave.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.StepCount">
            <summary>
            Number of discrete values to snap to (e.g., step count of 5 snaps function to 0.00, 0.25, 0.50,0.75, or 1.00).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.SawtoothCount">
            <summary>
            Number of times this function should repeat (e.g., sawtooth count of 5 gives function value of 1.0 at each of 0.25, 0.50,
            and 0.75, as well as at 1.0).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.ScaleResultBy">
            <summary>
            Multiply this function (e.g., from a weapon, vehicle) final result of all of the above math.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.BoundsMode">
            <summary>
            Controls how bounds, below, are used.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.TurnOffWith">
            <summary>
            If specified function is off, so is this function.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.FlagsValue.Scripted">
            <summary>
            Level script will set this value; other settings here will be ignored.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.FlagsValue.Invert">
            <summary>
            Result of function is 1 minus actual result.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            Function does not deactivate when at or below lower bound.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.SquadsBlock.NormalDiffCount">
            <summary>
            initial number of actors on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.SquadsBlock.InsaneDiffCount">
            <summary>
            initial number of actors on insane difficulty (hard difficulty is midway between normal and insane)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.SquadsBlock.VehicleType">
            <summary>
            The following default values are used for spawned actors
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.SquadsBlock.ActorStartingLocationsBlock.SwarmCount">
            <summary>
            number of cretures in swarm if a swarm is spawned at this location
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.SquadsBlock.ActorStartingLocationsBlock.InitialMovementDistance">
            <summary>
            before doing anything else, the actor will travel the given distance in its forward direction
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ZoneBlock.FiringPositionsBlock.PositionLocal">
            <summary>
            Ctrl-N: Creates a new area and assigns it to the current selection of firing points.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiAnimationReferenceBlock.AnimationGraph">
            <summary>
            leave this blank to use the unit's normal animation graph
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.TriggerDistance">
            <summary>
            distance the player must enter before the conversation can trigger
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.RunToPlayerDist">
            <summary>
            if the 'involves player' flag is set, when triggered the conversation's participant(s) will run to within this distance
            of the player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.FlagsValue.StopIfDeath">
            <summary>
            this conversation will be aborted if any participant dies
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.FlagsValue.StopIfDamaged">
            <summary>
            an actor will abort this conversation if they are damaged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.FlagsValue.StopIfVisibleEnemy">
            <summary>
            an actor will abort this conversation if they see an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.FlagsValue.StopIfAlertedToEnemy">
            <summary>
            an actor will abort this conversation if they suspect an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.FlagsValue.PlayerMustBeVisible">
            <summary>
            this conversation cannot take place unless the participants can _see_ a nearby player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.FlagsValue.StopOtherActions">
            <summary>
            participants stop doing whatever they were doing in order to perform this conversation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.FlagsValue.KeepTryingToPlay">
            <summary>
            if this conversation fails initially, it will keep testing to see when it can play
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.FlagsValue.PlayerMustBeLooking">
            <summary>
            this conversation will not start until the player is looking at one of the participants
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.AiConversationParticipantBlock.UseThisObject">
            <summary>
            if a unit with this name exists, we try to pick them to start the conversation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.AiConversationParticipantBlock.SetNewName">
            <summary>
            once we pick a unit, we name it this
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.AiConversationBlock.AiConversationLineBlock.AddresseeParticipant">
            <summary>
            this field is only used if the addressee type is 'participant'
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.OrdersBlock.SecondarySetTriggerBlock.DialogueType">
            <summary>
            when this ending is triggered, launch a dialogue event of the given type
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.OrdersBlock.OrderEndingBlock.DialogueType">
            <summary>
            when this ending is triggered, launch a dialogue event of the given type
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.StructureBspBackgroundSoundPaletteBlock.InsideClusterSound">
            <summary>
            Play only when player is inside cluster.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioSpawnDataBlock.DynamicSpawnLowerHeight">
            <summary>
            Non-0 values here overload what appears in multiplayer_globals.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioSpawnDataBlock.StaticSpawnZoneBlock.Data">
            <summary>
            Lower and upper heights can be left at 0, in which case they use defaults.  Leaving relevant teams empty means all teams;
            leaving all games empty means all games.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioSpawnDataBlock.StaticSpawnZoneBlock1.Data">
            <summary>
            Lower and upper heights can be left at 0, in which case they use defaults.  Leaving relevant teams empty means all teams;
            leaving all games empty means all games.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioAtmosphericFogPalette.SpreadDistance">
            <summary>
            How far fog spreads into adjacent clusters: 0 defaults to 1.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioAtmosphericFogPalette.MaximumDensity">
            <summary>
            Fog density clamps to this value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioAtmosphericFogPalette.StartDistance">
            <summary>
            Before this distance, there is no fog.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioAtmosphericFogPalette.OpaqueDistance">
            <summary>
            Fog becomes opaque (maximum density) at this distance from viewer.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioAtmosphericFogPalette.MaximumDensity1">
            <summary>
            Fog density clamps to this value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioAtmosphericFogPalette.StartDistance1">
            <summary>
            Before this distance, there is no fog.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioAtmosphericFogPalette.OpaqueDistance1">
            <summary>
            Fog becomes opaque (maximum density) at this distance from viewer.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioAtmosphericFogPalette.PlanarColor">
            <summary>
            Planar fog, if present, is interpolated toward these values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.ScenarioAtmosphericFogPalette.PlanarMinDistanceBias">
            <summary>
            Don't ask.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.EcologyMargin">
            <summary>
            distance from ecology boundary that creature begins to be repulsed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.ProductionFrequency">
            <summary>
            How frequently boids are produced at one of the sources (limited by the max boid count)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.NeighborhoodRadius">
            <summary>
            Recommended initial values (for a sentinel-sized unit): 
            	neighborhood radius= 6.0 
            	avoidance radius= 3 
             forward scale=
            0.5 
             alignment scale= 0.5 
             avoidance scale= 1.0 
             leveling force scale= 0.1 
             perception angle= 120 
             average throttle=
            0.75 
             maximum throttle= 1.0 
             position scale= 1.0 
             position min radius= 3 
             position max radius = 9
            </summary>
            <summary>
            Flocks with a neighborhood radius of 0 don't FLOCK, per se (in the creature-creature interaction kind of way), but they
            are much cheaper. The best thing is to have a non-zero radius for small flocks, and a zero radius for large flocks (or
            for 'flow-flocks', ones with sources and sinks that are intended to create a steady flow of something). Note also that
            for flocks with a 0 neighborhood radius, the parameters for avoidance, alignment, position and perception angle are
            ignored entirely.
            </summary>
            <summary>
            distance within which one boid is affected by another
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.AvoidanceRadius">
            <summary>
            distance that a boid tries to maintain from another
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.ForwardScale">
            <summary>
            weight given to boid's desire to fly straight ahead
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.AlignmentScale">
            <summary>
            weight given to boid's desire to align itself with neighboring boids
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.AvoidanceScale">
            <summary>
            weight given to boid's desire to avoid collisions with other boids, when within the avoidance radius
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.LevelingForceScale">
            <summary>
            weight given to boids desire to fly level
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.SinkScale">
            <summary>
            weight given to boid's desire to fly towards its sinks
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.PerceptionAngle">
            <summary>
            angle-from-forward within which one boid can perceive and react to another
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.AverageThrottle">
            <summary>
            throttle at which boids will naturally fly
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.MaximumThrottle">
            <summary>
            maximum throttle applicable
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.PositionScale">
            <summary>
            weight given to boid's desire to be near flock center
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.PositionMinRadius">
            <summary>
            distance to flock center beyond which an attracting force is applied
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.PositionMaxRadius">
            <summary>
            distance to flock center at which the maximum attracting force is applied
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.MovementWeightThreshold">
            <summary>
            The threshold of accumulated weight over which movement occurs
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.DangerRadius">
            <summary>
            distance within which boids will avoid a dangerous object (e.g. the player)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.DangerScale">
            <summary>
            weight given to boid's desire to avoid danger
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.RandomOffsetScale">
            <summary>
            Recommended initial values: 
            	random offset scale= 0.2 
            	offset period bounds= 1, 3
            </summary>
            <summary>
            weight given to boid's random heading offset
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenario.FlockDefinitionBlock.FlockSourceBlock.Weight">
            <summary>
            probability of producing at this source
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.SquadsBlock.NormalDiffCount">
            <summary>
            initial number of actors on normal difficulty
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.SquadsBlock.InsaneDiffCount">
            <summary>
            initial number of actors on insane difficulty (hard difficulty is midway between normal and insane)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.SquadsBlock.VehicleType">
            <summary>
            The following default values are used for spawned actors
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.SquadsBlock.ActorStartingLocationsBlock.SwarmCount">
            <summary>
            number of cretures in swarm if a swarm is spawned at this location
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.SquadsBlock.ActorStartingLocationsBlock.InitialMovementDistance">
            <summary>
            before doing anything else, the actor will travel the given distance in its forward direction
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.ZoneBlock.FiringPositionsBlock.PositionLocal">
            <summary>
            Ctrl-N: Creates a new area and assigns it to the current selection of firing points.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiAnimationReferenceBlock.AnimationGraph">
            <summary>
            leave this blank to use the unit's normal animation graph
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.TriggerDistance">
            <summary>
            distance the player must enter before the conversation can trigger
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.RunToPlayerDist">
            <summary>
            if the 'involves player' flag is set, when triggered the conversation's participant(s) will run to within this distance
            of the player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.FlagsValue.StopIfDeath">
            <summary>
            this conversation will be aborted if any participant dies
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.FlagsValue.StopIfDamaged">
            <summary>
            an actor will abort this conversation if they are damaged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.FlagsValue.StopIfVisibleEnemy">
            <summary>
            an actor will abort this conversation if they see an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.FlagsValue.StopIfAlertedToEnemy">
            <summary>
            an actor will abort this conversation if they suspect an enemy
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.FlagsValue.PlayerMustBeVisible">
            <summary>
            this conversation cannot take place unless the participants can _see_ a nearby player
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.FlagsValue.StopOtherActions">
            <summary>
            participants stop doing whatever they were doing in order to perform this conversation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.FlagsValue.KeepTryingToPlay">
            <summary>
            if this conversation fails initially, it will keep testing to see when it can play
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.FlagsValue.PlayerMustBeLooking">
            <summary>
            this conversation will not start until the player is looking at one of the participants
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.AiConversationParticipantBlock.UseThisObject">
            <summary>
            if a unit with this name exists, we try to pick them to start the conversation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.AiConversationParticipantBlock.SetNewName">
            <summary>
            once we pick a unit, we name it this
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.AiConversationBlock.AiConversationLineBlock.AddresseeParticipant">
            <summary>
            this field is only used if the addressee type is 'participant'
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.OrdersBlock.SecondarySetTriggerBlock.DialogueType">
            <summary>
            when this ending is triggered, launch a dialogue event of the given type
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.OrdersBlock.OrderEndingBlock.DialogueType">
            <summary>
            when this ending is triggered, launch a dialogue event of the given type
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.EcologyMargin">
            <summary>
            distance from ecology boundary that creature begins to be repulsed
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.ProductionFrequency">
            <summary>
            How frequently boids are produced at one of the sources (limited by the max boid count)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.NeighborhoodRadius">
            <summary>
            Recommended initial values (for a sentinel-sized unit): 
            	neighborhood radius= 6.0 
            	avoidance radius= 3 
             forward scale=
            0.5 
             alignment scale= 0.5 
             avoidance scale= 1.0 
             leveling force scale= 0.1 
             perception angle= 120 
             average throttle=
            0.75 
             maximum throttle= 1.0 
             position scale= 1.0 
             position min radius= 3 
             position max radius = 9
            </summary>
            <summary>
            Flocks with a neighborhood radius of 0 don't FLOCK, per se (in the creature-creature interaction kind of way), but they
            are much cheaper. The best thing is to have a non-zero radius for small flocks, and a zero radius for large flocks (or
            for 'flow-flocks', ones with sources and sinks that are intended to create a steady flow of something). Note also that
            for flocks with a 0 neighborhood radius, the parameters for avoidance, alignment, position and perception angle are
            ignored entirely.
            </summary>
            <summary>
            distance within which one boid is affected by another
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.AvoidanceRadius">
            <summary>
            distance that a boid tries to maintain from another
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.ForwardScale">
            <summary>
            weight given to boid's desire to fly straight ahead
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.AlignmentScale">
            <summary>
            weight given to boid's desire to align itself with neighboring boids
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.AvoidanceScale">
            <summary>
            weight given to boid's desire to avoid collisions with other boids, when within the avoidance radius
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.LevelingForceScale">
            <summary>
            weight given to boids desire to fly level
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.SinkScale">
            <summary>
            weight given to boid's desire to fly towards its sinks
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.PerceptionAngle">
            <summary>
            angle-from-forward within which one boid can perceive and react to another
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.AverageThrottle">
            <summary>
            throttle at which boids will naturally fly
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.MaximumThrottle">
            <summary>
            maximum throttle applicable
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.PositionScale">
            <summary>
            weight given to boid's desire to be near flock center
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.PositionMinRadius">
            <summary>
            distance to flock center beyond which an attracting force is applied
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.PositionMaxRadius">
            <summary>
            distance to flock center at which the maximum attracting force is applied
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.MovementWeightThreshold">
            <summary>
            The threshold of accumulated weight over which movement occurs
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.DangerRadius">
            <summary>
            distance within which boids will avoid a dangerous object (e.g. the player)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.DangerScale">
            <summary>
            weight given to boid's desire to avoid danger
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.RandomOffsetScale">
            <summary>
            Recommended initial values: 
            	random offset scale= 0.2 
            	offset period bounds= 1, 3
            </summary>
            <summary>
            weight given to boid's random heading offset
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioAiResource.FlockDefinitionBlock.FlockSourceBlock.Weight">
            <summary>
            probability of producing at this source
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioClusterDataResource.StructureBspBackgroundSoundPaletteBlock.InsideClusterSound">
            <summary>
            Play only when player is inside cluster.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioClusterDataResource.ScenarioAtmosphericFogPalette.SpreadDistance">
            <summary>
            How far fog spreads into adjacent clusters: 0 defaults to 1.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioClusterDataResource.ScenarioAtmosphericFogPalette.MaximumDensity">
            <summary>
            Fog density clamps to this value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioClusterDataResource.ScenarioAtmosphericFogPalette.StartDistance">
            <summary>
            Before this distance, there is no fog.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioClusterDataResource.ScenarioAtmosphericFogPalette.OpaqueDistance">
            <summary>
            Fog becomes opaque (maximum density) at this distance from viewer.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioClusterDataResource.ScenarioAtmosphericFogPalette.MaximumDensity1">
            <summary>
            Fog density clamps to this value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioClusterDataResource.ScenarioAtmosphericFogPalette.StartDistance1">
            <summary>
            Before this distance, there is no fog.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioClusterDataResource.ScenarioAtmosphericFogPalette.OpaqueDistance1">
            <summary>
            Fog becomes opaque (maximum density) at this distance from viewer.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioClusterDataResource.ScenarioAtmosphericFogPalette.PlanarColor">
            <summary>
            Planar fog, if present, is interpolated toward these values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioClusterDataResource.ScenarioAtmosphericFogPalette.PlanarMinDistanceBias">
            <summary>
            Don't ask.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioStructureBsp.VehicleFloor">
            <summary>
            Height below which vehicles get pushed up by an unstoppable force.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioStructureBsp.VehicleCeiling">
            <summary>
            Height above which vehicles get pushed down by an unstoppable force.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioStructureBsp.VehicleSpericalLimitRadius">
            <summary>
            Distances this far and longer from limit origin will pull you back in.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioStructureBsp.VehicleSpericalLimitCenter">
            <summary>
            Center of space in which vehicle can move.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioStructureBsp.StructureBspBackgroundSoundPaletteBlock.InsideClusterSound">
            <summary>
            Play only when player is inside cluster.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScenarioStructureLightmap.SearchDistanceLowerBound">
            <summary>
            The following fields control the behavior of the lightmapper
            
            RADIANCE ESTIMATE SEARCH DISTANCE UPPER BOUND: the largest
            distance the code will look for photons. bigger levels need a bigger search radius.  Measured, in world units, 0.0
            defaults to 1.0
            
            RADIANCE ESTIMATE SEARCH DISTANCE LOWER BOUND: the smallest distance the code will look for photons.
            bigger levels need a bigger search radius.  Measured, in world units, 0.0 defaults to 1.0
            
            LUMINELS PER WORLD UNIT: how
            many lightmap pixels there should be per world unit.  0.0 defaults to 3.0
            
            OUTPUT WHITE REFERENCE: for experimentation -
            what wattage the lightmapper considers "white" to be for output.  0.0 defaults to 1.0
            
            OUTPUT BLACK REFERENCE: for
            experimentation - what wattage the lightmapper considers "black" to be for output.  0.0 defaults to 0.0
            
            OUTPUT SCHLICK
            PARAMETER: controls the way midtones are mapped.  0.0 defaults to 4.5
            
            DIFFUSE MAP SCALE: controls how diffuse maps are
            scaled.  0.0 defaults to 1.5
            
            PRT SUN SCALE: 0.0 defaults to 100.0
            
            PRT SKY SCALE: 0.0 defaults to 1.0
            
            PRT INDIRECT
            SCALE: 0.0 defaults to 1.0
            
            PRT SCALE: you must set this value.
            
            PRT SURFACE LIGHT SCALE: 0.0 defaults to 1.0
            
            PRT
            SCENARIO LIGHT SCALE: 0.0 defaults to 1.0
            
            LIGHTPROBE INTERPOLATION OVERIDE(speed): overide the default sampling behavior
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.PathfindingPolicy">
            <summary>
            Indicate whether, by default, we should create pathfinding data for this type of scenery
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.LightmappingPolicy">
            <summary>
            Indicate whether, by default, how we should lightmap this type of scenery
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Scenery.FlagsValue1.PhysicallySimulates">
            <summary>
            stimulates?
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScreenEffect.Padding">
            <summary>
            A screen effect is essentially a collection of pass references, each one corresponding to a shader pass reference from
            the template. Note that only shader passes in the TRANSPARENT layer are considered during screen effect rendering.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScreenEffect.RasterizerScreenEffectPassReferenceBlock.LayerPassIndex">
            <summary>
            Used to control which shader pass implementations are used depending on whether the primary and/or secondary external
            inputs are greater than zero. An implementation of -1 will not draw anything.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScreenEffect.RasterizerScreenEffectPassReferenceBlock.Stage0Mode">
            <summary>
            * DEFAULT: Use for mask bitmaps that are mirrored and offset through the texcoords supplied to the screen effect (e.g.
            through the weapon HUD interface). The shader system must handle scaling.
            
            * VIEWPORT NORMALIZED: Use when copying from
            texaccum or some other buffer or when applying a texture that is not an interface mask (e.g. another kind of mask, a
            noise map, etc. which is not mirrored or offset through the weapon HUD interface). Texture coordinates will range from
            [0,1][0,1] within the viewport, and the shader system must handle scaling if the bitmap is a linear target or an
            interface bitmap.
            
            * VIEWPORT RELATIVE: Should not be used! This mode was necessary before we had he ability for the
            shader system to scale by texture resolution. Texture coordinates will range from [0,viewport_size_x][0,viewport_size_y]
            within the viewport.
            
            * FRAMEBUFFER RELATIVE: Use when copying from the framebuffer. Texture coordinates will range from
            [viewport_bounds.x0,viewport_bounds.x1][viewport_bounds.y0,viewport_bounds.y1] within the viewport. Let the shader system
            assume normalized [0,1] coordinate range.
            
            * ZERO: Use when doing dependent-z reads. Texture coordinates will be zero
            before applying offset (in advanced control block). Offset should be {1/(z_max-z_min), 0, -z_min/(z_max-z_min), 0} where
            z_min and z_max are in world units, and the "xy scaled by z_far" flag should be checked.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ScreenEffect.RasterizerScreenEffectPassReferenceBlock.RasterizerScreenEffectConvolutionBlock.Flags">
            <summary>
            Convolution blurs the target of this pass reference to the SCREEN EFFECT CONVOLUTION buffer, which is accessible in the
            shader system through a texture extern. It is not cheap especially for large convolution amounts, so please use it
            sparingly!! Note that the resolution will be clamped to 64x64 minimum and 768000 pixels total maximum.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ShaderPass.ShaderPassImplementationBlock.ShaderPassTextureBlock.ShaderTextureStateFilterStateBlock.MaxMipmapIndex">
            <summary>
            0 means all mipmap levels are used
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ShaderTemplate.Padding">
            <summary>
            * Force Active Camo: Should be used with cautuion, as this causes a backbuffer copy when this shader is rendered.
            *
            Water: ???.
            * Foliage: Used with lightmapped foliage (two-sided lighting) shaders. It affects importing but not
            rendering.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ShaderTemplate.LightResponse">
            <summary>
            Not used anymore.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.ShaderTemplate.Aux1Shader">
            <summary>
            Really cool stuff.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.RenderModelScale">
            <summary>
            Multiplier by which to scale the model's geometry up or down (0 defaults to standard, 0.03).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.MovementScale">
            <summary>
            How much the sky moves to remain centered on the player (0 defaults to 1.0, which means no parallax).
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.IndoorAmbientColor">
            <summary>
            Indoor ambient light color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.OutdoorAmbientColor">
            <summary>
            Indoor ambient light color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.FogSpreadDistance">
            <summary>
            How far fog spreads into adjacent clusters.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyCubemapBlock.PowerScale">
            <summary>
            0 Defaults to 1.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyAtmosphericFogBlock.MaximumDensity">
            <summary>
            Fog density is clamped to this value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyAtmosphericFogBlock.StartDistance">
            <summary>
            Before this distance there is no fog.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyAtmosphericFogBlock.OpaqueDistance">
            <summary>
            Fog becomes opaque (maximum density) at this distance from the viewer.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyAtmosphericFogBlock1.MaximumDensity">
            <summary>
            Fog density is clamped to this value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyAtmosphericFogBlock1.StartDistance">
            <summary>
            Before this distance there is no fog.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyAtmosphericFogBlock1.OpaqueDistance">
            <summary>
            Fog becomes opaque (maximum density) at this distance from the viewer.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyFogBlock.Density">
            <summary>
            Fog density is clamped to this value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyLightBlock.SkyLightFogBlock.MaximumDensity">
            <summary>
            Fog density is clamped to this value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyLightBlock.SkyLightFogBlock.StartDistance">
            <summary>
            Before this distance there is no fog.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyLightBlock.SkyLightFogBlock.OpaqueDistance">
            <summary>
            Fog becomes opaque (maximum density) at this distance from the viewer.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyLightBlock.SkyLightFogBlock1.MaximumDensity">
            <summary>
            Fog density is clamped to this value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyLightBlock.SkyLightFogBlock1.StartDistance">
            <summary>
            Before this distance there is no fog.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyLightBlock.SkyLightFogBlock1.OpaqueDistance">
            <summary>
            Fog becomes opaque (maximum density) at this distance from the viewer.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyLightBlock.SkyRadiosityLightBlock.Color">
            <summary>
            Light color.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyLightBlock.SkyRadiosityLightBlock.Power">
            <summary>
            Light power from 0 to infinity.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyLightBlock.SkyRadiosityLightBlock.TestDistance">
            <summary>
            Length of the ray for shadow testing.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyLightBlock.SkyRadiosityLightBlock.Diameter">
            <summary>
            Angular diameter of the light source in the sky.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyShaderFunctionBlock.GlobalFunctionName">
            <summary>
            Global function that controls this shader value.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sky.SkyAnimationBlock.AnimationIndex">
            <summary>
            Index of the animation in the animation graph.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sound.Gen2SoundFlags.AlwaysSpatialize">
            <summary>
            always play as 3d sound, even in first person
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Sound.Gen2SoundFlags.NeverObstruct">
            <summary>
            disable occlusion/obstruction for this sound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.RuntimePermutationFlags">
            <summary>
            Bit vector
            </summary>
        </member>
        <member name="M:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.GetChunkSize(System.Int32)">
            <summary>
            Get the chunk size from a chunk in Gen3 Blam engine
            </summary>
            <param name="chunkIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.GetChunkOffset(System.Int32)">
            <summary>
            Get the chunk offset.
            </summary>
            <param name="chunkIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.GetPermutationSize(System.Int32)">
            <summary>
            Get the size of the data for a permutation
            </summary>
            <param name="permutationIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.GetPermutationOffset(System.Int32)">
            <summary>
            Get the offset of the permutation in the resource.
            </summary>
            <param name="permutationIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.GetFirstPermutationIndex(System.Int32)">
            <summary>
            Get the index of the first permutation in a pitch range block.
            </summary>
            <param name="pitchRangeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.GetPermutationCount(System.Int32)">
            <summary>
            Get the number of permutation in the pitch range block.
            </summary>
            <param name="pitchRangeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.GetPermutation(System.Int32)">
            <summary>
            Get permutation block.
            </summary>
            <param name="permutationIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.GetPermutationSamples(System.Int32)">
            <summary>
            Get the number of samples in a permutation
            </summary>
            <param name="permutationIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.GetSamplesPerPitchRange(System.Int32)">
            <summary>
            Get the total number of audio samples in a pitch range block.
            </summary>
            <param name="pitchRangeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.Gen2.SoundCacheFileGestalt.GetFileSize(System.Int32,System.Int32)">
            <summary>
            Get the file size given the pitch range blocks
            </summary>
            <param name="basePitchRangeIndex"></param>
            <param name="pitchRangeCount"></param>
            <returns></returns>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundClasses.SoundClassBlock.MaxSoundsPerTag116">
            <summary>
            maximum number of sounds playing per individual sound tag
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundClasses.SoundClassBlock.MaxSoundsPerObject116">
            <summary>
            maximum number of sounds of this type playing on an object
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundClasses.SoundClassBlock.PreemptionTime">
            <summary>
            replaces other instances after this many milliseconds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundClasses.SoundClassBlock.ReverbGain">
            <summary>
            how much reverb applies to this sound class
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundClasses.SoundClassBlock.CutsceneDuckingSustainTime">
            <summary>
            how long this lasts after the cutscene ends
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundClasses.SoundClassBlock.ScriptedDialogDuckingSustainTime">
            <summary>
            how long this lasts after the scripted dialog ends
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundDialogueConstants.AlmostNever">
            <summary>
            these values correspond to the named play fractions in the dialogue editor (It's really skip fractions, but who cares?)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundFilterBlock.FilterType">
            <summary>
            DLS2 filtering:
                resonance gain range: [0, 22.5] dB
            
            parametric EQ:
                gain range: [-64, 14] dB
            
            for mono sounds:
               
            the left filter controls the DLS 2 parameters
                the right filter controls the Parametric EQ parameters
            
            for stereo
            sounds:
                both left and right channels must have the same filter
                i.e., filter type both is invalid
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundFilterBlock.LeftFilterFrequency">
            <summary>
            in Hz [0,8000]
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundFilterBlock.LeftFilterGain">
            <summary>
            in dB
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundFilterBlock.RightFilterFrequency">
            <summary>
            in Hz [0,8000]
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundFilterBlock.RightFilterGain">
            <summary>
            in dB
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundPitchLfoBlock.Delay">
            <summary>
            seconds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundPitchLfoBlock.Frequency">
            <summary>
            Hz[0,43.7]
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundPitchLfoBlock.PitchModulation">
            <summary>
            octaves[-1,1]
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundFilterLfoBlock.Delay">
            <summary>
            in seconds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundFilterLfoBlock.Frequency">
            <summary>
            in Hz[0,43.7]
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundFilterLfoBlock.CutoffModulation">
            <summary>
            octaves[-8,8]
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.PlatformSoundFilterLfoBlock.GainModulation">
            <summary>
            dB[-16,16]
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectCollection.PlatformSoundPlaybackBlock.PlatformSoundPlaybackStructBlock.SoundEffectPlaybackBlock.SoundEffectStructDefinitionBlock.SoundEffectComponentBlock.Gain">
            <summary>
            additional attenuation to sound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEffectTemplate.SoundEffectTemplatesBlock.Explanation">
            <summary>
            DON'T MODIFY THIS TAG UNLESS YOU KNOW WHAT YOU ARE DOING
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEnvironment.Priority">
            <summary>
            when multiple listeners are in different sound environments in split screen, the combined environment will be the one
            with the highest priority.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEnvironment.RoomIntensity">
            <summary>
            intensity of the room effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEnvironment.RoomIntensityHf">
            <summary>
            intensity of the room effect above the reference high frequency
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEnvironment.RoomRolloff0To10">
            <summary>
            how quickly the room effect rolls off, from 0.0 to 10.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundEnvironment.HfReference20To20000">
            <summary>
            for hf values, what frequency defines hf, from 20 to 20,000
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.Tracks">
            <summary>
            tracks play in parallel and loop continuously for the duration of the looping sound.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.DetailSounds">
            <summary>
            detail sounds play at random throughout the duration of the looping sound.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.FlagsValue.DeafeningToAis">
            <summary>
            when used as a background stereo track, causes nearby AIs to be unable to hear
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.FlagsValue.NotALoop">
            <summary>
            this is a collection of permutations strung together that should play once then stop.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.FlagsValue.StopsMusic">
            <summary>
            all other music loops will stop when this one starts.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.FlagsValue.AlwaysSpatialize">
            <summary>
            always play as 3d sound, even in first person
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.FlagsValue.SynchronizePlayback">
            <summary>
            synchronizes playback with other looping sounds attached to the owner of this sound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.LoopingSoundTrackBlock.FlagsValue.FadeInAtStart">
            <summary>
            the loop sound should fade in while the start sound is playing.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.LoopingSoundTrackBlock.FlagsValue.FadeOutAtStop">
            <summary>
            the loop sound should fade out while the stop sound is playing.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.LoopingSoundTrackBlock.FlagsValue.CrossfadeAltLoop">
            <summary>
            when the sound changes to the alternate version,  .
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.LoopingSoundDetailBlock.RandomPeriodBounds">
            <summary>
            the time between successive playings of this sound will be randomly selected from this range.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.LoopingSoundDetailBlock.YawBounds">
            <summary>
            if the sound specified above is not stereo it will be randomly spatialized according to the following constraints. if
            both lower and upper bounds are zero for any of the following fields, the sound's position will be randomly selected from
            all possible directions or distances.
            </summary>
            <summary>
            the sound's position along the horizon will be randomly selected from this range.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.LoopingSoundDetailBlock.PitchBounds">
            <summary>
            the sound's position above (positive values) or below (negative values) the horizon will be randomly selected from this
            range.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundLooping.LoopingSoundDetailBlock.DistanceBounds">
            <summary>
            the sound's distance (from its spatialized looping sound or from the listener if the looping sound is stereo) will be
            randomly selected from this range.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundMix.LeftStereoGain">
            <summary>
            for first person sounds to the left of you
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundMix.LeftStereoGain1">
            <summary>
            for first person sounds between your ears
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundMix.LeftStereoGain2">
            <summary>
            for first person sounds to the right of you
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundMix.SoundGlobalMixStructBlock.FrontSpeakerGain">
            <summary>
            for sounds that use the center speaker
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundMix.SoundGlobalMixStructBlock.FrontSpeakerGain1">
            <summary>
            for sounds that use the center speaker
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundMix.SoundGlobalMixStructBlock.StereoUnspatializedGain">
            <summary>
            for sounds that use the center speaker
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.SoundScenery.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Style.CombatStatusDecayOptions">
            <summary>
            Controls how combat status is allowed to be automatically reduced in the absence of combat stimuli. 'Latch at X' means
            that once the level of x is attained (and/or surpassed) the combat status never falls below it
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Style.Attitude">
            <summary>
            Indicates general stance for style. This matches the property blocks in the character definition (e.g. defense
            properties)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Style.StyleControl">
            <summary>
            Check the appropriate box to turn on/off the given behavior
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.FlashDelay">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.FlashLength">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.FlashDelay1">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.FlashLength1">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.ValueScale">
            <summary>
            used for non-integral values, i.e. health and shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.FlashDelay2">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.FlashLength2">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.ValueScale1">
            <summary>
            used for non-integral values, i.e. health and shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.FlashDelay3">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.FlashLength3">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.FlashDelay4">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.FlashLength4">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.AnchorOffset7">
            <summary>
            The blips use this as a reference point
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition1.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition1._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition1.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition1.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition1.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition1.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition1.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition1.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition1.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition2.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition2._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition2.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition2.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition2.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition2.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition2.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition2.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition2.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition3.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition3._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition3.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition3.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition3.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition3.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition3.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition3.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition3.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition4.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition4._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition4.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition4.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition4.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition4.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition4.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition4.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.GlobalHudMultitextureOverlayDefinition4.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.FlashDelay">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.FlashLength">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryOverlayBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.FlashDelay">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.FlashLength">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.ValueScale">
            <summary>
            used for non-integral values, i.e. health and shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UnitHudInterface.UnitHudAuxilaryPanelBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceGlobalsDefinition.SharedGlobals">
            <summary>
            This is a reference to the ui shared globals tag
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceGlobalsDefinition.ScreenWidgets">
            <summary>
            These are the screen widgets
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceGlobalsDefinition.MpVariantSettingsUi">
            <summary>
            This blob defines the ui for setting multiplayer game variant parameters
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceGlobalsDefinition.GameHopperDescriptions">
            <summary>
            This is for the loc game hopper strings
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceListSkinDefinition.ItemAnimations">
            <summary>
            Animations ordered as follows:
            0) list item focused
            1) list item unfocused
            2) list item ambient
            3) list item hovered
            4)
            list item unhovered
            5) list item clicked (hovered->focused)
            6) list item unfocused back to hovered state
            (focused->hovered)
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceListSkinDefinition.BitmapBlocks">
            <summary>
            the bitmap block top-left is actually bottom-left here in list skin land!
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.Flags">
            <summary>
            - the widget coordinate system is a left-handed system (+x to the right, +y up, +z into the screen)
              with the origin
            centered in the display (regardless of display size)
            - for widget component placement, all coordinates you define in the
            tag specifiy the object's
              placement prior to the application of any animation
            - all coordinates you define are local to
            that object
            - all text specific to objects in the screen comes from the screen's string list tag
              all of the string
            indices you may need to specify will refer to the screen's string list tag
            - a pane may contain either buttons OR a list
            OR a table-view, but never a combination of those
              (widget won't function correctly if you try that)
            - all text is
            centered unless you specify otherwise
            </summary>
            <summary>
            Set misc. screen behavior here
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.ButtonKeyType">
            <summary>
            The labels here are just a guide; the actual string used comes from the Nth position
            of this button key entry as found in
            the ui globals button key string list tag
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.TextColor">
            <summary>
            Any ui elements that don't explicitly set a text color will use this color
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.StringListTag">
            <summary>
            All text specific to this screen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.Panes">
            <summary>
            Define the screen's panes here (normal screens have 1 pane, tab-view screens have 2+ panes)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.ShapeGroup">
            <summary>
            If the screen is to have a shape group, specify it here (references group in user interface globals tag)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.HeaderStringId">
            <summary>
            These are down here because they got added on later. Have a nice day.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.LocalStrings">
            <summary>
            String IDs here allow defining new string ids that are visible only to this screen.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.LocalBitmaps">
            <summary>
            Bitmaps here allow adding a bitmap that's accessible in code for use in this screen.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.SourceColor">
            <summary>
            These are used only for level load progress bitmaps
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.MouseCursorDefinition">
            <summary>
            The mouse cursor definition for this screen.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.ScreenIdValue.Test">
            <summary>
            1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.ScreenIdValue.Test1">
            <summary>
            2
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.ScreenIdValue.Test2">
            <summary>
            3
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.ScreenIdValue.Test3">
            <summary>
            4
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.ScreenIdValue.Test4">
            <summary>
            5
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.Buttons">
            <summary>
            If the pane contains buttons, define them here
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.ListBlock">
            <summary>
            If the pane contains a list, define it here
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.TableView">
            <summary>
            If the pane contains a table-view, define it here
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.TextBlocks">
            <summary>
            Define additional flavor items here
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.TextValueBlocks">
            <summary>
            these are all OBSOLETE
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.ButtonWidgetReferenceBlock.BitmapOffset">
            <summary>
            from top-left
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.ListReferenceBlock.Unused">
            <summary>
            This is unused
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.ListReferenceBlock.STextValuePairReferenceBlockUnused.ValueType">
            <summary>
            this is all obsolete
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.ListReferenceBlock.STextValuePairReferenceBlockUnused.BooleanValue">
            <summary>
            Enter the value in the box corresponding to the value type you specified above
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.ListReferenceBlock.STextValuePairReferenceBlockUnused.TextLabelStringId">
            <summary>
            This is text string associated with data when it has the value specified above.
            The string comes from the screen's string
            list tag.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.UiModelSceneReferenceBlock.Flags">
            <summary>
            Halo y-axis=ui z-axis, and Halo z-axis=ui y-axis.
            As a convention, let's always place objects in the ui scenario such
            that
            they are facing in the '-y' direction, and the camera such that is is
            facing the '+y' direction. This way the ui
            animation for models (which
            gets applied to the camera) will always be consisitent.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.STextValuePairBlocksBlockUnused.Name">
            <summary>
            this is all obsolete
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.STextValuePairBlocksBlockUnused.STextValuePairReferenceBlockUnused.ValueType">
            <summary>
            this is all obsolete
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.STextValuePairBlocksBlockUnused.STextValuePairReferenceBlockUnused.BooleanValue">
            <summary>
            Enter the value in the box corresponding to the value type you specified above
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceScreenWidgetDefinition.WindowPaneReferenceBlock.STextValuePairBlocksBlockUnused.STextValuePairReferenceBlockUnused.TextLabelStringId">
            <summary>
            This is text string associated with data when it has the value specified above.
            The string comes from the screen's string
            list tag.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.OverlayedScreenAlphaMod">
            <summary>
            miscellaneous rendering globals, more below...
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.OverlayedInterfaceColor">
            <summary>
            This is the color of the overlayed ui effect; the alpha component is the maximum opacity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.Errors">
            <summary>
            For each error condition displayed in the UI, set the title and description string ids here
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag">
            <summary>
            This is the sound that plays as you tab through items
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag1">
            <summary>
            This is the sound that plays when an item is selected
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag2">
            <summary>
            This is the sound that plays to alert the user that something went wrong
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag3">
            <summary>
            This is the sound that plays when advancing to a new screen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag4">
            <summary>
            This is the sound that plays when retreating to a previous screen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag5">
            <summary>
            This is the sound that plays when advancing past the initial login screen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag6">
            <summary>
            This is the sound that plays when cursoring in the vkeyboard
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag7">
            <summary>
            This is the sound that plays when selecting buttons in the vkeyboard
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag8">
            <summary>
            This is the sound that plays when you receive an online notification
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag9">
            <summary>
            This is the sound that plays when tabbing thru views in a tabbed view pane (eg, online menu)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag10">
            <summary>
            This is the sound that plays as the countdown timer progresses
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.SoundTag11">
            <summary>
            This is the sound that plays as matchmaking enters the final stage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.GlobalBitmapsTag">
            <summary>
            Sprite sequences for global ui bitmaps, as follows:
            1) vkeyboard cursor
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.UnicodeStringListTag">
            <summary>
            Global UI Text goes here
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.ScreenAnimations">
            <summary>
            Animations used by screen definitions for transitions and ambient animating
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.ShapeGroups">
            <summary>
            Define the various groups of shape-objects for use on any ui screens here
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.Animations">
            <summary>
            These are the animations used by elements that live in the persistant background
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.ListItemSkins">
            <summary>
            These define the visual appearances (skins) available for UI lists
            They are expected to be entered in the following
            order:
            0) default
            1) squad lobby player list
            2) settings list
            3) playlist entry list
            4) variants list
            5) game browser
            list
            6) online player menu
            7) game setup menu
            8) playlist contents display
            9) profile picker
            10) mp map list
            11) main
            menu
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.ButtonKeyTypeStrings">
            <summary>
            These are for specific purposes as noted
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.FullScreenHeaderTextFont">
            <summary>
            Various settings for different sized UI windows
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.MainMenuMusic">
            <summary>
            Looping sound that plays while the main menu is active
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.AnimationReferenceBlock.AnimationPeriod">
            <summary>
            Defines the primary intro transitional animation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.AnimationReferenceBlock.AnimationPeriod1">
            <summary>
            Defines the primary outro transitional animation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.AnimationReferenceBlock.AnimationPeriod2">
            <summary>
            Defines the ambient animation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.ShapeGroupReferenceBlock.Shapes">
            <summary>
            This is the old way
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.ShapeGroupReferenceBlock.ModelSceneBlocks">
            <summary>
            Specify commonly used model/light groups here
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.ShapeGroupReferenceBlock.BitmapBlocks">
            <summary>
            Specify more flavor bitmaps here
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.UserInterfaceSharedGlobalsDefinition.ShapeGroupReferenceBlock.UiModelSceneReferenceBlock.Flags">
            <summary>
            Halo y-axis=ui z-axis, and Halo z-axis=ui y-axis.
            As a convention, let's always place objects in the ui scenario such
            that
            they are facing in the '-y' direction, and the camera such that is is
            facing the '+y' direction. This way the ui
            animation for models (which
            gets applied to the camera) will always be consisitent.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.DistanceOfEvadeAnim">
            <summary>
            this must be set to tell the AI how far it should expect our evade animation to move us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.DistanceOfDiveAnim">
            <summary>
            this must be set to tell the AI how far it should expect our dive animation to move us
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.StunnedMovementThreshold">
            <summary>
            if we take this much damage in a short space of time we will play our 'stunned movement' animations
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.SpawnedTurretCharacter">
            <summary>
            automatically created character when this unit is driven
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.SpawnedActorCount">
            <summary>
            number of actors which we spawn
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.SpawnedVelocity">
            <summary>
            velocity at which we throw spawned actors
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.RightHandNode">
            <summary>
            where the primary weapon is attached
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.LeftHandNode">
            <summary>
            where the seconday weapon is attached (for dual-pistol modes)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.SpecificType">
            <summary>
            if your type corresponds to something in this list choose it
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.VehicleSize">
            <summary>
            The size determine what kind of seats in larger vehicles it may occupy (i.e. small or large cargo seats)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.OverdampenCuspAngle">
            <summary>
            when the steering is off by more than the cusp angle
            the steering will overcompensate more and more.  when it
            is less, it
            overcompensates less and less.  the exponent
            should be something in the neighborhood of 2.0
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.EngineMoment">
            <summary>
            higher moments make engine spin up slower
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.EngineMaxAngularVelocity">
            <summary>
            higher moments make engine spin up slower
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.FlyingTorqueScale">
            <summary>
            big vehicles need to scale this down.  0 defaults to 1, which is generally a good value.  This is used with alien fighter
            physics
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.SeatEnteranceAccelerationScale">
            <summary>
            how much do we scale the force the biped the applies down on the seat when he enters. 0 == no acceleration
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.SeatExitAccelersationScale">
            <summary>
            how much do we scale the force the biped the applies down on the seat when he exits. 0 == no acceleration
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.AirFrictionDeceleration">
            <summary>
            human plane physics only. 0 is nothing.  1 is like thowing the engine to full reverse
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ThrustScale">
            <summary>
            human plane physics only. 0 is default (1)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.UnitAdditionalNodeNamesStructBlock.PreferredGunNode">
            <summary>
            if found, use this gun marker
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.DialogueVariantBlock.VariantNumber">
            <summary>
            variant number to use this dialogue with (must match the suffix in the permutations on the unit's model)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.UnitSeatBlock.PingScale">
            <summary>
            nathan is too lazy to make pings for each seat.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.UnitSeatBlock.TurnoverTime">
            <summary>
            how much time it takes to evict a rider from a flipped vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.UnitSeatBlock.ListenerInterpolationFactor">
            <summary>
            how far to interpolate listener position from camera to occupant's head
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.UnitSeatBlock.YawRateBounds">
            <summary>
            when the unit velocity is 0, the yaw/pitch rates are the left values
            at [max speed reference], the yaw/pitch rates are
            the right values.
            the max speed reference is what the code uses to generate a clamped speed from 0..1
            the exponent
            controls how midrange speeds are interpreted.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.UnitSeatBlock.EntryRadius">
            <summary>
            note: the entry radius shouldn't exceed 3 world units, 
            as that is as far as the player will search for a vehicle
            to
            enter.
            </summary>
            <summary>
            how close to the entry marker a unit must be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.UnitSeatBlock.EntryMarkerConeAngle">
            <summary>
            angle from marker forward the unit must be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.UnitSeatBlock.EntryMarkerFacingAngle">
            <summary>
            angle from unit facing the marker must be
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.GearBlock.MinTimeToUpshift">
            <summary>
            seconds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.GearBlock.EngineUpShiftScale">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.GearBlock.MinTimeToDownshift">
            <summary>
            seconds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.GearBlock.EngineDownShiftScale">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.GearBlock.TorqueCurveStructBlock.TorqueAtMaxAngularVelocity">
            <summary>
            generally 0 for loading torque and something less than max torque for cruising torque
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.GearBlock.TorqueCurveStructBlock1.TorqueAtMaxAngularVelocity">
            <summary>
            generally 0 for loading torque and something less than max torque for cruising torque
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.GroundFriction">
            <summary>
            for friction based vehicles only
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.GroundDepth">
            <summary>
            for friction based vehicles only
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.GroundDampFactor">
            <summary>
            for friction based vehicles only
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.GroundMovingFriction">
            <summary>
            for friction based vehicles only
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.GroundMaximumSlope0">
            <summary>
            degrees 0-90
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.GroundMaximumSlope1">
            <summary>
            degrees 0-90.  and greater than slope 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.AntiGravityBankLift">
            <summary>
            lift per WU.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.SteeringBankReactionScale">
            <summary>
            how quickly we bank when we steer
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.GravityScale">
            <summary>
            value of 0 defaults to 1.  .5 is half gravity
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.Radius">
            <summary>
            generated from the radius of the hkConvexShape for this vehicle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.FrictionPointDefinitionBlock.FractionOfTotalMass">
            <summary>
            (0.0-1.0) fraction of total vehicle mass
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.FrictionPointDefinitionBlock.DamagedRadius">
            <summary>
            radius when the tire is blown off.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.FrictionPointDefinitionBlock.ModelStateDestroyed">
            <summary>
            only need point can destroy flag set
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Vehicle.HavokVehiclePhysicsStructBlock.FrictionPointDefinitionBlock.RegionName">
            <summary>
            only need point can destroy flag set
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.VehicleCollection.VehiclePermutation.Weight">
            <summary>
            relatively how likely this vehicle will be chosen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.VehicleCollection.VehiclePermutation.Vehicle">
            <summary>
            which vehicle to
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.AccelerationScale">
            <summary>
            marine 1.0, grunt 1.4, elite 0.9, hunter 0.5, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.DynamicLightSphereRadius">
            <summary>
            sphere to use for dynamic lights and shadows. only used if not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.DynamicLightSphereOffset">
            <summary>
            only used if radius not 0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ApplyCollisionDamageScale">
            <summary>
            for things that want to cause more or less collision damage
            </summary>
            <summary>
            0 means 1.  1 is standard scale.  Some things may want to apply more damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MinGameAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MaxGameAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MinGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MaxGameScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MinAbsAccDefault">
            <summary>
            0 - means take default value from globals.globals
            </summary>
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MaxAbsAccDefault">
            <summary>
            0-oo
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MinAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MaxAbsScaleDefault">
            <summary>
            0-1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.PickupMessage">
            <summary>
            everything you need to display stuff
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponFlags">
            <summary>
            All weapons should have 'primary trigger' and 'secondary trigger' markers as appropriate.
            Blurred permutations are called
            '$primary-blur' and '$secondary-blur'.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MaximumAlternateShotsLoaded">
            <summary>
            if the second trigger loads alternate ammunition, this is the maximum number of shots that can be loaded at a time
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.TurnOnTime">
            <summary>
            how long after being readied it takes this weapon to switch its 'turned_on' attachment to 1.0
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.HeatRecoveryThreshold">
            <summary>
            the heat value a weapon must return to before leaving the overheated state, once it has become overheated in the first
            place
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.OverheatedThreshold">
            <summary>
            the heat value over which a weapon first becomes overheated (should be greater than the heat recovery threshold)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.HeatDetonationThreshold">
            <summary>
            the heat value above which the weapon has a chance of exploding each time it is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.HeatDetonationFraction">
            <summary>
            the percent chance (between 0.0 and 1.0) the weapon will explode when fired over the heat detonation threshold
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.HeatLossPerSecond">
            <summary>
            the amount of heat lost each second when the weapon is not being fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.HeatIllumination">
            <summary>
            the amount of illumination given off when the weapon is overheated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.OverheatedHeatLossPerSecond">
            <summary>
            the amount of heat lost each second when the weapon is not being fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MeleeAimAssist">
            <summary>
            magnetism angle: the maximum angle that magnetism works at full strength
            magnetism range: the maximum distance that
            magnetism works at full strength
            throttle magnitude: additional throttle to apply towards target when melee-ing w/
            magnetism
            throttle minimum distance: minimum distance to target that throttle magnetism kicks in
            throttle maximum
            adjustment angle: maximum angle throttle magnetism will have an effect, relative to the players movement throttle
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MeleeDamageParameters">
            <summary>
            damage pyramid angles: defines the frustum from the camera that the melee-attack uses to find targets
            damage pyramid
            depth: how far the melee attack searches for a target
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MagnificationLevels">
            <summary>
            the number of magnification levels this weapon allows
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ForwardMovementPenalty">
            <summary>
            percent slowdown to forward movement for units carrying this weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.SidewaysMovementPenalty">
            <summary>
            percent slowdown to sideways and backward movement for units carrying this weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.AgeHeatRecoveryPenalty">
            <summary>
            how much the weapon's heat recovery is penalized as it ages
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.AgeRateOfFirePenalty">
            <summary>
            how much the weapon's rate of fire is penalized as it ages
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.AgeMisfireStart">
            <summary>
            the age threshold when the weapon begins to misfire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.AgeMisfireChance">
            <summary>
            at age 1.0, the misfire chance per shot
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ActiveCamoDing">
            <summary>
            how much to decrease active camo when a round is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ActiveCamoRegrowthRate">
            <summary>
            how fast to increase active camo (per tick) when a round is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.HandleNode">
            <summary>
            the node that get's attached to the unit's hand
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.FlagsValue.ExtensionOfParent">
            <summary>
            object passes all function values to parent and uses parent's markers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.FlagsValue.UseStaticMassiveLightmapSample">
            <summary>
            cast a ton of rays once and store the results for lighting
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.FlagsValue.AttachToClustersByDynamicSphere">
            <summary>
            use this for the mac gun on spacestation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ObjectAiPropertiesBlock.AiTypeName">
            <summary>
            used for combat dialogue, etc.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ObjectFunctionBlock.TurnOffWith">
            <summary>
            if the specified function is off, so is this function
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ObjectFunctionBlock.MinValue">
            <summary>
            function must exceed this value (after mapping) to be active 0. means do nothing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ObjectFunctionBlock.FlagsValue.Invert">
            <summary>
            result of function is one minus actual result
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ObjectFunctionBlock.FlagsValue.MappingDoesNotControlsActive">
            <summary>
            the curve mapping can make the function active/inactive
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ObjectFunctionBlock.FlagsValue.AlwaysActive">
            <summary>
            function does not deactivate when at or below lower bound
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ObjectFunctionBlock.FlagsValue.RandomTimeOffset">
            <summary>
            function offsets periodic function input by random value between 0 and 1
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ObjectChangeColors.ObjectChangeColorInitialPermutation.VariantName">
            <summary>
            if empty, may be used by any model variant
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.BlendInHsv">
            <summary>
            blends colors in hsv rather than rgb space
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.ObjectChangeColors.ObjectChangeColorFunction.ScaleFlagsValue.MoreColors">
            <summary>
            blends colors through more hues (goes the long way around the color wheel)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MeleeAimAssistStructBlock.MagnetismAngle">
            <summary>
            the maximum angle that magnetism works at full strength
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MeleeAimAssistStructBlock.MagnetismRange">
            <summary>
            the maximum distance that magnetism works at full strength
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MeleeDamageParametersStructBlock.LungeMeleeDamage">
            <summary>
            this is only important for the energy sword
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.MeleeDamageParametersStructBlock.LungeMeleeResponse">
            <summary>
            this is only important for the energy sword
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.AimAssistStructBlock.AutoaimAngle">
            <summary>
            the maximum angle that autoaim works at full strength
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.AimAssistStructBlock.AutoaimRange">
            <summary>
            the maximum distance that autoaim works at full strength
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.AimAssistStructBlock.MagnetismAngle">
            <summary>
            the maximum angle that magnetism works at full strength
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.AimAssistStructBlock.MagnetismRange">
            <summary>
            the maximum distance that magnetism works at full strength
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.AimAssistStructBlock.DeviationAngle">
            <summary>
            the maximum angle that a projectile is allowed to deviate from the gun barrel
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.Magazine.ReloadTime">
            <summary>
            the length of time it takes to load a single magazine into the weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.Magazine.ChamberTime">
            <summary>
            the length of time it takes to chamber the next round
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponTrigger.WeaponTriggerChargingStructBlock.ChargingTime">
            <summary>
            the amount of time it takes for this trigger to become fully charged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponTrigger.WeaponTriggerChargingStructBlock.ChargedTime">
            <summary>
            the amount of time this trigger can be charged before becoming overcharged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponTrigger.WeaponTriggerChargingStructBlock.ChargedIllumination">
            <summary>
            the amount of illumination given off when the weapon is fully charged
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponTrigger.WeaponTriggerChargingStructBlock.SpewTime">
            <summary>
            length of time the weapon will spew (fire continuously) while discharging
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponTrigger.WeaponTriggerChargingStructBlock.ChargingEffect">
            <summary>
            the charging effect is created once when the trigger begins to charge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponTrigger.WeaponTriggerChargingStructBlock.ChargingDamageEffect">
            <summary>
            the charging effect is created once when the trigger begins to charge
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.MagazineIndex">
            <summary>
            the magazine from which this trigger draws its ammunition
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.RoundsPerShot">
            <summary>
            the number of rounds expended to create a single firing effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.MinimumRoundsLoaded">
            <summary>
            the minimum number of rounds necessary to fire the weapon
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.RoundsBetweenTracers">
            <summary>
            the number of non-tracer rounds fired between tracers
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.PredictionType">
            <summary>
            what the behavior of this barrel is in a predicted network game
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.FiringNoise">
            <summary>
            how loud this weapon appears to the AI
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.AccelerationTime1">
            <summary>
            the continuous firing time it takes for the weapon to achieve its final error
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.DecelerationTime1">
            <summary>
            the continuous idle time it takes for the weapon to return to its initial error
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.DamageError">
            <summary>
            the range of angles (in degrees) that a damaged weapon will skew fire
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.AccelerationTime2">
            <summary>
            the continuous firing time it takes for the weapon to achieve its final error
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.DecelerationTime2">
            <summary>
            the continuous idle time it takes for the weapon to return to its initial error
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.FirstPersonOffset">
            <summary>
            +x is forward, +z is up, +y is left
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.EjectionPortRecoveryTime">
            <summary>
            the amount of time (in seconds) it takes for the ejection port to transition from 1.0 (open) to 0.0 (closed) after a shot
            has been fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.IlluminationRecoveryTime">
            <summary>
            the amount of time (in seconds) it takes the illumination function to transition from 1.0 (bright) to 0.0 (dark) after a
            shot has been fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.HeatGeneratedPerRound">
            <summary>
            the amount of heat generated each time the trigger is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.AgeGeneratedPerRound">
            <summary>
            the amount the weapon ages each time the trigger is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.OverloadTime">
            <summary>
            the next trigger fires this often while holding down this trigger
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.AngleChangePerShot">
            <summary>
            angle change per shot of the weapon during firing
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.AccelerationTime3">
            <summary>
            the continuous firing time it takes for the weapon to achieve its final angle change per shot
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.DecelerationTime3">
            <summary>
            the continuous idle time it takes for the weapon to return to its initial angle change per shot
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.AngleChangeFunction">
            <summary>
            function used to scale between initial and final angle change per shot
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.FiringEffects">
            <summary>
            firing effects determine what happens when this trigger is fired
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFlagsValue.TracksFiredProjectile">
            <summary>
            poo poo ca ca pee pee
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFlagsValue.RandomFiringEffects">
            <summary>
            rather than being chosen sequentially, firing effects are picked randomly
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFlagsValue.CanFireWithPartialAmmo">
            <summary>
            allows a weapon to be fired as long as there is a non-zero amount of ammunition loaded
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFlagsValue.ProjectilesUseWeaponOrigin">
            <summary>
            instead of coming out of the magic first person camera origin, the projectiles for this weapon
            actually come out of the gun
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFlagsValue.EjectsDuringChamber">
            <summary>
            this trigger's ejection port is started during the key frame of its chamber animation
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFlagsValue.ProjectileVectorCannotBeAdjusted">
            <summary>
            projectiles fired by this weapon cannot have their direction adjusted by the AI to hit the target
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFlagsValue.ProjectilesFireParallel">
            <summary>
            If there are multiple guns for this trigger, the projectiles emerge in parallel beams (rather than
            independant aiming)
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.WeaponBarrelFiringParametersStruct.RoundsPerSecond">
            <summary>
            the number of firing effects created per second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.WeaponBarrelFiringParametersStruct.AccelerationTime">
            <summary>
            the continuous firing time it takes for the weapon to achieve its final rounds per second
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.WeaponBarrelFiringParametersStruct.DecelerationTime">
            <summary>
            the continuous idle time it takes for the weapon to return from its final rounds per second to its initial
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.WeaponBarrelFiringParametersStruct.BarrelSpinScale">
            <summary>
            scale the barrel spin speed by this amount
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.WeaponBarrelFiringParametersStruct.BlurredRateOfFire">
            <summary>
            a percentage between 0 and 1 which controls how soon in its firing animation the weapon blurs
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.WeaponBarrelFiringParametersStruct.ShotsPerFire">
            <summary>
            allows designer caps to the shots you can fire from one firing action
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.WeaponBarrelFiringParametersStruct.FireRecoveryTime">
            <summary>
            how long after a set of shots it takes before the barrel can fire again
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.WeaponBarrelFiringParametersStruct.SoftRecoveryFraction">
            <summary>
            how much of the recovery allows shots to be queued
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFiringEffectBlock.ShotCountLowerBound">
            <summary>
            the minimum number of times this firing effect will be used, once it has been chosen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFiringEffectBlock.ShotCountUpperBound">
            <summary>
            the maximum number of times this firing effect will be used, once it has been chosen
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFiringEffectBlock.FiringEffect">
            <summary>
            this effect is used when the weapon is loaded and fired normally
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFiringEffectBlock.MisfireEffect">
            <summary>
            this effect is used when the weapon is loaded but fired while overheated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFiringEffectBlock.EmptyEffect">
            <summary>
            this effect is used when the weapon is not loaded
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFiringEffectBlock.FiringDamage">
            <summary>
            this effect is used when the weapon is loaded and fired normally
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFiringEffectBlock.MisfireDamage">
            <summary>
            this effect is used when the weapon is loaded but fired while overheated
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Weapon.WeaponBarrels.BarrelFiringEffectBlock.EmptyDamage">
            <summary>
            this effect is used when the weapon is not loaded
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.Crosshairs">
            <summary>
            Crosshairs always go in the center of the screen.
            Crosshairs can be attached to one of four different states:
            
            * Aim:
            Default crosshair. Frame 0 is the default state, frame 1 is the auto-aim state (frame rate ignored)
            * Zoom: Zoom overlay.
            Each zoom level has a corresponding frame (frame rate ignored)
            * Charge: Charging overlay. If you wish to display an
            animation for charging, put it here.
            * Flash: Similar to charging, but for low ammo/batter/heat states
            * Reload/Overheat:
            Similar to charging, but for reloading/overheating
            
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.SequenceIndex">
            <summary>
            sequence index into the global hud icon bitmap
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WidthOffset">
            <summary>
            extra spacing beyond bitmap width for text alignment
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.FlashDelay">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.FlashLength">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.PrimaryAnchor">
            <summary>
            where you want the origin of the texture.
            *"texture" uses the texture coordinates supplied
            *"screen" uses the origin of
            the screen as the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition._0To1BlendFunc">
            <summary>
            how to blend the textures together
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.PrimaryScale">
            <summary>
            how much to scale the textures
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.PrimaryOffset">
            <summary>
            how much to offset the origin of the texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.Primary">
            <summary>
            which maps to use
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.DestinationType">
            <summary>
            These describe the relationship that causes the effect.
            * destination type is the type of variable you want to be
            effected
            * destination tells which texture map (or geometry offset) to apply it to
            * source says which value to look at
            when computing the effect
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.InBounds">
            <summary>
            When the source is at the lower inbound, the destination ends up the lower outbound and vice-versa applies for the upper
            values.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.TintColorLowerBound">
            <summary>
            If destination is tint, these values are used instead of the out bounds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudStaticBlock.GlobalHudMultitextureOverlayDefinition.GlobalHudMultitextureOverlayEffectorDefinition.PeriodicFunction">
            <summary>
            If you use a periodic function as the source, this lets you tweak it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudMeterBlock.ValueScale">
            <summary>
            used for non-integral values, i.e. health and shields
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudNumberBlock.FlashDelay">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudNumberBlock.FlashLength">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudCrosshairBlock.WeaponHudCrosshairItemBlock.FlashDelay">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudCrosshairBlock.WeaponHudCrosshairItemBlock.FlashLength">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudOverlaysBlock.WeaponHudOverlayBlock.FlashDelay">
            <summary>
            time between flashes
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.WeaponHudOverlaysBlock.WeaponHudOverlayBlock.FlashLength">
            <summary>
            time of each flash
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.WeaponHudInterface.GlobalHudScreenEffectDefinition.Flags">
            <summary>
            Mask bitmap overlay. Use either a 2D bitmap or an interface bitmap.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Wind.Velocity">
            <summary>
            the wind magnitude in the weather region scales the wind between these bounds
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Gen2.Wind.VariationArea">
            <summary>
            the wind direction varies inside a box defined by these angles on either side of the direction from the weather region.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.GlobalPlayerCharacterTypeIndex">
            <summary>
            Index in Globals.PlayerCharacterType
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.CharacterName">
            <summary>
            StringId for the name, enter actual string in the unic tag.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.CharacterDescription">
            <summary>
            StringId for the description, enter actual string in the unic tag.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.CharacterPositionInfo.flags">
            <summary>
            Character Flags
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.CharacterPositionInfo.BipedNameIndex">
            <summary>
            Index to Object name in the mainmenu scenario
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.CharacterPositionInfo.SettingsCameraIndex">
            <summary>
            Index to Settings Camera in the mainmenu scenario
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.CharacterPositionInfo.PlatformNameIndex">
            <summary>
            Index to the Character Platform name
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.CharacterPositionInfo.RelativeBipedPosition">
            <summary>
            RealVector3D to offset the biped on the customization screen by a specificed amount
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.CharacterPositionInfo.RelativeBipedRotation">
            <summary>
            Float to offset the bipeds rotation on the customization screen by a specificed amount
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.CharacterPositionInfo.BipedPositionWidescreen">
            <summary>
            RealVector3D to point to the exact position of the biped in the customization screen with the relative flag not set
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ModGlobalsDefinition.PlayerCharacterCustomization.CharacterPositionInfo.BipedRotation">
            <summary>
            float to point to the exact rotation of the biped with the relative flag not set
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.TestDefinition">
            <summary>
            This definition exists solely for the purpose of testing code.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.MaximumDistance">
            <summary>
            The maximum distance this screen effect will affect.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.DistanceFalloffFunction">
            <summary>
            The function data of the distance falloff.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.TimeEvolutionFunction">
            The function data of the time evolution.
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.AngleFalloffFunction">
            <summary>
            The function data of the angle falloff.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.InputVariable">
            OBJECT FALLOFF 
            applies a falloff based on an object function - ignored if the effect is not attached to an object
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.GammaEnhance">
            [0-1]#contrast increase
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.GammaReduce">
            [0-10]#gamma increase    
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.BrightNoise">
            [0-10]#gamma decrease
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.DarkNoise">
            [0-1]#add bright noise contribution, 0 turns it off, 1: full on
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.ColorFilter">
            [0-1]#add dark noise contribution, 0 turns it off, 1: full on
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.ColorFloor">
            #this color is multiplied on top
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.Tron">
            #this color is subtracted
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.MotionSuck">
            tron:[0-1]#adds a full-screen tron effect
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.MotionSuckDirection">
            {motion suck}:[-2, 2]#adds motion-blur towards or away from this screen effect
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.HorizontalBlur">
            {motion suck direction}!:[do not edit]#do not edit" />
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.VerticalBlur">
            [0-10] expensive#blurs the entire screen
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.VisionMode">
            [0-10] expensive#blurs the entire screen
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.VisionNoise">
            [0-1]#turns on the global vision mode
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.HudFade">
            [0-1]#adds noise to the vision mode
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.FovIn">
            [0-1]#fades the chud
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.FovOut">
            [0-1]#zooms in the field of view
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.ScreenShake">
            [0-1]#zooms out the field of view
        </member>
        <member name="F:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.ScreenShader">
            [0-1]#shakes the entire screen
        </member>
        <member name="T:TagTool.Tags.Definitions.AreaScreenEffect.ScreenEffectBlock.SefcFlagBits">
            #applies this shader to the entire screen
        </member>
        <member name="F:TagTool.Tags.Definitions.Creature.TurningVelocityMaximum">
            <summary>
            The maximum turning velocity of the creature. Ground creatures only.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Creature.TurningAccelerationMaximum">
            <summary>
            The maximum turning acceleration of the creature. Ground creatures only.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.DamageEffect.DamageEffectFlags.AreaDamagePlayersOnly">
            <summary>
            area of effect damage only affects players
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.DecalSystem.DecalDefinitionBlock.ClampAngle">
            <summary>
            Projections at greater than this angle will be clamped to this angle
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.DecalSystem.DecalDefinitionBlock.CullAngle">
            <summary>
            Projections at greater than this angle will not be drawn
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Effect.Event.ParticleSystem.Emitter.TranslationalOffset">
            <summary>
            XYZ controls that offset the emitter's origin from the original location.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Effect.Event.ParticleSystem.Emitter.RelativeDirection">
            <summary>
            Yaw/Pitch that changes the initial rotation of the emitter.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Effect.Event.ParticleSystem.Emitter.EmissionRadius">
            <summary>
            Defines the size of the emitter.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Effect.Event.ParticleSystem.Emitter.EmissionAngle">
            <summary>
            Determines the angle at which particles are emitted.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Effect.Event.ParticleSystem.Emitter.ParticleStartingCount">
            <summary>
            Number of particles that are spawned at the birth of the effect.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Effect.Event.ParticleSystem.Emitter.ParticleMaxCount">
            <summary>
            Max number of particles allowed to exist at one time.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Effect.Event.ParticleSystem.Emitter.ParticleEmissionRate">
            <summary>
            Number of particles that are spawned every second from the emitters.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Effect.Event.ParticleSystem.Emitter.ParticleLifespan">
            <summary>
            Number of seconds a particle will live after emission.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.GiantFlags">
            <summary>
            The flags of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.AccelerationTime">
            <summary>
            The acceleration time of the giant in seconds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.DecelerationTime">
            <summary>
            The deceleration time of the giant in seconds.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.SpeedScale">
            <summary>
            The overall animation speed scale of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.ElevationChangeRate">
            <summary>
            The elevation change rate scale per update of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.FootTargetRadius">
            <summary>
            How far around a foot to search for ground targets to stomp. Set to 0 to not search for targets.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSettings">
            <summary>
            The buckle settings of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.AnkleIkScale">
            <summary>
            The lower values to drop the ankles of the giant towards the ground when computing IK.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.LowerTime">
            <summary>
            How many seconds until the giant reaches the ground.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.LowerCurve">
            <summary>
            The lowering curve type of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.RaiseTime">
            <summary>
            How many seconds until the giant recovers from reaching the ground.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.RaiseCurve">
            <summary>
            The raising curve type of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.PauseTimeEasy">
            <summary>
            How many seconds for the giant to wait on "Easy" difficulty.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.PauseTimeNormal">
            <summary>
            How many seconds for the giant to wait on "Normal" difficulty.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.PauseTimeHeroic">
            <summary>
            How many seconds for the giant to wait on "Heroic" difficulty.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.PauseTimeLegendary">
            <summary>
            How many seconds for the giant to wait on "Legendary" difficulty.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.BuckleGravityScale">
            <summary>
            The buckling gravity scale of the giant. Used to control descent when not 0.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.BucklingMarker">
            <summary>
            The marker that shows bottom of the giant and center of search area.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.ForwardRearScan">
            <summary>
            The forward-rear world-unit search distance of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.LeftRightScan">
            <summary>
            The left-right world-unit search distance of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.ForwardRearSteps">
            <summary>
            The number of forward-rear samples per direction of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.LeftRightSteps">
            <summary>
            The number of left-right samples per direction of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.PitchBounds">
            <summary>
            The giant may rotate the parent node of the buckling marker this much to align with ground.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.RollBounds">
            <summary>
            The giant may rotate the parent node of the buckling marker this much to align with ground.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.BuckleAnimation">
            <summary>
            The animation to use to lower the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.DescentOverlay">
            <summary>
            The animation to overlay while the giant is lowering.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.PauseOverlay">
            <summary>
            The animation to overlay while the giant is paused.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.DescentOverlayScale">
            <summary>
            The maximum blend weight of descent overlay of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Giant.BuckleSetting.PausedOverlayScale">
            <summary>
            The maximum blend weight of paused overlay of the giant.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.LightVolumeSystem.LightVolumeDefinitionBlock.BrightnessRatio">
            <summary>
            Average brightness head-on/side-view.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.OmahaDamageInfoBlock.OmahaDamageSection.OmahaInstantResponse.FlagsValue.KillsObject">
            <summary>
            When the response fires the object dies regardless of its current health.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.OmahaDamageInfoBlock.OmahaDamageSection.OmahaInstantResponse.FlagsValue.InhibitsMeleeAttack">
            <summary>
            From halo 1 - disallows melee for a unit.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.OmahaDamageInfoBlock.OmahaDamageSection.OmahaInstantResponse.FlagsValue.InhibitsWeaponAttack">
            <summary>
            From halo 1 - disallows weapon fire for a unit.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.OmahaDamageInfoBlock.OmahaDamageSection.OmahaInstantResponse.FlagsValue.InhibitsWalking">
            <summary>
            From halo 1 - disallows walking for a unit.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.OmahaDamageInfoBlock.OmahaDamageSection.OmahaInstantResponse.FlagsValue.ForcesDropWeapon">
            <summary>
            From halo 1 - makes the unit drop its current weapon.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.OmahaDamageInfoBlock.OmahaDamageSection.OmahaInstantResponse.FlagsValue.DestroysObject">
            <summary>
            When the response fires the object is destroyed.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.OmahaDamageInfoBlock.OmahaDamageSection.OmahaInstantResponse.FlagsValue.DamagesWeaponPrimaryTrigger">
            <summary>
            Destroys the primary trigger on the unit's current weapon.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.OmahaDamageInfoBlock.OmahaDamageSection.OmahaInstantResponse.FlagsValue.DamagesWeaponSecondaryTrigger">
            <summary>
            Destroys the secondary trigger on the unit's current weapon.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.GlobalDamageInfoBlock.GlobalIndirectMaterialName">
            <summary>
            Absorbes AOE or child damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.GlobalDamageInfoBlock.IndirectDamageSection">
            <summary>
            Absorbes AOE or child damage
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.GlobalDamageInfoBlock.DamageSection.InstantResponse.FlagsValue.KillsObject">
            <summary>
            When the response fires the object dies regardless of its current health.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.GlobalDamageInfoBlock.DamageSection.InstantResponse.FlagsValue.InhibitsMeleeAttack">
            <summary>
            From halo 1 - disallows melee for a unit.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.GlobalDamageInfoBlock.DamageSection.InstantResponse.FlagsValue.InhibitsWeaponAttack">
            <summary>
            From halo 1 - disallows weapon fire for a unit.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.GlobalDamageInfoBlock.DamageSection.InstantResponse.FlagsValue.InhibitsWalking">
            <summary>
            From halo 1 - disallows walking for a unit.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.GlobalDamageInfoBlock.DamageSection.InstantResponse.FlagsValue.ForcesDropWeapon">
            <summary>
            From halo 1 - makes the unit drop its current weapon.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.GlobalDamageInfoBlock.DamageSection.InstantResponse.FlagsValue.DestroysObject">
            <summary>
            When the response fires the object is destroyed.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.GlobalDamageInfoBlock.DamageSection.InstantResponse.FlagsValue.DamagesWeaponPrimaryTrigger">
            <summary>
            Destroys the primary trigger on the unit's current weapon.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Model.GlobalDamageInfoBlock.DamageSection.InstantResponse.FlagsValue.DamagesWeaponSecondaryTrigger">
            <summary>
            Destroys the secondary trigger on the unit's current weapon.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.MultilingualUnicodeStringList">
            <summary>
            Contains a list of localized strings.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.MultilingualUnicodeStringList.Strings">
            <summary>
            The strings in the list.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.MultilingualUnicodeStringList.Data">
            <summary>
            The data block containing every string.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.MultilingualUnicodeStringList.OffsetCounts">
            <summary>
            Array of ushorts, comes in pair, in each block of 2 is made of an index and string count. Only used by H3 and ODST
            </summary>
        </member>
        <member name="M:TagTool.Tags.Definitions.MultilingualUnicodeStringList.GetString(TagTool.Tags.Definitions.LocalizedString,TagTool.Common.GameLanguage)">
            <summary>
            Gets the value of a string in a given language.
            </summary>
            <param name="str">The string.</param>
            <param name="language">The language.</param>
            <returns>The value of the string, or <c>null</c> if the string is not available.</returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.MultilingualUnicodeStringList.SetString(TagTool.Tags.Definitions.LocalizedString,TagTool.Common.GameLanguage,System.String)">
            <summary>
            Sets the value of a string for a given language.
            </summary>
            <param name="str">The string.</param>
            <param name="language">The language.</param>
            <param name="newValue">The new value. Can be <c>null</c>.</param>
        </member>
        <member name="T:TagTool.Tags.Definitions.LocalizedString">
            <summary>
            A localized string.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.LocalizedString.StringID">
            <summary>
            The string's stringID.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.LocalizedString.StringIDStr">
            <summary>
            The stringID's string value. Can be empty.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.LocalizedString.Offsets">
            <summary>
            The array of offsets for each language.
            If an offset is -1, then the string is not available.
            There must be 12 of these (one offset per language).
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.RenderModel.Region">
            <summary>
            A region of a model.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.RenderModel.Region.Name">
            <summary>
            The name of the region.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.RenderModel.Region.NodeMapOffset">
            <summary>
            The node map offset of the region.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.RenderModel.Region.NodeMapSize">
            <summary>
            The node map size of the region.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.RenderModel.Region.Permutations">
            <summary>
            The permutations belonging to the region.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.RenderModel.Region.Permutation">
            <summary>
            A permutation of a region, associating a specific mesh with it.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.RenderModel.Region.Permutation.Name">
            <summary>
            The name of the permutation as a string id.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.RenderModel.Region.Permutation.LodSectionIndices">
            <summary>
            The level-of-detail section indices of the permutation.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.RenderModel.Region.Permutation.MeshIndex">
            <summary>
            The index of the first mesh belonging to the permutation.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.RenderModel.Region.Permutation.MeshCount">
            <summary>
            The number of meshes belonging to the permutation.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Scenario.AiObjective.Task.MaximumDuration">
            <summary>
            Exhaust this task after it has been active for this long.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Scenario.AiObjective.Task.ExhaustionDelay">
            <summary>
            When a task exhausts, hold actors in the task for this long before releasing them.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Scenario.AiObjective.Task.DialogueType">
            <summary>
            When someone enters this task for the first time, they play this type of dialogue.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Scenario.AiObjective.Task.LifetimeCount">
            <summary>
            Task will never want to suck in more then N guys over lifetime (soft ceiling only applied when limit exceeded.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Scenario.AiObjective.Task.MaxBodyCount">
            <summary>
            Task becomes inactive after the given number of casualties.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Scenario.AiObjective.Task.MinStrength">
            <summary>
            Task becomes inactive after the strength of the participants falls below the given level.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Scenario.AiObjective.Task.FollowFiringPointQueryBlock.ZThreshold">
            <summary>
            Don't include firing points outside of this vertical margin.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ScenarioLightmapBspData.CoefficientsMapScale">
            <summary>
            When sampling from the lightmap coefficient map, the resuling rgb SH coefficients are multiplied by this luminance scale.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.ScenarioLightmapBspData.Unused">
            <summary>
            Actually unused in all games. Probably intended for another object type.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.ShieldImpact.ShieldIntensityBlock">
            <summary>
            Shield intensity is a combination of recent damage and current damage.
            These controls let you adjust the relative intensity contribution from each.
            'shield_intensity' can be used as an input to any of the animation function curves below.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.ShieldImpact.ShieldEdgeBlock">
            <summary>
            These controls allow you to define the location and width of the shield edges.
            The edge is faded as a function of the surface normal with respect to the camera.
            Radius 1.0 corresponds to the glancing edges of the surface(the silhouette edges).
            Radius 0.0 corresponds to the area of the surface directly facing the camera(the center).
            You can control separately the inner and outer fades.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.ShieldImpact.PlasmaBlock">
            <summary>
            These controls allow you to define the appearance of the plasma effect.
            The plasma is calculated using the standard formula(1-abs(tex0-tex1))^(sharpness).
            Tiling scale controls the spatial tiling of the plasma textures.
            Scroll speed controls how fast the textures scroll on the surface.
            You can specify separate sharpness values for the edge and the center.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.ShieldImpact.ExtrusionOscillationBlock">
            <summary>
            These controls allow you to define the oscillation in the extrusion.
            These textures are tiled and scrolled in the xy and yz planes, and their red channel is applied as an offset to the extrusion
            Tiling scale controls the spatial tiling of the plasma textures.
            Scroll speed controls how fast the textures scroll on the surface.
            You can specify separate sharpness values for the edge and the center.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.ShieldImpactFlags">
            <summary>
            Bitwise flags for <see cref="T:TagTool.Tags.Definitions.ShieldImpact"/>.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.SoundCacheFileGestalt.RuntimePermutationFlags">
            <summary>
            Bit vector
            </summary>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetChunkSize(System.Int32)">
            <summary>
            Get the chunk size from a chunk in Gen3 Blam engine
            </summary>
            <param name="chunkIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetChunkOffset(System.Int32)">
            <summary>
            Get the chunk offset.
            </summary>
            <param name="chunkIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetPermutationSize(System.Int32)">
            <summary>
            Get the size of the data for a permutation
            </summary>
            <param name="permutationIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetPermutationOffset(System.Int32)">
            <summary>
            Get the offset of the permutation in the resource.
            </summary>
            <param name="permutationIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetFirstPermutationIndex(System.Int32,TagTool.Cache.CachePlatform)">
            <summary>
            Get the index of the first permutation in a pitch range block.
            </summary>
            <param name="pitchRangeIndex"></param>
            <param name="platform"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetFirstPermutationIndex(TagTool.Audio.PitchRange,TagTool.Cache.CachePlatform)">
            <summary>
            Get the index of the first permutation in a pitch range block.
            </summary>
            <param name="pitchRange"></param>
            <param name="platform"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetPermutationCount(System.Int32,TagTool.Cache.CachePlatform)">
            <summary>
            Get the number of permutation in the pitch range block.
            </summary>
            <param name="pitchRangeIndex"></param>
            <param name="platform"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetPermutation(System.Int32)">
            <summary>
            Get permutation block.
            </summary>
            <param name="permutationIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetPermutationSamples(System.Int32)">
            <summary>
            Get the number of samples in a permutation
            </summary>
            <param name="permutationIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetSamplesPerPitchRange(System.Int32,TagTool.Cache.CachePlatform)">
            <summary>
            Get the total number of audio samples in a pitch range block.
            </summary>
            <param name="pitchRangeIndex"></param>
            <param name="platform"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetPermutationOrder(System.Int32,TagTool.Cache.CachePlatform)">
            <summary>
            Get the order of the permutations.
            </summary>
            <param name="pitchRangeIndex"></param>
            <param name="platform"></param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.SoundCacheFileGestalt.GetFileSize(System.Int32,System.Int32,TagTool.Cache.CachePlatform)">
            <summary>
            Get the file size given the pitch range blocks
            </summary>
            <param name="basePitchRangeIndex"></param>
            <param name="pitchRangeCount"></param>
            <param name="platform"></param>
            <returns></returns>
        </member>
        <member name="F:TagTool.Tags.Definitions.SoundClasses.Class.SoundClassDistanceParameters.DontObstructDistance">
            <summary>
            don't obstruct below this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.SoundClasses.Class.SoundClassDistanceParameters.DontPlayDistance">
            <summary>
            don't play below this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.SoundClasses.Class.SoundClassDistanceParameters.AttackDistance">
            <summary>
            start playing at full volume at this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.SoundClasses.Class.SoundClassDistanceParameters.MinimumDistance">
            <summary>
            start attenuating at this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.SoundClasses.Class.SoundClassDistanceParameters.SustainBeginDistance">
            <summary>
            set attenuation to sustain db at this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.SoundClasses.Class.SoundClassDistanceParameters.SustainEndDistance">
            <summary>
            continue attenuating to silence at this distance
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.SoundClasses.Class.SoundClassDistanceParameters.MaximumDistance">
            <summary>
            the distance beyond which this sound is no longer audible
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.SoundClasses.Class.SoundClassDistanceParameters.SustainDecibels">
            <summary>
            the amount of attenuation between sustain begin and end
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.Unit.MotionTrackerRangeModifier">
            <summary>
            If the player is in a seat in this unit then modify the motion tracker range by this amount.
            See base value in player globals for how this modifier is applied.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Definitions.VFilesList">
            <summary>
            Contains a list of vfiles.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.VFilesList.Files">
            <summary>
            The files in the list.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.VFilesList.Data">
            <summary>
            The data block containing the data for every file.
            </summary>
        </member>
        <member name="M:TagTool.Tags.Definitions.VFilesList.Find(System.String)">
            <summary>
            Attempts to find a file by its path.
            </summary>
            <param name="path">The path of the file to find.</param>
            <returns>The file if found, or <c>null</c> otherwise.</returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.VFilesList.Extract(TagTool.Tags.Definitions.VFileInfo)">
            <summary>
            Extracts the specified file.
            </summary>
            <param name="file">The file to extract.</param>
            <returns>The file data.</returns>
        </member>
        <member name="M:TagTool.Tags.Definitions.VFilesList.Replace(TagTool.Tags.Definitions.VFileInfo,System.Byte[])">
            <summary>
            Replaces the specified file.
            </summary>
            <param name="file">The file to replace.</param>
            <param name="newData">The data to replace it with.</param>
        </member>
        <member name="M:TagTool.Tags.Definitions.VFilesList.Insert(System.String,System.String,System.Byte[])">
            <summary>
            Adds a new file to the tag.
            </summary>
            <param name="name">The name of the file to add.</param>
            <param name="folder">The folder the file is located in.</param>
            <param name="fileData">The file data.</param>
        </member>
        <member name="M:TagTool.Tags.Definitions.VFilesList.Remove(TagTool.Tags.Definitions.VFileInfo)">
            <summary>
            Removes a file from the tag.
            </summary>
            <param name="file">The file to remove.</param>
        </member>
        <member name="T:TagTool.Tags.Definitions.VFileInfo">
            <summary>
            Contains information about a vfile.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.VFileInfo.Name">
            <summary>
            The name of the file (e.g. "hf2p_weapons_categories.ps").
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.VFileInfo.Folder">
            <summary>
            The folder the file is located in (e.g. "ps\autogen\").
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.VFileInfo.Offset">
            <summary>
            The starting offset of the file from the file data block.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Definitions.VFileInfo.Size">
            <summary>
            The size of the file in bytes.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Resources.BitmapTextureInterleavedInteropResource">
            <summary>
            Resource definition data for bitmap textures.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Resources.BitmapTextureInterleavedInteropResource.Texture">
            <summary>
            The texture object.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Resources.BitmapTextureInterleavedInteropResource.BitmapInterleavedDefinition">
            <summary>
            Describes a bitmap.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Resources.BitmapTextureInteropResource">
            <summary>
            Resource definition data for bitmap textures.
            </summary>
        </member>
        <member name="T:TagTool.Tags.Resources.RenderGeometryApiResourceDefinition">
            <summary>
            Resource definition data for renderable geometry.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Resources.RenderGeometryApiResourceDefinition.Textures">
            <summary>
            Unused s_tag_d3d_texture
            </summary>
        </member>
        <member name="F:TagTool.Tags.Resources.RenderGeometryApiResourceDefinition.InterleavedTextures">
            <summary>
            Unused s_tag_d3d_texture_interleaved
            </summary>
        </member>
        <member name="F:TagTool.Tags.Resources.RenderGeometryApiResourceDefinition.VertexBuffers">
            <summary>
            The vertex buffer definitions for the model data.
            </summary>
        </member>
        <member name="F:TagTool.Tags.Resources.RenderGeometryApiResourceDefinition.IndexBuffers">
            <summary>
            The index buffer definitions for the model data.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagEnumMemberAttribute.MinVersion">
            <summary>
            The minimum cache version the tag field is present in.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagEnumMemberAttribute.MaxVersion">
            <summary>
            The maximum cache version the tag field is present in.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagEnumMemberAttribute.Version">
            <summary>
            The set of versions the tag field is present in. (Can be combined with MinVersion/MaxVersion)
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagEnumMemberAttribute.Gen">
            <summary>
            The game generation of the tag field.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagEnumMemberAttribute.Platform">
            <summary>
            The platforms that the tag field are available on.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFile.Version">
            <summary>
            The version of the tag definition in the tag file.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFile.Group">
            <summary>
            The group of the tag definition in the file.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFile.TagReferences">
            <summary>
            All tags referenced by the tag instance in the file.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFile.StringReferences">
            <summary>
            All string ids referenced by the tag instance in the file.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFile.DefinitionData">
            <summary>
            The definition data of the tag instance in the file.
            </summary>
        </member>
        <member name="T:TagTool.Tags.TagFile.TagReference">
            <summary>
            A tag reference descriptor.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFile.TagReference.GroupTag">
            <summary>
            The group tag of the referenced tag.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFile.TagReference.TagName">
            <summary>
            The name of the referenced tag.
            </summary>
        </member>
        <member name="T:TagTool.Tags.TagFile.StringReference">
            <summary>
            A string reference descriptor.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFile.StringReference.Value">
            <summary>
            The display value of the referenced string.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFile.ResourceDatum.Data">
            <summary>
            The non-compressed data of the resource.
            </summary>
        </member>
        <member name="M:TagTool.Tags.TagGroup.BelongsTo(TagTool.Tags.TagGroup[])">
            <summary>
            Determines whether this group is a subgroup of another group.
            </summary>
            <param name="groups">The group to check.</param>
            <returns><c>true</c> if this group is a subgroup of the other group.</returns>
        </member>
        <member name="M:TagTool.Tags.TagGroup.BelongsTo(System.String[])">
            <summary>
            Determines whether this group is a subgroup of another group.
            </summary>
            <param name="groupTags">The group tag to check, as a 4-character string.</param>
            <returns><c>true</c> if this group is a subgroup of the group tag.</returns>
        </member>
        <member name="M:TagTool.Tags.TagGroup.BelongsTo(TagTool.Common.Tag[])">
            <summary>
            Determines whether this group is a subgroup of another group.
            </summary>
            <param name="groupTags">The group tag to check.</param>
            <returns><c>true</c> if this group is a subgroup of the group tag.</returns>
        </member>
        <member name="F:TagTool.Tags.TagResourceReference.Gen3ResourceID">
            <summary>
            ID is an index in ResourceGestalt.TagResources
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagResourceReference.HaloOnlinePageableResource">
            <summary>
            PageableResource structure (as a pointer)
            </summary>
        </member>
        <member name="T:TagTool.Tags.TagFieldInfo">
            <summary>
            Class for pairing of <see cref="T:System.Reflection.FieldInfo"/> and <see cref="T:TagTool.Tags.TagFieldAttribute"/>.
            </summary>
        </member>
        <member name="M:TagTool.Tags.TagFieldInfo.#ctor(System.Reflection.FieldInfo,TagTool.Tags.TagFieldAttribute,System.UInt32,System.UInt32)">
            <summary>
            Constructs a <see cref="T:TagTool.Tags.TagFieldInfo"/> from a <see cref="T:System.Reflection.FieldInfo"/> and <see cref="T:TagTool.Tags.TagFieldAttribute"/>.
            </summary>
            <param name="field">The <see cref="T:System.Reflection.FieldInfo"/> for the field.</param>
            <param name="attribute">The <see cref="T:TagTool.Tags.TagFieldAttribute"/> for the field.</param>
            <param name="offset">The offset (in bytes) of the field in it's structure.</param>
            <param name="size">The size of the field (in bytes).</param>
        </member>
        <member name="P:TagTool.Tags.TagFieldInfo.FieldInfo">
            <summary>
            Gets the <see cref="T:System.Reflection.FieldInfo"/> that was used in construction.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldInfo.Size">
            <summary>
            Gets the field size (in bytes) that was used in construction.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldInfo.Offset">
            <summary>
            Gets the field offset (in bytes) that was used in construction.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldInfo.Attribute">
            <summary>
            Gets the <see cref="T:TagTool.Tags.TagFieldAttribute"/> that was used in construction.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFieldInfo.SetValue">
            <summary>
            Encapsulates a method for SETTING this field's value on it's owner.
            Usage: 'tagFieldInfo.SetValue(object owner, object value);'
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFieldInfo.GetValue">
            <summary>
            Encapsulates a method for GETTING this field's value on it's owner.
            Usage: 'var value = tagFieldInfo.GetValue(object owner);'
            </summary>
        </member>
        <member name="T:TagTool.Tags.TagFieldInfo.ValueSetter">
            <summary>
            A <see cref="T:System.Delegate"/> for SETTING the value of a field on it's owner.
            </summary>
            <param name="owner">The <see cref="T:System.Object"/> that owns the field.</param>
            <param name="value">The <see cref="T:System.Object"/> to SET the value of the field to.</param>
        </member>
        <member name="T:TagTool.Tags.TagFieldInfo.ValueGetter">
            <summary>
            A <see cref="T:System.Delegate"/> for GETTING the value of a field on it's owner.
            </summary>
            <param name="owner">The <see cref="T:System.Object"/> that owns the field.</param>
            <returns>The value of the field on it's owner.</returns>
        </member>
        <member name="M:TagTool.Tags.TagFieldInfo.GetFieldSize(System.Type,TagTool.Tags.TagFieldAttribute,TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform)">
            <summary>
            Gets the size of a tag-field.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of the field.</param>
            <param name="attr">The <see cref="T:TagTool.Tags.TagFieldAttribute"/> of the field.</param>
            <param name="targetVersion">The <see cref="T:TagTool.Cache.CacheVersion"/> to target.</param>
            <param name="cachePlatform"></param>
            <returns></returns>
        </member>
        <member name="T:TagTool.Tags.TagStructureReference`1">
            <summary>
            Points to a D3D-related object.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagStructureReference`1.Definition">
            <summary>
            The definition data for the object.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagStructureReference`1.RuntimeAddress">
            <summary>
            The address of the object in memory.
            This should be set to 0 because it will be used at runtime.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagStructureReference`1.DefinitionAddress">
            <summary>
            The address of the structure definition in memory.
            This should be set to 0 because it will be used at runtime.
            </summary>
        </member>
        <member name="T:TagTool.Tags.D3DStructure`1">
            <summary>
            D3Dstructure, size is 0xC, enforced in the deserializer
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:TagTool.Tags.TagFieldAttribute">
            <summary>
            Attribute for automatically-serializable values in a tag.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Flags">
            <summary>
            The flags of the field.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.MinVersion">
            <summary>
            The minimum cache version the tag field is present in.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.MaxVersion">
            <summary>
            The maximum cache version the tag field is present in.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Version">
            <summary>
            The set of versions the tag field is present in. (Can be combined with MinVersion/MaxVersion)
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Gen">
            <summary>
            The game generation of the tag field.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Platform">
            <summary>
            The platforms that the tag field are available on.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.BuildType">
            <summary>
            The cache build type the structure applies to.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Upgrade">
            <summary>
            The name of the field to upgrade to (if any).
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Downgrade">
            <summary>
            The name of the field to downgrade to (if any).
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Length">
            <summary>
            If the value is an inline array, determines the number of elements in the array.
            If the value is a string, determines the maximum number of characters in the string (including the null terminator).
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.DataAlign">
            <summary>
            The power of two to align the field's data to.
            Only applicable to fields which contain pointers.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Align">
            <summary>
            The power of two to align the field to.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.CharSet">
            <summary>
            If the field is a string, determines the character set of the string.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.ValidTags">
            <summary>
            If the field is a tag reference, an array of valid group tags, or any if null.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Format">
            <summary>
            A data-orientage description of the usage format of the field.
            (i.e., world units, [0,1], degrees, etc...)
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Field">
            <summary>
            If the field is an array and has relative length, the name of the field containing the length.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.Compression">
            <summary>
            If the field is a real number, the compression of the field.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFieldAttribute.ForceNullTerminated">
            <summary>
            Used when the string written must absolutely be null terminated. For example Maxscript doesn't read fixed length strings
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldAttribute.EnumType">
            <summary>
            The underlying type of the Enum.
            </summary>
        </member>
        <member name="T:TagTool.Tags.TagFieldEnumerable">
            <summary>
            Allows easy enumeration over a tag structure's elements and filtering by version.
            </summary>
        </member>
        <member name="F:TagTool.Tags.TagFieldEnumerable.TagFieldInfos">
            <summary>
            Collection of <see cref="T:TagTool.Tags.TagFieldInfo"/> for a <see cref="T:TagTool.Tags.TagStructureInfo"/> in a given
            <see cref="T:TagTool.Cache.CacheVersion"/>.
            </summary>
        </member>
        <member name="M:TagTool.Tags.TagFieldEnumerable.#ctor(TagTool.Tags.TagStructureInfo)">
            <summary>
            Constructs a <see cref="T:TagTool.Tags.TagFieldInfo"/> <see cref="T:System.Collections.Generic.List`1"/> over a tag structure for a <see cref="T:TagTool.Tags.TagStructureInfo"/> in a given
            <see cref="T:TagTool.Cache.CacheVersion"/>.
            </summary>
            <param name="info">The info for the structure. Only fields which match the version used to create the info will be enumerated over.</param>
        </member>
        <member name="P:TagTool.Tags.TagFieldEnumerable.Info">
            <summary>
            Gets the info that was used to construct the enumerator.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldEnumerable.TagFieldInfo">
            <summary>
            Gets information about the current field.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagFieldEnumerable.Count">
            <summary>
            Gets the count of <see cref="F:TagTool.Tags.TagFieldEnumerable.TagFieldInfos"/>.
            </summary>
        </member>
        <member name="M:TagTool.Tags.TagFieldEnumerable.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> over the <see cref="T:TagTool.Tags.TagFieldInfo"/> <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:TagTool.Tags.TagFieldEnumerable.Item(System.Int32)">
            <summary>
            An indexer into the <see cref="T:TagTool.Tags.TagFieldInfo"/> <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <param name="index">The index into the <see cref="T:TagTool.Tags.TagFieldInfo"/> <see cref="T:System.Collections.Generic.List`1"/>.</param>
            <returns>The <see cref="T:TagTool.Tags.TagFieldInfo"/> at the specified index in the 
            <see cref="T:TagTool.Tags.TagFieldInfo"/> <see cref="T:System.Collections.Generic.List`1"/>.</returns>
        </member>
        <member name="M:TagTool.Tags.TagFieldEnumerable.Build">
            <summary>
            Builds the <see cref="T:TagTool.Tags.TagFieldInfo"/> <see cref="T:System.Collections.Generic.List`1"/> to be enumerated.
            </summary>
        </member>
        <member name="M:TagTool.Tags.TagFieldEnumerable.CreateTagFieldInfo(System.Reflection.FieldInfo,TagTool.Tags.TagFieldAttribute,TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform,System.UInt32@)">
            <summary>
            Creates and adds a <see cref="T:TagTool.Tags.TagFieldInfo"/> to the <see cref="T:TagTool.Tags.TagFieldInfo"/> <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <param name="field">The <see cref="T:System.Reflection.FieldInfo"/> to create the <see cref="T:TagTool.Tags.TagFieldInfo"/> from.</param>
            <param name="attribute">The <see cref="T:TagTool.Tags.TagFieldAttribute"/> for the <see cref="T:TagTool.Tags.TagFieldInfo"/>.</param>
            <param name="targetVersion">The target <see cref="T:TagTool.Cache.CacheVersion"/> the <see cref="T:TagTool.Tags.TagFieldInfo"/> belongs to.</param>
            <param name="cachePlatform"></param>
            <param name="offset">The offset (in bytes) of the field. Gets updated to reflect the new offset following field.</param>
        </member>
        <member name="M:TagTool.Tags.TagFieldEnumerable.Find(System.Predicate{System.Reflection.FieldInfo})">
            <summary>
            Finds a <see cref="P:TagTool.Tags.TagFieldEnumerable.TagFieldInfo"/> based on a <see cref="T:System.Reflection.FieldInfo"/> <see cref="T:System.Predicate`1"/>.
            </summary>
            <param name="match">The <see cref="T:System.Reflection.FieldInfo"/> <see cref="T:System.Predicate`1"/> to query.</param>
            <returns></returns>
        </member>
        <member name="T:TagTool.Tags.TagStructureAttribute">
            <summary>
            Attribute for a serializable structure in a tag.
            If a structure has more than one of these attributes, then all attributes with version restrictions will be checked first.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureAttribute.Align">
            <summary>
            The power of two to align the block to.
            Can be 0 if not set.
            </summary>
            <remarks>
            Note that this value is only a guide for the serializer, and a
            different alignment may actually be used if necessary.
            </remarks>
        </member>
        <member name="P:TagTool.Tags.TagStructureAttribute.Size">
            <summary>
            The size of the structure in bytes, NOT including parent structures.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureAttribute.Name">
            <summary>
            The internal name of the structure.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureAttribute.Tag">
            <summary>
            The name of the tag group that the structure applies to.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureAttribute.MinVersion">
            <summary>
            The minimum engine version which the structure applies to.
            Can be <see cref="F:TagTool.Cache.CacheVersion.Unknown"/> (default) if unbounded.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureAttribute.MaxVersion">
            <summary>
            The maximum engine version which the structure applies to.
            Can be <see cref="F:TagTool.Cache.CacheVersion.Unknown"/> (default) if unbounded.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureAttribute.Platform">
            <summary>
            The platforms that the structure is available on.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureAttribute.Gen">
            <summary>
            The cache generation the structure applies to.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureAttribute.BuildType">
            <summary>
            The cache build type the structure applies to.
            </summary>
        </member>
        <member name="T:TagTool.Tags.TagStructureInfo">
            <summary>
            Utility class for analyzing a tag structure type's inheritance hierarchy.
            </summary>
        </member>
        <member name="M:TagTool.Tags.TagStructureInfo.#ctor(System.Type)">
            <summary>
            Constructs a <see cref="T:TagTool.Tags.TagStructureInfo"/> object which contains info about a tag structure type.
            </summary>
            <param name="structureType">The tag structure type to analyze.</param>
        </member>
        <member name="M:TagTool.Tags.TagStructureInfo.#ctor(System.Type,TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform)">
            <summary>
            Constructs a <see cref="T:TagTool.Tags.TagStructureInfo"/> object which contains info about a tag structure type.
            </summary>
            <param name="structureType">The tag structure type to analyze.</param>
            <param name="version">The engine version to compare attributes against.</param>
            <param name="cachePlatform"></param>
        </member>
        <member name="P:TagTool.Tags.TagStructureInfo.Version">
            <summary>
            Gets the engine version that was used to construct the info object.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureInfo.Types">
            <summary>
            Gets the structure types in the structure's inheritance hierarchy in order from child to base.
            Types which do not have a matching TagStructure attribute will not be included in this list.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureInfo.TotalSize">
            <summary>
            Gets the total size of the structure, including parent structures.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureInfo.Structure">
            <summary>
            Gets the current <see cref="T:TagTool.Tags.TagStructureAttribute"/>.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureInfo.GroupTag">
            <summary>
            Gets the group tag for the structure, or -1 if none.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureInfo.ParentGroupTag">
            <summary>
            Gets the parent group tag for the structure, or -1 if none.
            </summary>
        </member>
        <member name="P:TagTool.Tags.TagStructureInfo.GrandparentGroupTag">
            <summary>
            Gets the grandparent group tag for the structure, or -1 if none.
            </summary>
        </member>
        <member name="T:TagTool.Direct3D.D3DObjectType">
            <summary>
            D3D object types.
            </summary>
        </member>
        <member name="T:TagTool.Direct3D.D3D10.D3D10AlphaMode">
            <summary>
            D3D10 alpha blending modes.
            </summary>
        </member>
        <member name="T:TagTool.Direct3D.D3D10.D3D10Dimension">
            <summary>
            D3D10 resource dimensions.
            </summary>
        </member>
        <member name="M:TagTool.Direct3D.D3D9x.D3D.Log2(System.Int32)">
            <summary>
            input must be a power of 2
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:TagTool.BDirect3D.D3D10.D3D10MiscFlags">
            <summary>
            Miscellaneous D3D10 flags.
            </summary>
        </member>
        <member name="F:TagTool.BDirect3D.D3D10.D3D10MiscFlags.TextureCube">
            <summary>
            Indicates that a 2D texture is also a cubemap.
            </summary>
        </member>
        <member name="M:TagTool.Pathfinding.Utils.PathfindingConverter.CreateResourcePathfindingFromTag(TagTool.Pathfinding.TagPathfinding)">
            <summary>
            Converts gen3 pathfinding from the tag to the resource (H3 -> ODST)
            </summary>
            <param name="tagPathfinding"></param>
            <returns></returns>
        </member>
        <member name="T:TagTool.Serialization.HaloOnlineSerializationContext">
            <summary>
            A serialization context for serializing and deserializing tags.
            </summary>
        </member>
        <member name="P:TagTool.Serialization.HaloOnlineSerializationContext.Tag">
            <summary>
            Gets the tag that the context is operating on.
            </summary>
        </member>
        <member name="M:TagTool.Serialization.HaloOnlineSerializationContext.#ctor(System.IO.Stream,TagTool.Cache.GameCacheHaloOnlineBase,TagTool.Cache.HaloOnline.CachedTagHaloOnline)">
            <summary>
            Creates a tag serialization context which serializes data into a tag.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="context">The game cache context.</param>
            <param name="tag">The tag to overwrite.</param>
        </member>
        <member name="T:TagTool.Serialization.ResourceDeserializer">
            <summary>
            Deserializes tag data into objects by     
            </summary>
        </member>
        <member name="M:TagTool.Serialization.ResourceDeserializer.DeserializeD3DStructure(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,System.Type)">
            <summary>
            Deserializes a value which is pointed to by an address.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="valueType">The type of the value to deserialize.</param>
            <returns>The deserialized value.</returns>
        </member>
        <member name="M:TagTool.Serialization.ResourceSerializer.Serialize(TagTool.Serialization.ISerializationContext,System.Object,System.Nullable{System.UInt32})">
            <summary>
            Serializes a tag structure into a context.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="tagStructure">The tag structure.</param>
            <param name="offset">An optional offset to begin serializing at.</param>
        </member>
        <member name="T:TagTool.Serialization.IDataBlock">
            <summary>
            Interface for a block of data being serialized.
            </summary>
        </member>
        <member name="P:TagTool.Serialization.IDataBlock.Stream">
            <summary>
            Gets the stream open on the data block.
            </summary>
        </member>
        <member name="P:TagTool.Serialization.IDataBlock.Writer">
            <summary>
            Gets the writer open on the data block's stream.
            </summary>
        </member>
        <member name="M:TagTool.Serialization.IDataBlock.WritePointer(System.UInt32,System.Type)">
            <summary>
            Writes a pointer to an object at the current position in the block.
            </summary>
            <param name="targetOffset">The target offset.</param>
            <param name="type">The type of object that the pointer will point to.</param>
        </member>
        <member name="M:TagTool.Serialization.IDataBlock.PreSerialize(TagTool.Tags.TagFieldAttribute,System.Object)">
            <summary>
            Called before an object is serialized into the block.
            </summary>
            <param name="info">Information about the tag element.</param>
            <param name="obj">The object intended to be serialized.</param>
            <returns>The object which should actually be serialized.</returns>
        </member>
        <member name="M:TagTool.Serialization.IDataBlock.SuggestAlignment(System.UInt32)">
            <summary>
            Suggests a power of two to align the block on.
            </summary>
            <param name="align">The power of two to suggest.</param>
        </member>
        <member name="M:TagTool.Serialization.IDataBlock.Finalize(System.IO.Stream)">
            <summary>
            Finalizes the block, writing it out to a stream.
            </summary>
            <param name="outStream">The output stream.</param>
            <returns>The offset of the block within the output stream.</returns>
        </member>
        <member name="T:TagTool.Serialization.ISerializationContext">
            <summary>
            A context for serializing or deserializing tag data.
            </summary>
        </member>
        <member name="M:TagTool.Serialization.ISerializationContext.BeginSerialize(TagTool.Tags.TagStructureInfo)">
            <summary>
            Begins serializing tag data.
            </summary>
            <param name="info">Information about the structure that is being serialized.</param>
        </member>
        <member name="M:TagTool.Serialization.ISerializationContext.EndSerialize(TagTool.Tags.TagStructureInfo,System.Byte[],System.UInt32)">
            <summary>
            Finishes serializing tag data.
            </summary>
            <param name="info">Information about the structure that was serialized.</param>
            <param name="data">The data that was serialized.</param>
            <param name="mainStructOffset">The offset of the main structure within the data.</param>
        </member>
        <member name="M:TagTool.Serialization.ISerializationContext.BeginDeserialize(TagTool.Tags.TagStructureInfo)">
            <summary>
            Begins deserializing tag data.
            </summary>
            <param name="info">Information about the structure that is being deserialized.</param>
            <returns>The reader to read from.</returns>
        </member>
        <member name="M:TagTool.Serialization.ISerializationContext.EndDeserialize(TagTool.Tags.TagStructureInfo,System.Object)">
            <summary>
            Finishes deserializing tag data.
            </summary>
            <param name="info">Information about the structure that was deserialized.</param>
            <param name="obj">The resulting object.</param>
        </member>
        <member name="M:TagTool.Serialization.ISerializationContext.AddressToOffset(System.UInt32,System.UInt32)">
            <summary>
            Converts an address to an offset.
            </summary>
            <param name="currentOffset">The offset that the address is located at.</param>
            <param name="address">The address to convert.</param>
            <returns>The offset corresponding to the address.</returns>
        </member>
        <member name="M:TagTool.Serialization.ISerializationContext.GetTagByIndex(System.Int32)">
            <summary>
            Looks up a tag by its index.
            </summary>
            <param name="index">The index of the tag to get.</param>
            <returns>The tag if it exists, or <c>null</c> otherwise.</returns>
        </member>
        <member name="M:TagTool.Serialization.ISerializationContext.GetTagByName(TagTool.Tags.TagGroup,System.String)">
            <summary>
            Looks up a tag by its name.
            </summary>
            <param name="group">The tag group of the tag instance.</param>
            <param name="name">The name of the tag instance.</param>
            <returns></returns>
        </member>
        <member name="M:TagTool.Serialization.ISerializationContext.CreateBlock">
            <summary>
            Creates a data block.
            </summary>
            <returns>The created block.</returns>
        </member>
        <member name="T:TagTool.Serialization.TagDeserializer">
            <summary>
            Deserializes tag data into objects by     
            </summary>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.#ctor(TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform)">
            <summary>
            Constructs a tag deserializer for a specific engine version.
            </summary>
            <param name="version">The engine version to target.</param>
            <param name="cachePlatform"></param>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.Deserialize``1(TagTool.Serialization.ISerializationContext)">
            <summary>
            Deserializes tag data into an object.
            </summary>
            <typeparam name="T">The type of object to deserialize the tag data as.</typeparam>
            <param name="context">The serialization context to use.</param>
            <returns>The object that was read.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.Deserialize(TagTool.Serialization.ISerializationContext,System.Type)">
            <summary>
            Deserializes tag data into an object.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="structureType">The type of object to deserialize the tag data as.</param>
            <returns>The object that was read.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeStruct(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,TagTool.Tags.TagStructureInfo)">
            <summary>
            Deserializes a structure.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="info">Information about the structure to deserialize.</param>
            <returns>The deserialized structure.</returns>
            <exception cref="T:System.InvalidOperationException">Target type must have TagStructureAttribute</exception>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeProperty(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,System.Object,TagTool.Tags.TagFieldInfo,System.Int64)">
            <summary>
            Deserializes a property of a structure.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="instance">The instance to store the property to.</param>
            <param name="tagFieldInfo">The active element enumerator.</param>
            <param name="baseOffset">The offset of the start of the structure.</param>
            <exception cref="T:System.InvalidOperationException">Offset for property is outside of its structure</exception>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeValue(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,TagTool.Tags.TagFieldAttribute,System.Type)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="valueInfo">The value information. Can be <c>null</c>.</param>
            <param name="valueType">The type of the value to deserialize.</param>
            <returns>The deserialized value.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializePrimitiveValue(TagTool.IO.EndianReader,System.Type)">
            <summary>
            Deserializes a primitive value.
            </summary>
            <param name="reader">The reader.</param>
            <param name="valueType">The type of the value to deserialize.</param>
            <returns>The deserialized value.</returns>
            <exception cref="T:System.ArgumentException">Unsupported type</exception>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeComplexValue(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,TagTool.Tags.TagFieldAttribute,System.Type)">
            <summary>
            Deserializes a complex value.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="valueInfo">The value information. Can be <c>null</c>.</param>
            <param name="valueType">The type of the value to deserialize.</param>
            <returns>The deserialized value.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeTagBlockAsList(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,System.Type)">
            <summary>
            Deserializes a tag block (list of values).
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="valueType">The type of the value to deserialize.</param>
            <returns>The deserialized tag block.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeTagBlock(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,System.Type)">
            <summary>
            Deserializes a tag block
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="valueType">The type of the value to deserialize.</param>
            <returns>The deserialized tag block.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeD3DStructure(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,System.Type)">
            <summary>
            Deserializes a value which is pointed to by an address.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="valueType">The type of the value to deserialize.</param>
            <returns>The deserialized value.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeIndirectValue(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,System.Type)">
            <summary>
            Deserializes a value which is pointed to by an address.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="valueType">The type of the value to deserialize.</param>
            <returns>The deserialized value.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeTagReference(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,TagTool.Tags.TagFieldAttribute)">
            <summary>
            Deserializes a tag reference.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="valueInfo">The value information. Can be <c>null</c>.</param>
            <returns>The deserialized tag reference.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeDataReference(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext)">
            <summary>
            Deserializes a data reference.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <returns>The deserialized data reference.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeInlineArray(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,TagTool.Tags.TagFieldAttribute,System.Type)">
            <summary>
            Deserializes an inline array.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="valueInfo">The value information. Can be <c>null</c>.</param>
            <param name="valueType">The type of the value to deserialize.</param>
            <returns>The deserialized array.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeString(TagTool.IO.EndianReader,TagTool.Tags.TagFieldAttribute)">
            <summary>
            Deserializes a null-terminated ASCII string.
            </summary>
            <param name="reader">The reader.</param>
            <param name="valueInfo">The value information.</param>
            <returns>The deserialized string.</returns>
        </member>
        <member name="M:TagTool.Serialization.TagDeserializer.DeserializeRange(TagTool.IO.EndianReader,TagTool.Serialization.ISerializationContext,System.Type)">
            <summary>
            Deserializes a <see cref="T:TagTool.Common.Bounds`1"/> value.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">The serialization context to use.</param>
            <param name="rangeType">The range's type.</param>
            <returns>The deserialized range.</returns>
        </member>
        <member name="T:TagTool.Serialization.TagSerializer">
            <summary>
            Serializes classes into tag data by     /// </summary>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.#ctor(TagTool.Cache.CacheVersion,TagTool.Cache.CachePlatform,TagTool.IO.EndianFormat)">
            <summary>
            Constructs a tag serializer for a specific engine version.
            </summary>
            <param name="version">The engine version to target.</param>
            <param name="cachePlatform">Cache platform of the engine</param>
            <param name="format">EndianFormat, default to little endian</param>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.Serialize(TagTool.Serialization.ISerializationContext,System.Object,System.Nullable{System.UInt32})">
            <summary>
            Serializes a tag structure into a context.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="tagStructure">The tag structure.</param>
            <param name="offset">An optional offset to begin serializing at.</param>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializeStruct(TagTool.Serialization.ISerializationContext,System.IO.MemoryStream,TagTool.Serialization.IDataBlock,TagTool.Tags.TagStructureInfo,System.Object)">
            <summary>
            Serializes a structure into a temporary memory block.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="tagStream">The stream to write completed blocks of tag data to.</param>
            <param name="block">The temporary block to write incomplete tag data to.</param>
            <param name="info">Information about the tag structure type.</param>
            <param name="structure">The structure to serialize.</param>
            <exception cref="T:System.InvalidOperationException">Structure type must have TagStructureAttribute</exception>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializeProperty(TagTool.Serialization.ISerializationContext,System.IO.MemoryStream,TagTool.Serialization.IDataBlock,System.Object,TagTool.Tags.TagFieldInfo,System.Int64)">
            <summary>
            Serializes a property.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="tagStream">The stream to write completed blocks of tag data to.</param>
            <param name="block">The temporary block to write incomplete tag data to.</param>
            <param name="instance">The object that the property belongs to.</param>
            <param name="tagFieldInfo">The field enumerator.</param>
            <param name="baseOffset">The base offset of the structure from the start of its block.</param>
            <exception cref="T:System.InvalidOperationException">Offset for property \ + property.Name + \ is outside of its structure</exception>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializeValue(TagTool.Serialization.ISerializationContext,System.IO.MemoryStream,TagTool.Serialization.IDataBlock,System.Object,TagTool.Tags.TagFieldAttribute,System.Type)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="tagStream">The stream to write completed blocks of tag data to.</param>
            <param name="block">The temporary block to write incomplete tag data to.</param>
            <param name="val">The value.</param>
            <param name="valueInfo">Information about the value. Can be <c>null</c>.</param>
            <param name="valueType">Type of the value.</param>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializePrimitiveValue(TagTool.IO.EndianWriter,System.Object,System.Type)">
            <summary>
            Serializes a primitive value.
            </summary>
            <param name="writer">The writer to write to.</param>
            <param name="val">The value.</param>
            <param name="valueType">Type of the value.</param>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializeComplexValue(TagTool.Serialization.ISerializationContext,System.IO.MemoryStream,TagTool.Serialization.IDataBlock,System.Object,TagTool.Tags.TagFieldAttribute,System.Type)">
            <summary>
            Serializes a complex value.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="tagStream">The stream to write completed blocks of tag data to.</param>
            <param name="block">The temporary block to write incomplete tag data to.</param>
            <param name="value">The value.</param>
            <param name="valueInfo">Information about the value. Can be <c>null</c>.</param>
            <param name="valueType">Type of the value.</param>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializeString(TagTool.IO.EndianWriter,System.String,TagTool.Tags.TagFieldAttribute)">
            <summary>
            Serializes a string.
            </summary>
            <param name="writer">The writer to write to.</param>
            <param name="str">The string to serialize.</param>
            <param name="valueInfo">Information about the value.</param>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializeTagReference(TagTool.Serialization.ISerializationContext,TagTool.Serialization.IDataBlock,TagTool.Cache.CachedTag,TagTool.Tags.TagFieldAttribute)">
            <summary>
            Serializes a tag reference.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="block">The block to write to.</param>
            <param name="referencedTag">The referenced tag.</param>
            <param name="valueInfo">Information about the value. Can be <c>null</c>.</param>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializeDataReference(System.IO.MemoryStream,TagTool.Serialization.IDataBlock,System.Byte[],TagTool.Tags.TagFieldAttribute)">
            <summary>
            Serializes a data reference composed of raw bytes.
            </summary>
            <param name="tagStream">The stream to write completed blocks of tag data to.</param>
            <param name="block">The temporary block to write incomplete tag data to.</param>
            <param name="data">The data.</param>
            <param name="valueInfo">Information about the value. Can be <c>null</c>.</param>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializeInlineArray(TagTool.Serialization.ISerializationContext,System.IO.MemoryStream,TagTool.Serialization.IDataBlock,System.Array,TagTool.Tags.TagFieldAttribute,System.Type)">
            <summary>
            Serializes an inline array.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="tagStream">The stream to write completed blocks of tag data to.</param>
            <param name="block">The temporary block to write incomplete tag data to.</param>
            <param name="data">The array.</param>
            <param name="valueInfo">Information about the value. Can be <c>null</c>.</param>
            <param name="valueType">The type of the value.</param>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializeTagBlock(TagTool.Serialization.ISerializationContext,System.IO.MemoryStream,TagTool.Serialization.IDataBlock,System.Object,System.Type,TagTool.Tags.TagFieldAttribute)">
            <summary>
            Serializes a tag block.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="tagStream">The stream to write completed blocks of tag data to.</param>
            <param name="block">The temporary block to write incomplete tag data to.</param>
            <param name="list">The list of values in the tag block.</param>
            <param name="listType">Type of the list.</param>
            <param name="valueInfo">Information about the value. Can be <c>null</c>.</param>
        </member>
        <member name="M:TagTool.Serialization.TagSerializer.SerializeTagBlockAsList(TagTool.Serialization.ISerializationContext,System.IO.MemoryStream,TagTool.Serialization.IDataBlock,System.Object,System.Type,TagTool.Tags.TagFieldAttribute)">
            <summary>
            Serializes a tag block.
            </summary>
            <param name="context">The serialization context to use.</param>
            <param name="tagStream">The stream to write completed blocks of tag data to.</param>
            <param name="block">The temporary block to write incomplete tag data to.</param>
            <param name="list">The list of values in the tag block.</param>
            <param name="listType">Type of the list.</param>
            <param name="valueInfo">Information about the value. Can be <c>null</c>.</param>
        </member>
        <member name="T:TagTool.Shaders.ShaderConverter">
            <summary>
            Utility class for converting shader bytecode between rendering pipelines.
            </summary>
        </member>
        <member name="M:TagTool.Shaders.ShaderConverter.ConvertNewVertexShaderToOld(System.Byte[],System.Int32,TagTool.Geometry.VertexType)">
            <summary>
            Converts a new (1.235640+) vertex shader to one compatible with the 1.106708 pipeline.
            Note that this requires that models have binormals set so that X = Position.W and Y = Tangent.W.
            </summary>
            <param name="shaderData">The shader bytecode to convert.</param>
            <param name="mode">The drawing mode.</param>
            <param name="type">The vertex type.</param>
            <returns>The new bytecode, or <c>null</c> if conversion failed.</returns>
        </member>
        <member name="M:TagTool.Shaders.ShaderConverter.ConvertNewPixelShaderToOld(System.Byte[],System.Int32)">
            <summary>
            Converts a new (1.235640+) pixel shader to one compatible with the 1.106708 pipeline.
            </summary>
            <param name="shaderData">The shader bytecode to convert.</param>
            <param name="mode">The drawing mode.</param>
            <returns>The new bytecode, or <c>null</c> if conversion failed.</returns>
        </member>
        <member name="M:TagTool.Shaders.ShaderFunctions.ShaderFunctionHelper.GetAnimatedParameters(TagTool.Cache.GameCache,TagTool.Tags.Definitions.RenderMethod,TagTool.Tags.Definitions.RenderMethodTemplate)">
            <summary>
            Retrieves a list of all animated parameters in a RenderMethod.
            </summary>
        </member>
        <member name="M:TagTool.Shaders.ShaderFunctions.ShaderFunctionHelper.BuildAnimatedParameters(TagTool.Cache.GameCache,TagTool.Tags.Definitions.RenderMethod,TagTool.Tags.Definitions.RenderMethodTemplate,System.Collections.Generic.List{TagTool.Shaders.ShaderFunctions.ShaderFunctionHelper.AnimatedParameter})">
            <summary>
            Builds a list of animated parameters into a RenderMethod.
            </summary>
        </member>
        <member name="M:TagTool.Shaders.ShaderGenerator.RenderMethodDefinitionGenerator.FixupMethodOptionName(System.String)">
            <summary>
            Contains hardcoded fixups for shader method or option names
            </summary>
        </member>
        <member name="M:TagTool.Shaders.ShaderGenerator.ShaderGeneratorNew.GenerateTemplateSafe(TagTool.Cache.GameCache,System.IO.Stream,TagTool.Tags.Definitions.RenderMethodDefinition,System.String,TagTool.Tags.Definitions.PixelShader@,TagTool.Tags.Definitions.VertexShader@)">
            <summary>
            Non async
            </summary>
        </member>
        <member name="M:TagTool.Shaders.ShaderGenerator.ShaderGeneratorNew.GenerateTemplate(TagTool.Cache.GameCache,TagTool.Tags.Definitions.RenderMethodDefinition,TagTool.Tags.Definitions.GlobalVertexShader,TagTool.Tags.Definitions.GlobalPixelShader,System.Collections.Generic.List{TagTool.Tags.Definitions.RenderMethodOption.ParameterBlock},System.String,TagTool.Tags.Definitions.PixelShader@,TagTool.Tags.Definitions.VertexShader@)">
            <summary>
            Async compatible -- WARNING: no serialization is to occur within the scope of this function. pixl and vtsh must be serialized after this function.
            </summary>
        </member>
        <member name="M:TagTool.Shaders.ShaderMatching.ShaderMatcherNew.FindClosestTemplate(TagTool.Cache.CachedTag,TagTool.Tags.Definitions.RenderMethodTemplate,System.Boolean)">
            <summary>
            Find the closest template in the base cache to the input template.
            </summary>
        </member>
        <member name="M:TagTool.Shaders.ShaderMatching.ShaderMatcherNew.GetBestTag(TagTool.Shaders.ShaderMatching.SortingInterface,System.Collections.Generic.Dictionary{TagTool.Cache.CachedTag,System.Int64},System.String,System.String)">
            <summary>
            Returns the best render_method_template tag match using the given dictionary and source rmt2
            </summary>
        </member>
        <member name="M:TagTool.Shaders.ShaderMatching.ShaderMatcherNew.MatchRenderMethods(TagTool.Tags.Definitions.RenderMethod,TagTool.Tags.Definitions.RenderMethodTemplate,TagTool.Tags.Definitions.RenderMethodTemplate)">
            <summary>
            Modifies the input render method to make it work using the matchedTemplate
            </summary>
        </member>
        <member name="M:TagTool.Shaders.ShaderMatching.ShaderMatcherNew.RebuildRmt2Options(TagTool.Shaders.ShaderMatching.ShaderMatcherNew.Rmt2Descriptor,System.IO.Stream,System.IO.Stream)">
            <summary>
            Rebuilds an rmt2's options in memory so indices match up with the base cache
            </summary>
        </member>
        <member name="T:TagTool.Layouts.ArrayTagLayoutField">
            <summary>
            An array of fields in a tag layout.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.ArrayTagLayoutField.UnderlyingField">
            <summary>
            Gets the repeated field.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.ArrayTagLayoutField.Count">
            <summary>
            The number of elements in the array.
            </summary>
        </member>
        <member name="M:TagTool.Layouts.AssemblyPluginLoader.LoadPlugin(System.Xml.XmlReader,System.String,TagTool.Common.Tag)">
            <summary>
            Parses an XML plugin into a <see cref="T:TagTool.Layouts.TagLayout"/>.
            </summary>
            <param name="reader">The XmlReader to read the plugin XML from.</param>
            <param name="name">The name to give the resulting layout.</param>
            <param name="groupTag">The group tag to give to the resulting layout.</param>
            <returns>The results from loading the plugin.</returns>
        </member>
        <member name="M:TagTool.Layouts.AssemblyPluginLoader.HandleValueElement(System.Xml.XmlReader,System.String)">
            <summary>
            Handles an element which describes how a value
            should be read from the cache file.
            </summary>
            <param name="reader">The XmlReader that read the element.</param>
            <param name="elementName">The element's name.</param>
        </member>
        <member name="T:TagTool.Layouts.AssemblyPluginLoadResults">
            <summary>
            Contains the results from loading an Assembly plugin.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.AssemblyPluginLoadResults.Layout">
            <summary>
            The layout that was loaded.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.AssemblyPluginLoadResults.Conflicts">
            <summary>
            Gets a list of any conflicts that occurred.
            Conflicts occur when a field is not at the offset it is expected to be at.
            </summary>
        </member>
        <member name="T:TagTool.Layouts.AssemblyPluginFieldConflict">
            <summary>
            Contains information about a conflict in an Assembly plugin.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.AssemblyPluginFieldConflict.Name">
            <summary>
            Gets the name of the field that caused the conflict.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.AssemblyPluginFieldConflict.Offset">
            <summary>
            Gets the offset of the field that caused the conflict.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.AssemblyPluginFieldConflict.Block">
            <summary>
            Gets the name of the block that the field is in. Can be <c>null</c> if the field is not in a tag block.
            </summary>
        </member>
        <member name="T:TagTool.Layouts.BasicTagLayoutField">
            <summary>
            A basic field in a tag layout.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.BasicTagLayoutField.Type">
            <summary>
            The field's type.
            </summary>
        </member>
        <member name="T:TagTool.Layouts.BasicFieldType">
            <summary>
            Basic field types that can appear in tag layouts.
            </summary>
        </member>
        <member name="T:TagTool.Layouts.EnumTagLayoutField">
            <summary>
            An enum field in a tag layout.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.EnumTagLayoutField.Layout">
            <summary>
            The layout of the enum field.
            </summary>
        </member>
        <member name="T:TagTool.Layouts.EnumLayout">
            <summary>
            A layout for an enum in a tag layout.
            </summary>
        </member>
        <member name="M:TagTool.Layouts.EnumLayout.#ctor(System.String,TagTool.Layouts.BasicFieldType)">
            <summary>
            Creates a named enum layout.
            </summary>
            <param name="name">The name of the layout.</param>
            <param name="underlyingType">The underlying type of the enum. Must be an integer type.</param>
        </member>
        <member name="P:TagTool.Layouts.EnumLayout.Name">
            <summary>
            Gets the name of the enum.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.EnumLayout.UnderlyingType">
            <summary>
            Gets the underlying type of the enum.
            Must be an integer type.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.EnumLayout.Values">
            <summary>
            Gets a list of the values in the enum.
            </summary>
        </member>
        <member name="M:TagTool.Layouts.EnumLayout.Add(System.String)">
            <summary>
            Adds a value to the enum which follows the last value added.
            If no values are in the enum, its value will be 0.
            </summary>
            <param name="name">The name of the value.</param>
            <returns>The created <see cref="T:TagTool.Layouts.EnumValue"/>.</returns>
        </member>
        <member name="M:TagTool.Layouts.EnumLayout.Add(System.String,System.Int32)">
            <summary>
            Adds a value to the enum.
            </summary>
            <param name="name">The name of the value.</param>
            <param name="val">The value.</param>
            <returns>The created <see cref="T:TagTool.Layouts.EnumValue"/>.</returns>
        </member>
        <member name="M:TagTool.Layouts.EnumLayout.Add(TagTool.Layouts.EnumValue)">
            <summary>
            Adds a value to the enum.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:TagTool.Layouts.EnumLayout.AddRange(System.Collections.Generic.IEnumerable{TagTool.Layouts.EnumValue})">
            <summary>
            Adds a range of values to the enum.
            </summary>
            <param name="values">The values to add.</param>
        </member>
        <member name="T:TagTool.Layouts.EnumValue">
            <summary>
            Maps an enum value name to an integer value.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.EnumValue.Name">
            <summary>
            Gets the name of the value.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.EnumValue.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:TagTool.Layouts.ITagLayoutFieldVisitor">
            <summary>
            Interface for a tag layout field visitor.
            </summary>
        </member>
        <member name="T:TagTool.Layouts.StringTagLayoutField">
            <summary>
            A string field in a tag layout.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.StringTagLayoutField.Size">
            <summary>
            The size of the string buffer in bytes.
            </summary>
        </member>
        <member name="T:TagTool.Layouts.TagBlockTagLayoutField">
            <summary>
            A tag block field in a tag layout.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.TagBlockTagLayoutField.ElementLayout">
            <summary>
            The layout of each element in the tag block.
            </summary>
        </member>
        <member name="T:TagTool.Layouts.TagLayout">
            <summary>
            Holds information about the layout of tag data.
            </summary>
        </member>
        <member name="M:TagTool.Layouts.TagLayout.#ctor(System.String,System.UInt32)">
            <summary>
            Creates a tag layout with a name and a size in bytes.
            It will not have a group tag associated with it.
            </summary>
            <param name="name">The name of the layout.</param>
            <param name="size">The size of the layout in bytes.</param>
        </member>
        <member name="M:TagTool.Layouts.TagLayout.#ctor(System.String,System.UInt32,TagTool.Common.Tag)">
            <summary>
            Creates a tag layout with a name, a size in bytes, and a group tag.
            </summary>
            <param name="name">The name of the layout.</param>
            <param name="size">The size of the layout.</param>
            <param name="groupTag">The group tag.</param>
        </member>
        <member name="P:TagTool.Layouts.TagLayout.Name">
            <summary>
            Gets the name of the layout.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.TagLayout.Size">
            <summary>
            The size of the tag data structure in bytes.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.TagLayout.GroupTag">
            <summary>
            The layout's group tag (or 0 for none).
            </summary>
        </member>
        <member name="P:TagTool.Layouts.TagLayout.Fields">
            <summary>
            Gets a list of fields in the layout.
            </summary>
        </member>
        <member name="M:TagTool.Layouts.TagLayout.Add(TagTool.Layouts.TagLayoutField)">
            <summary>
            Adds a field to the layout.
            </summary>
            <param name="field">The field to add.</param>
        </member>
        <member name="M:TagTool.Layouts.TagLayout.AddRange(System.Collections.Generic.IEnumerable{TagTool.Layouts.TagLayoutField})">
            <summary>
            Adds a range of fields to the layout.
            </summary>
            <param name="fields">The fields to add.</param>
        </member>
        <member name="M:TagTool.Layouts.TagLayout.Accept(TagTool.Layouts.ITagLayoutFieldVisitor)">
            <summary>
            Visits each field in the tag layout.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="T:TagTool.Layouts.TagLayoutField">
            <summary>
            Base class for a field in a tag layout.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.TagLayoutField.Name">
            <summary>
            Gets the name of the field.
            </summary>
        </member>
        <member name="P:TagTool.Layouts.TagLayoutField.DataAlign">
            <summary>
            The power of two to align the field's data on.
            Only applicable to fields which contain pointers.
            Can be 0 if not set.
            </summary>
        </member>
        <member name="T:TagTool.Layouts.TagLayoutWriter">
            <summary>
            Base for a class which can write tag layouts to files.
            </summary>
        </member>
        <member name="M:TagTool.Layouts.TagLayoutWriter.GetSuggestedFileName(TagTool.Layouts.TagLayout)">
            <summary>
            Gets the suggested filename for a layout.
            </summary>
            <param name="layout">The layout.</param>
            <returns>A suggested filename to write the layout to.</returns>
        </member>
        <member name="M:TagTool.Layouts.TagLayoutWriter.WriteLayout(TagTool.Layouts.TagLayout,System.IO.TextWriter)">
            <summary>
            Writes a layout to a stream.
            </summary>
            <param name="layout">The layout to write.</param>
            <param name="writer">The writer to write to.</param>
        </member>
        <member name="M:TagTool.Layouts.TagLayoutWriter.WriteLayout(TagTool.Layouts.TagLayout,System.String)">
            <summary>
            Writes a layout to a file.
            </summary>
            <param name="layout">The layout to write.</param>
            <param name="path">The path to write to.</param>
        </member>
        <member name="T:TagTool.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:TagTool.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:TagTool.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:TagTool.Tools.Geometry.BMFHeader">
            <summary>
            Generic render geometry class for interfacing with other tools. Based on gen3 formats but should support any halo engine. Names\file extension temporary
            </summary>
        </member>
        <member name="T:TagTool.Tools.Geometry.BMFMarkers">
            <summary>
            Name is structured as: marker_group:marker_name, marker groups are extracted then each marker is placed in the right group and given the right indices
            </summary>
        </member>
        <member name="T:System.Collections.Generic.FlipFlopDictionary`2">
            <summary>
            A Bi-Directional Dictionary where keys are also values, and values are also keys.
            *** NO DUPLICATE KEYS OR VALUES ***.
            </summary>
            <typeparam name="TFlip"></typeparam>
            <typeparam name="TFlop"></typeparam>
        </member>
        <member name="T:System.Half">
             <summary>
             Represents a half-precision floating point number. 
             </summary>
             <remarks>
             Note:
                 Half is not fast enought and precision is also very bad, 
                 so is should not be used for matemathical computation (use Single instead).
                 The main advantage of Half type is lower memory cost: two bytes per number. 
                 Half is typically used in graphical applications.
                 
             Note: 
                 All functions, where is used conversion half->float/float->half, 
                 are approx. ten times slower than float->double/double->float, i.e. ~3ns on 2GHz CPU.
            
             References:
                 - Fast Half Float Conversions, Jeroen van der Zijp, link: http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf
                 - IEEE 754 revision, link: http://grouper.ieee.org/groups/754/
             </remarks>
        </member>
        <member name="F:System.Half.value">
            <summary>
            Internal representation of the half-precision floating-point number.
            </summary>
        </member>
        <member name="F:System.Half.Epsilon">
            <summary>
            Represents the smallest positive System.Half value greater than zero. This field is constant.
            </summary>
        </member>
        <member name="F:System.Half.MaxValue">
            <summary>
            Represents the largest possible value of System.Half. This field is constant.
            </summary>
        </member>
        <member name="F:System.Half.MinValue">
            <summary>
            Represents the smallest possible value of System.Half. This field is constant.
            </summary>
        </member>
        <member name="F:System.Half.NaN">
            <summary>
            Represents not a number (NaN). This field is constant.
            </summary>
        </member>
        <member name="F:System.Half.NegativeInfinity">
            <summary>
            Represents negative infinity. This field is constant.
            </summary>
        </member>
        <member name="F:System.Half.PositiveInfinity">
            <summary>
            Represents positive infinity. This field is constant.
            </summary>
        </member>
        <member name="M:System.Half.#ctor(System.Single)">
            <summary>
            Initializes a new instance of System.Half to the value of the specified single-precision floating-point number.
            </summary>
            <param name="value">The value to represent as a System.Half.</param>
        </member>
        <member name="M:System.Half.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of System.Half to the value of the specified 32-bit signed integer.
            </summary>
            <param name="value">The value to represent as a System.Half.</param>
        </member>
        <member name="M:System.Half.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of System.Half to the value of the specified 64-bit signed integer.
            </summary>
            <param name="value">The value to represent as a System.Half.</param>
        </member>
        <member name="M:System.Half.#ctor(System.Double)">
            <summary>
            Initializes a new instance of System.Half to the value of the specified double-precision floating-point number.
            </summary>
            <param name="value">The value to represent as a System.Half.</param>
        </member>
        <member name="M:System.Half.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of System.Half to the value of the specified decimal number.
            </summary>
            <param name="value">The value to represent as a System.Half.</param>
        </member>
        <member name="M:System.Half.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of System.Half to the value of the specified 32-bit unsigned integer.
            </summary>
            <param name="value">The value to represent as a System.Half.</param>
        </member>
        <member name="M:System.Half.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of System.Half to the value of the specified 64-bit unsigned integer.
            </summary>
            <param name="value">The value to represent as a System.Half.</param>
        </member>
        <member name="M:System.Half.Negate(System.Half)">
            <summary>
            Returns the result of multiplying the specified System.Half value by negative one.
            </summary>
            <param name="half">A System.Half.</param>
            <returns>A System.Half with the value of half, but the opposite sign. -or- Zero, if half is zero.</returns>
        </member>
        <member name="M:System.Half.Add(System.Half,System.Half)">
            <summary>
            Adds two specified System.Half values.
            </summary>
            <param name="half1">A System.Half.</param>
            <param name="half2">A System.Half.</param>
            <returns>A System.Half value that is the sum of half1 and half2.</returns>
        </member>
        <member name="M:System.Half.Subtract(System.Half,System.Half)">
            <summary>
            Subtracts one specified System.Half value from another.
            </summary>
            <param name="half1">A System.Half (the minuend).</param>
            <param name="half2">A System.Half (the subtrahend).</param>
            <returns>The System.Half result of subtracting half2 from half1.</returns>
        </member>
        <member name="M:System.Half.Multiply(System.Half,System.Half)">
            <summary>
            Multiplies two specified System.Half values.
            </summary>
            <param name="half1">A System.Half (the multiplicand).</param>
            <param name="half2">A System.Half (the multiplier).</param>
            <returns>A System.Half that is the result of multiplying half1 and half2.</returns>
        </member>
        <member name="M:System.Half.Divide(System.Half,System.Half)">
            <summary>
            Divides two specified System.Half values.
            </summary>
            <param name="half1">A System.Half (the dividend).</param>
            <param name="half2">A System.Half (the divisor).</param>
            <returns>The System.Half that is the result of dividing half1 by half2.</returns>
            <exception cref="T:System.DivideByZeroException">half2 is zero.</exception>
        </member>
        <member name="M:System.Half.op_UnaryPlus(System.Half)">
            <summary>
            Returns the value of the System.Half operand (the sign of the operand is unchanged).
            </summary>
            <param name="half">The System.Half operand.</param>
            <returns>The value of the operand, half.</returns>
        </member>
        <member name="M:System.Half.op_UnaryNegation(System.Half)">
            <summary>
            Negates the value of the specified System.Half operand.
            </summary>
            <param name="half">The System.Half operand.</param>
            <returns>The result of half multiplied by negative one (-1).</returns>
        </member>
        <member name="M:System.Half.op_Increment(System.Half)">
            <summary>
            Increments the System.Half operand by 1.
            </summary>
            <param name="half">The System.Half operand.</param>
            <returns>The value of half incremented by 1.</returns>
        </member>
        <member name="M:System.Half.op_Decrement(System.Half)">
            <summary>
            Decrements the System.Half operand by one.
            </summary>
            <param name="half">The System.Half operand.</param>
            <returns>The value of half decremented by 1.</returns>
        </member>
        <member name="M:System.Half.op_Addition(System.Half,System.Half)">
            <summary>
            Adds two specified System.Half values.
            </summary>
            <param name="half1">A System.Half.</param>
            <param name="half2">A System.Half.</param>
            <returns>The System.Half result of adding half1 and half2.</returns>
        </member>
        <member name="M:System.Half.op_Subtraction(System.Half,System.Half)">
            <summary>
            Subtracts two specified System.Half values.
            </summary>
            <param name="half1">A System.Half.</param>
            <param name="half2">A System.Half.</param>
            <returns>The System.Half result of subtracting half1 and half2.</returns>        
        </member>
        <member name="M:System.Half.op_Multiply(System.Half,System.Half)">
            <summary>
            Multiplies two specified System.Half values.
            </summary>
            <param name="half1">A System.Half.</param>
            <param name="half2">A System.Half.</param>
            <returns>The System.Half result of multiplying half1 by half2.</returns>
        </member>
        <member name="M:System.Half.op_Division(System.Half,System.Half)">
            <summary>
            Divides two specified System.Half values.
            </summary>
            <param name="half1">A System.Half (the dividend).</param>
            <param name="half2">A System.Half (the divisor).</param>
            <returns>The System.Half result of half1 by half2.</returns>
        </member>
        <member name="M:System.Half.op_Equality(System.Half,System.Half)">
            <summary>
            Returns a value indicating whether two instances of System.Half are equal.
            </summary>
            <param name="half1">A System.Half.</param>
            <param name="half2">A System.Half.</param>
            <returns>true if half1 and half2 are equal; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.op_Inequality(System.Half,System.Half)">
            <summary>
            Returns a value indicating whether two instances of System.Half are not equal.
            </summary>
            <param name="half1">A System.Half.</param>
            <param name="half2">A System.Half.</param>
            <returns>true if half1 and half2 are not equal; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.op_LessThan(System.Half,System.Half)">
            <summary>
            Returns a value indicating whether a specified System.Half is less than another specified System.Half.
            </summary>
            <param name="half1">A System.Half.</param>
            <param name="half2">A System.Half.</param>
            <returns>true if half1 is less than half1; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.op_GreaterThan(System.Half,System.Half)">
            <summary>
            Returns a value indicating whether a specified System.Half is greater than another specified System.Half.
            </summary>
            <param name="half1">A System.Half.</param>
            <param name="half2">A System.Half.</param>
            <returns>true if half1 is greater than half2; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.op_LessThanOrEqual(System.Half,System.Half)">
            <summary>
            Returns a value indicating whether a specified System.Half is less than or equal to another specified System.Half.
            </summary>
            <param name="half1">A System.Half.</param>
            <param name="half2">A System.Half.</param>
            <returns>true if half1 is less than or equal to half2; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.op_GreaterThanOrEqual(System.Half,System.Half)">
            <summary>
            Returns a value indicating whether a specified System.Half is greater than or equal to another specified System.Half.
            </summary>
            <param name="half1">A System.Half.</param>
            <param name="half2">A System.Half.</param>
            <returns>true if half1 is greater than or equal to half2; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.Byte)~System.Half">
            <summary>
            Converts an 8-bit unsigned integer to a System.Half.
            </summary>
            <param name="value">An 8-bit unsigned integer.</param>
            <returns>A System.Half that represents the converted 8-bit unsigned integer.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.Int16)~System.Half">
            <summary>
            Converts a 16-bit signed integer to a System.Half.
            </summary>
            <param name="value">A 16-bit signed integer.</param>
            <returns>A System.Half that represents the converted 16-bit signed integer.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.Char)~System.Half">
            <summary>
            Converts a Unicode character to a System.Half.
            </summary>
            <param name="value">A Unicode character.</param>
            <returns>A System.Half that represents the converted Unicode character.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.Int32)~System.Half">
            <summary>
            Converts a 32-bit signed integer to a System.Half.
            </summary>
            <param name="value">A 32-bit signed integer.</param>
            <returns>A System.Half that represents the converted 32-bit signed integer.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.Int64)~System.Half">
            <summary>
            Converts a 64-bit signed integer to a System.Half.
            </summary>
            <param name="value">A 64-bit signed integer.</param>
            <returns>A System.Half that represents the converted 64-bit signed integer.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Single)~System.Half">
            <summary>
            Converts a single-precision floating-point number to a System.Half.
            </summary>
            <param name="value">A single-precision floating-point number.</param>
            <returns>A System.Half that represents the converted single-precision floating point number.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Double)~System.Half">
            <summary>
            Converts a double-precision floating-point number to a System.Half.
            </summary>
            <param name="value">A double-precision floating-point number.</param>
            <returns>A System.Half that represents the converted double-precision floating point number.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Decimal)~System.Half">
            <summary>
            Converts a decimal number to a System.Half.
            </summary>
            <param name="value">decimal number</param>
            <returns>A System.Half that represents the converted decimal number.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Half)~System.Byte">
            <summary>
            Converts a System.Half to an 8-bit unsigned integer.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>An 8-bit unsigned integer that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Half)~System.Char">
            <summary>
            Converts a System.Half to a Unicode character.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>A Unicode character that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Half)~System.Int16">
            <summary>
            Converts a System.Half to a 16-bit signed integer.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>A 16-bit signed integer that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Half)~System.Int32">
            <summary>
            Converts a System.Half to a 32-bit signed integer.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>A 32-bit signed integer that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Half)~System.Int64">
            <summary>
            Converts a System.Half to a 64-bit signed integer.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>A 64-bit signed integer that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.Half)~System.Single">
            <summary>
            Converts a System.Half to a single-precision floating-point number.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>A single-precision floating-point number that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.Half)~System.Double">
            <summary>
            Converts a System.Half to a double-precision floating-point number.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>A double-precision floating-point number that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Half)~System.Decimal">
            <summary>
            Converts a System.Half to a decimal number.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>A decimal number that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.SByte)~System.Half">
            <summary>
            Converts an 8-bit signed integer to a System.Half.
            </summary>
            <param name="value">An 8-bit signed integer.</param>
            <returns>A System.Half that represents the converted 8-bit signed integer.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.UInt16)~System.Half">
            <summary>
            Converts a 16-bit unsigned integer to a System.Half.
            </summary>
            <param name="value">A 16-bit unsigned integer.</param>
            <returns>A System.Half that represents the converted 16-bit unsigned integer.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.UInt32)~System.Half">
            <summary>
            Converts a 32-bit unsigned integer to a System.Half.
            </summary>
            <param name="value">A 32-bit unsigned integer.</param>
            <returns>A System.Half that represents the converted 32-bit unsigned integer.</returns>
        </member>
        <member name="M:System.Half.op_Implicit(System.UInt64)~System.Half">
            <summary>
            Converts a 64-bit unsigned integer to a System.Half.
            </summary>
            <param name="value">A 64-bit unsigned integer.</param>
            <returns>A System.Half that represents the converted 64-bit unsigned integer.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Half)~System.SByte">
            <summary>
            Converts a System.Half to an 8-bit signed integer.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>An 8-bit signed integer that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Half)~System.UInt16">
            <summary>
            Converts a System.Half to a 16-bit unsigned integer.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>A 16-bit unsigned integer that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Half)~System.UInt32">
            <summary>
            Converts a System.Half to a 32-bit unsigned integer.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>A 32-bit unsigned integer that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.op_Explicit(System.Half)~System.UInt64">
            <summary>
            Converts a System.Half to a 64-bit unsigned integer.
            </summary>
            <param name="value">A System.Half to convert.</param>
            <returns>A 64-bit unsigned integer that represents the converted System.Half.</returns>
        </member>
        <member name="M:System.Half.CompareTo(System.Half)">
            <summary>
            Compares this instance to a specified System.Half object.
            </summary>
            <param name="other">A System.Half object.</param>
            <returns>
            A signed number indicating the relative values of this instance and value.
            Return Value Meaning Less than zero This instance is less than value. Zero
            This instance is equal to value. Greater than zero This instance is greater than value.
            </returns>
        </member>
        <member name="M:System.Half.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified System.Object.
            </summary>
            <param name="obj">An System.Object or null.</param>
            <returns>
            A signed number indicating the relative values of this instance and value.
            Return Value Meaning Less than zero This instance is less than value. Zero
            This instance is equal to value. Greater than zero This instance is greater
            than value. -or- value is null.
            </returns>
            <exception cref="T:System.ArgumentException">value is not a System.Half</exception>
        </member>
        <member name="M:System.Half.Equals(System.Half)">
            <summary>
            Returns a value indicating whether this instance and a specified System.Half object represent the same value.
            </summary>
            <param name="other">A System.Half object to compare to this instance.</param>
            <returns>true if value is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance and a specified System.Object
            represent the same type and value.
            </summary>
            <param name="obj">An System.Object.</param>
            <returns>true if value is a System.Half and equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:System.Half.GetTypeCode">
            <summary>
            Returns the System.TypeCode for value type System.Half.
            </summary>
            <returns>The enumerated constant (TypeCode)255.</returns>
        </member>
        <member name="M:System.Half.GetBytes(System.Half)">
            <summary>
            Returns the specified half-precision floating point value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 2.</returns>
        </member>
        <member name="M:System.Half.GetBits(System.Half)">
            <summary>
            Converts the value of a specified instance of System.Half to its equivalent binary representation.
            </summary>
            <param name="value">A System.Half value.</param>
            <returns>A 16-bit unsigned integer that contain the binary representation of value.</returns>        
        </member>
        <member name="M:System.Half.ToHalf(System.Byte[],System.Int32)">
            <summary>
            Returns a half-precision floating point number converted from two bytes
            at a specified position in a byte array.
            </summary>
            <param name="value">An array of bytes.</param>
            <param name="startIndex">The starting position within value.</param>
            <returns>A half-precision floating point number formed by two bytes beginning at startIndex.</returns>
            <exception cref="T:System.ArgumentException">
            startIndex is greater than or equal to the length of value minus 1, and is
            less than or equal to the length of value minus 1.
            </exception>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is less than zero or greater than the length of value minus 1.</exception>
        </member>
        <member name="M:System.Half.ToHalf(System.UInt16)">
            <summary>
            Returns a half-precision floating point number converted from its binary representation.
            </summary>
            <param name="bits">Binary representation of System.Half value</param>
            <returns>A half-precision floating point number formed by its binary representation.</returns>
        </member>
        <member name="M:System.Half.Sign(System.Half)">
            <summary>
            Returns a value indicating the sign of a half-precision floating-point number.
            </summary>
            <param name="value">A signed number.</param>
            <returns>
            A number indicating the sign of value. Number Description -1 value is less
            than zero. 0 value is equal to zero. 1 value is greater than zero.
            </returns>
            <exception cref="T:System.ArithmeticException">value is equal to System.Half.NaN.</exception>
        </member>
        <member name="M:System.Half.Abs(System.Half)">
            <summary>
            Returns the absolute value of a half-precision floating-point number.
            </summary>
            <param name="value">A number in the range System.Half.MinValue ≤ value ≤ System.Half.MaxValue.</param>
            <returns>A half-precision floating-point number, x, such that 0 ≤ x ≤System.Half.MaxValue.</returns>
        </member>
        <member name="M:System.Half.Max(System.Half,System.Half)">
            <summary>
            Returns the larger of two half-precision floating-point numbers.
            </summary>
            <param name="value1">The first of two half-precision floating-point numbers to compare.</param>
            <param name="value2">The second of two half-precision floating-point numbers to compare.</param>
            <returns>
            Parameter value1 or value2, whichever is larger. If value1, or value2, or both val1
            and value2 are equal to System.Half.NaN, System.Half.NaN is returned.
            </returns>
        </member>
        <member name="M:System.Half.Min(System.Half,System.Half)">
            <summary>
            Returns the smaller of two half-precision floating-point numbers.
            </summary>
            <param name="value1">The first of two half-precision floating-point numbers to compare.</param>
            <param name="value2">The second of two half-precision floating-point numbers to compare.</param>
            <returns>
            Parameter value1 or value2, whichever is smaller. If value1, or value2, or both val1
            and value2 are equal to System.Half.NaN, System.Half.NaN is returned.
            </returns>
        </member>
        <member name="M:System.Half.IsNaN(System.Half)">
            <summary>
            Returns a value indicating whether the specified number evaluates to not a number (System.Half.NaN).
            </summary>
            <param name="half">A half-precision floating-point number.</param>
            <returns>true if value evaluates to not a number (System.Half.NaN); otherwise, false.</returns>
        </member>
        <member name="M:System.Half.IsInfinity(System.Half)">
            <summary>
            Returns a value indicating whether the specified number evaluates to negative or positive infinity.
            </summary>
            <param name="half">A half-precision floating-point number.</param>
            <returns>true if half evaluates to System.Half.PositiveInfinity or System.Half.NegativeInfinity; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.IsNegativeInfinity(System.Half)">
            <summary>
            Returns a value indicating whether the specified number evaluates to negative infinity.
            </summary>
            <param name="half">A half-precision floating-point number.</param>
            <returns>true if half evaluates to System.Half.NegativeInfinity; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.IsPositiveInfinity(System.Half)">
            <summary>
            Returns a value indicating whether the specified number evaluates to positive infinity.
            </summary>
            <param name="half">A half-precision floating-point number.</param>
            <returns>true if half evaluates to System.Half.PositiveInfinity; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.Parse(System.String)">
            <summary>
            Converts the string representation of a number to its System.Half equivalent.
            </summary>
            <param name="value">The string representation of the number to convert.</param>
            <returns>The System.Half number equivalent to the number contained in value.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
            <exception cref="T:System.FormatException">value is not in the correct format.</exception>
            <exception cref="T:System.OverflowException">value represents a number less than System.Half.MinValue or greater than System.Half.MaxValue.</exception>
        </member>
        <member name="M:System.Half.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the string representation of a number to its System.Half equivalent 
            using the specified culture-specific format information.
            </summary>
            <param name="value">The string representation of the number to convert.</param>
            <param name="provider">An System.IFormatProvider that supplies culture-specific parsing information about value.</param>
            <returns>The System.Half number equivalent to the number contained in s as specified by provider.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
            <exception cref="T:System.FormatException">value is not in the correct format.</exception>
            <exception cref="T:System.OverflowException">value represents a number less than System.Half.MinValue or greater than System.Half.MaxValue.</exception>
        </member>
        <member name="M:System.Half.Parse(System.String,System.Globalization.NumberStyles)">
            <summary>
            Converts the string representation of a number in a specified style to its System.Half equivalent.
            </summary>
            <param name="value">The string representation of the number to convert.</param>
            <param name="style">
            A bitwise combination of System.Globalization.NumberStyles values that indicates
            the style elements that can be present in value. A typical value to specify is
            System.Globalization.NumberStyles.Number.
            </param>
            <returns>The System.Half number equivalent to the number contained in s as specified by style.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
            <exception cref="T:System.ArgumentException">
            style is not a System.Globalization.NumberStyles value. -or- style is the
            System.Globalization.NumberStyles.AllowHexSpecifier value.
            </exception>
            <exception cref="T:System.FormatException">value is not in the correct format.</exception>
            <exception cref="T:System.OverflowException">value represents a number less than System.Half.MinValue or greater than System.Half.MaxValue.</exception>
        </member>
        <member name="M:System.Half.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
            <summary>
            Converts the string representation of a number to its System.Half equivalent 
            using the specified style and culture-specific format.
            </summary>
            <param name="value">The string representation of the number to convert.</param>
            <param name="style">
            A bitwise combination of System.Globalization.NumberStyles values that indicates
            the style elements that can be present in value. A typical value to specify is 
            System.Globalization.NumberStyles.Number.
            </param>
            <param name="provider">An System.IFormatProvider object that supplies culture-specific information about the format of value.</param>
            <returns>The System.Half number equivalent to the number contained in s as specified by style and provider.</returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
            <exception cref="T:System.ArgumentException">
            style is not a System.Globalization.NumberStyles value. -or- style is the
            System.Globalization.NumberStyles.AllowHexSpecifier value.
            </exception>
            <exception cref="T:System.FormatException">value is not in the correct format.</exception>
            <exception cref="T:System.OverflowException">value represents a number less than System.Half.MinValue or greater than System.Half.MaxValue.</exception>
        </member>
        <member name="M:System.Half.TryParse(System.String,System.Half@)">
            <summary>
            Converts the string representation of a number to its System.Half equivalent.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string representation of the number to convert.</param>
            <param name="result">
            When this method returns, contains the System.Half number that is equivalent
            to the numeric value contained in value, if the conversion succeeded, or is zero
            if the conversion failed. The conversion fails if the s parameter is null,
            is not a number in a valid format, or represents a number less than System.Half.MinValue
            or greater than System.Half.MaxValue. This parameter is passed uninitialized.
            </param>
            <returns>true if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:System.Half.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Half@)">
            <summary>
            Converts the string representation of a number to its System.Half equivalent
            using the specified style and culture-specific format. A return value indicates
            whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string representation of the number to convert.</param>
            <param name="style">
            A bitwise combination of System.Globalization.NumberStyles values that indicates
            the permitted format of value. A typical value to specify is System.Globalization.NumberStyles.Number.
            </param>
            <param name="provider">An System.IFormatProvider object that supplies culture-specific parsing information about value.</param>
            <param name="result">
            When this method returns, contains the System.Half number that is equivalent
            to the numeric value contained in value, if the conversion succeeded, or is zero
            if the conversion failed. The conversion fails if the s parameter is null,
            is not in a format compliant with style, or represents a number less than
            System.Half.MinValue or greater than System.Half.MaxValue. This parameter is passed uninitialized.
            </param>
            <returns>true if s was converted successfully; otherwise, false.</returns>
            <exception cref="T:System.ArgumentException">
            style is not a System.Globalization.NumberStyles value. -or- style 
            is the System.Globalization.NumberStyles.AllowHexSpecifier value.
            </exception>
        </member>
        <member name="M:System.Half.ToString">
            <summary>
            Converts the numeric value of this instance to its equivalent string representation.
            </summary>
            <returns>A string that represents the value of this instance.</returns>
        </member>
        <member name="M:System.Half.ToString(System.IFormatProvider)">
            <summary>
            Converts the numeric value of this instance to its equivalent string representation
            using the specified culture-specific format information.
            </summary>
            <param name="formatProvider">An System.IFormatProvider that supplies culture-specific formatting information.</param>
            <returns>The string representation of the value of this instance as specified by provider.</returns>
        </member>
        <member name="M:System.Half.ToString(System.String)">
            <summary>
            Converts the numeric value of this instance to its equivalent string representation, using the specified format.
            </summary>
            <param name="format">A numeric format string.</param>
            <returns>The string representation of the value of this instance as specified by format.</returns>
        </member>
        <member name="M:System.Half.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the numeric value of this instance to its equivalent string representation 
            using the specified format and culture-specific format information.
            </summary>
            <param name="format">A numeric format string.</param>
            <param name="formatProvider">An System.IFormatProvider that supplies culture-specific formatting information.</param>
            <returns>The string representation of the value of this instance as specified by format and provider.</returns>
            <exception cref="T:System.FormatException">format is invalid.</exception>
        </member>
        <member name="T:System.HalfHelper">
            <summary>
            Helper class for Half conversions and some low level operations.
            This class is internally used in the Half class.
            </summary>
            <remarks>
            References:
                - Fast Half Float Conversions, Jeroen van der Zijp, link: http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf
            </remarks>
        </member>
        <member name="M:System.StringExtensions.ToPascalCase(System.String)">
            <summary>
            Converts a name to pascal case, where words always begin with a capital letter.
            </summary>
            <param name="str">The string to convert.</param>
            <returns>The string converted to pascal case.</returns>
        </member>
    </members>
</doc>
